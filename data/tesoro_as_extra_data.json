{"comment":"\u9a8c\u8bc1\u624b\u673a\u53f7\u662f\u542611\u4f4d","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\u662f\u5426\u662f\u90ae\u7bb1","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"adds a module for placing a voice call. <p>the method is a no-op if the number is blocked.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"checks if the provided zone is an option for the client to connect to. any zone provided must have previously been created by zonemanagement. @param tenantid the tenantid of the connecting envoy. @param zone the zone provided in the envoysummary. @throws illegalargumentexception if the zone is not found.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reduce la lista de vulnerabilidades de zap. @param site @param zaprelations @param groupvulnerabilities @throws malformedurlexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"de las vulnerabilidades encontradas las mapeamos a objetos y las agrupamos por tipo de vulnerabilidad y url","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"jpa spec, 2.1.8.2 (same for all relationship owners): the following mapping defaults apply: [...] table a contains a foreign key to table b. the foreign key column name is formed as the concatenation of the following: the name of the relationship property or field of entitya; \"_\" ; the name of the primary key column in table b. the foreign key column has the same type as the primary key of table b.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@see org.springframework.web.servlet.mvc.controller#handlerequest(javax.servlet.http.httpservletrequest, javax.servlet.http.httpservletresponse)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"copy study information","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"study from tbi do not contain submission_id","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme: next if block needs to me moved to the onsumbit method when we this controller will extend baseformcontroller.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"save to db if the validated flag is updated:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"$non-nls-1$","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"analysis","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"analysis steps for analysis and add algorithm type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"analysisstepcommand.setid(analysisstep.getid()); analysisstepcommand.setsoftwareinfo(analysisstep.getsoftwareinfo());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add algorithm type for analysisstepcommand","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"analyzed data for each analysis step","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"matrix or tree?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"end for","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add analyzeddata for analysisstepcommand","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"return the id of the block that the spawn is happening on.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add several new sequences to <code>ambarisequencestable<\/code>. @param seqnames list of sequences to be inserted @param seqdefaultvalue initial value for the sequence @param ignorefailure true to ignore insert sql errors @throws sqlexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"noi18n","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test a function from a wyil file by executing the test with randomised parameters @param id the module used @param interpreter whiley interpreter used to execute the function\/method @param dec the function or method @param testtype the type of tests to generate @param numtest the number of tests to execute @param lowerlimit the lower constraint used when generating integers @param upperlimit the upper constraint used when generating integers","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the method for generating test values","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the function's relevant header information","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"function param types \"+ inputparameters); system.out.println(\"precondition \"+ preconditions); system.out.println(\"postcondition \"+ postconditions); have to remove the pre and post conditions out of the function so the function is executed without validation validation will be conducted manually inside the function. tuple<expr> empty = new tuple<expr>(); dec.setoperand(4, empty); remove precondition dec.setoperand(5, empty); remove postcondition","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check the precondition","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"checks the postcondition when it is executed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add the return values into the frame for validation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"print out any return values produced","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"overall test statistics","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"nestedquery would be null when de-referenced query value is not specified ex: query($qq) in request with no qq param specified","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"value specified directly in local params... so the end of the query should be the end of the local params.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"value here is *after* the local params... ask the parser.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"advance past nested query","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handling null check on nestedquery separately, so that proper error can be returned one case this would be possible when v is specified but v's value is empty or has only spaces","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"clear out all decrements","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"insert all reference increments and decrements in place @param stmt the statement to insert before or after null indicates end of the block @param stmtit @param increments","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"clear out all increments","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"soft registration","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate boolean preferences","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate edit mode","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if value changed, write it to the file too","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"move tmp to normal","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\u521d\u59cb\u5316\u8bb0\u5f55\u6570\u636e","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\u5224\u65ad\u7b7e\u5b57\u662f\u5426\u5b58\u5728 \u6253\u5370\u7b7e\u5b57\u4fe1\u606f","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"base64 \u8f6c\u6362\u7b7e\u5b57","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\u67e5\u8be2\u8be5\u8bb0\u5f55\u7b7e\u5b57\u662f\u5426\u5b58\u5728","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\u65b0\u589e\u7b7e\u5b57","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\u4fee\u6539\u7b7e\u5b57\u72b6\u6001","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\u7b7e\u5b57\u72b6\u6001","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for each cells","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test is colorized","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.print(\"(x,y)=(\"+x+\",\"+y+\")&\"); yes draw a point with this color","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no draw a black point","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"show me the result on scsreen","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"refresh counters","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"start this processor. the processor will open an event stream on its message source in a new thread using {@link streamablemessagesource#openstream(trackingtoken)}. the {@link trackingtoken} used to open the stream will be fetched from the {@link tokenstore}. <p> upon start up of an application, this method will be invoked in the {@link phase#inbound_event_connectors} phase.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"then it's ok. it's already running","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"arg is event","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check the event function against the functions we have notifications watching for","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we err on the side of caution here in checking all events that might invalidate the data in the cache -dh","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we need the userid","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"look for group reference. need to replace it with parent site reference","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if there is a exactly one of each of remotegrpcportwriteoperation and registerandprocessbundleoperation we know they have the right topology.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: make firefox subclass","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: make ie subclass","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: make edge subclass","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: make opera subclass","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: make safari subclass","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: make ios_ipad subclass","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: make android subclass","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: make htmlunit subclass","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"run nzsession and capture a list of open transactions.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wait for the process to end.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"collect all the stdout, and parse the output. if the third whitespace-delimited token is the sqooptest user, the the first token is the nzsession id. we should kill that id.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ignore empty lines.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not enough tokens on this line.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"found a match.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"a weakkey is equal to another weakkey iff they both refer to objects that are, in turn, equal according to their own equals methods","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"never happens","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reads the gps configuration and inserts gps overlay on map, if it is enabled.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"verify if gps enable on device","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tests matching of built-in operator names.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"built-in functions are always case-insensitive.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"empty panel, just add the tracks","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find the regions containing the startpoint and point","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"already scheduled","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"deletes all items in the given path list followed by all bucket items.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"attach element identify name to class of \"use\" usage @param psielement phpclass used in \"use\" statement","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"iterate on the messages","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"since the cal to 'next' may block, we need to first check that there is a message available","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"skip data whose mac was not verified successfully","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unwrap data if need be","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"skip data that was not unwrapped successfuly","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"extract kafkadatamessage","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sleep a tiny while","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set abort to true in case we exit the 'run' method","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"constructs storage for {@code double} valued instruments.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"constructs storage for {@code long} valued instruments.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"2 second buffer since jobs can run a little early (though usually just by milliseconds)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if exec time is in the past, calculate the next time the job will execute...if this is a one-off job that is a result of scheduleparse() then don't update the next exec time...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"current time","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"1 millisecond after","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"everything seemed to work...set enddate as the last success date","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a new job if this is a recurring job","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now update the accounts in the cloud_usage db","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reset offset","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now copy the accounts to cloud_usage db","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get all the user stats to create usage records for the network usage","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get all the vm network stats to create usage_vm_network records for the vm network usage","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make sure start date is before all of our un-processed events (the events are ordered oldest to newest, so just test against the first event)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"- loop over the list of events and create entries in the helper tables - create the usage records using the parse methods below","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"keep track of user stats for an account, across all of its public ips","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"loop over the user stats, create delta entries in the usage_network helper table","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get vm disk stats in order to compute vm disk usage","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"loop over the user stats, create delta entries in the usage_disk helper table","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"commit the helper records, then start a new transaction","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mark public templates owned by deleted accounts as deleted","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"switch back to cloud_db","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"differentiate clones in this group","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"}","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the following actions are performed: <ul> <li>set fieldbindmodelpath to the collection model path (since the fields have to belong to the same model as the collection)<\/li> <li>set defaults for binding<\/li> <li>calls view helper service to initialize prototypes<\/li> <\/ul>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"inflate the layout for this fragment","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"instead of try-catch","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"calculate the width of the images to be displayed later on","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set it to be 1\/10 of the screen width","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get all rows in each table","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"row 1 is the column headers. this may be different in the dom in browser","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the thubnail image src","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the scaled image link and display it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"center vertical","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"{@inheritdoc}","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get process id","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pid@hostname","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"may happen only due to internal programming error","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if cache is indexed but there is no actual 'where' filter clause and we do have sorting or projections we should still use the index, otherwise just go for a non-indexed fetch-all","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fully non-indexed execution because the filter matches everything or there is no indexing at all","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"identity comparison is intended here!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"all involved fields are indexed, so go the lucene way","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"all projections are stored, so we can execute the query entirely against the index, and we can also sort using the index","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"but some projections are duplicated ...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"projections may be stored but some sort fields are not so we need to query the index and then execute in-memory sorting and projecting in a second phase","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"expansion leads to a full non-indexed query or the expansion is too long\/complex","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"some fields are indexed, run a hybrid query","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"could not connect any of addresses","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":":off:log.debug(\"exit operator_expr :: stack size :: \" + this.stack.size());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the functionref","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":":off:log.debug(\" >> operator :: set cascade true :: \" + subnodes.get(subnodes.size() - 2).gettext());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the overloaded operator:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":":off:log.debug(subnodes.get(i).getclass().getname());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":":off:log.debug(\" >> operator :: terminal-node found.\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":":off:log.debug(\" >> operator :: \" + operator);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sure to fail","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ideal case","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"smaller = better","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"retrieves the packet content. may be recomputed if the packet is invalidated or if there is memory demand (handled by a soft reference). <p> {@link framedpacket#body()} will contain a buffer allocated by this method.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we prepare the input ontology","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"maybe we want to see what is in before","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now we test the method","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"maybe we want to see the inferred axiom list","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we want only class related axioms in the result set","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we want to remove the ontology from the manager","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sampler samples (e.g. http request)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"transaction controller samples","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fetch custom attributes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fetch identities","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a mask for all the regions outside of the area where layer 1 is > 0 and layer 2 is < 0","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"main algorithm 1. define partial voume for each layer, each voxel","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"2. build and invert the glm for each profile \/ voxel?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the next non-zero value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"build a weighting function based on distance to the original location","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"invert the linear model","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"output","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we assume this is given by the user","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"(non-javadoc) @see org.apereo.portal.groups.ientitygroupstore#searchforgroups(java.lang.string, int, java.lang.class)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only search for groups","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"result groups.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"is this an exact search or fuzzy","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate client version","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if there is no pre-existing task, create a new one","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"new asynctask","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if there was no selection or this is not the first series (point values)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ignore everything else","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"always return false so that we do not interfere with the graph pan\/zoom controls","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"plain test","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"numeric field access","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"string field access","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"list","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ranges","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"maps","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"times","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"groovycollections","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fail cases: accesscontrolexception[access denied (\"java.io.filepermission\" \"<<all files>>\" \"execute\")]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"accesscontrolexception[access denied (\"java.lang.runtimepermission\" \"accessclassinpackage.sun.reflect\")]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"accesscontrolexception[access denied (\"groovy.security.groovycodesourcepermission\" \"\/groovy\/shell\")]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"accesscontrolexception[access denied (\"java.lang.runtimepermission\" \"accessdeclaredmembers\")]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"accesscontrolexception[access denied (\"java.io.filepermission\" \"<<all files>>\" \"execute\")]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"accesscontrolexception[access denied (\"java.lang.runtimepermission\" \"modifythreadgroup\")]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test a directory we normally have access to, but the groovy script does not.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"access denied (\"java.io.filepermission\" \"...\/tempdir-00n\" \"read\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"runs the tests and reports results.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for all other annotation axioms, just add them as they are","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ensure inscheme is set. we need it, so set to default if missing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"alm specific cleanup","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unregister app interface","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wait for the app interface to be unregistered","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"do nothing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"clean up sdl connection","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"maxburstseconds","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"runxmlreplayfile","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"internally, we maintain two collections of serviceresult: the first is the return value of this method. the second is the serviceresultsmap, which is used for keeping track of csids created by posts, for later reference by delete, etc.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"will check full path first, then checks relative to pwd.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"controlfilename is just the short name, without the full path.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"used for expression language expansion from uri field.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mapcontext(); get a new jexlcontext for each test group.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"figure out if we will auto delete resources","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"else just run with current from last loop;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"reponse parts: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\"+expectedresponseparts);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"vars only make sense in two contexts: post\/put, because you are submitting another file with internal expressions, and in <response> nodes. for get, delete, there is no payload, so all the urls with potential expressions are right there in the testnode.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (ispost){","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"puts do not return a location, so don't add puts to serviceresultsmap.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gotexpectedresult depends on serviceresult.expectedcodes.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"all validation for all requests is done here:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now spit out the html report file","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"don't instantiate, just use file to extract file name without directory.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"oracle11 does not have auto incremented values. this method uses a sequence and a trigger to create the same behavior. @param connection the connection to the database that will be used to execute the queries @param tablename the name of the table that contains the column that should be automatically incremented @param columnname the name of the column that should be automatically incremented @throws sqlexception if the auto increment statement cannot be created or executed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stickybroadcast.removeextra(\"position\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stickybroadcast.putextra(\"position\", (long)0);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"just ignore because most apps actually use remotecontrolclient on newer androids","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set to false before pushing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ensures that you can't publish an automatically added quay\/github tool with an alternate structure unless you change the dockerfile and dockstore.cwl locations","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ensures that you can't publish an automatically added quay\/bitbucket entry with an alternate structure unless you change the dockerfile and dockstore.cwl locations","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"static helper method that can be used instead of instantiating comparator (used by unit tests, can be used by code too)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"first: major sorting by types","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"second: for time-based variant, order by time stamp:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"or if that won't work, by other bits lexically","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"setup database refresh a tool","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the block does not exist anymore, then it's not an error.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the block exists, the exception may due to a race with write: the blocksender got an old block path in rbw. blockreceiver removed the rbw block from rbw to finalized but blocksender tried to open the file before blockreceiver updated the volumemap. the state of the block can be changed again now, so ignore this error here. if there is a block really deleted by mistake, directoryscan should catch it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handler for an embedded member. @param mmds chain of member metadata to the embedded member @param embcmd class metadata for the embedded member type @param clr classloader resolver @param embmd any embeddedmetadata defining column info @param ownernested whether the owner is nested","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"go through all members of the embedded type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"don't need column if not persistent","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"special case of this being a link back to the owner. todo repeat this for nested and their owners","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"nested embedded pc, so recurse","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"embedded object stored as nested under this in the owner table (where the datastore supports that) add column for the owner of the embedded object, typically for the column name only","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"recurse through the embedded member","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"nested embedded collection, so recurse","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add column for the collection (since the store needs a name to reference it by)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"nested embedded map, so recurse","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"nested embedded array, so recurse","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"1-1\/n-1 stored as single column with persistable-id 1-n\/m-n stored as single column with collection<persistable-id> create column for basic type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create column(s) for this type using a typeconverter","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create column for basic type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"apply predicate on txmap","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"meanwhile remove keys which are not in txmap","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"iterate over the txmap and see if the values are updated or removed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"endregion region > facet handling","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"search up the inheritance hierarchy","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the join of the two specified nodes if it exists. @param x the first node @param y the second node @return the node which is at the join of the nodes or null if it does not exist @todo this.majorants should return an iterator","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"resets the statspecs to make them consistent for all tests in all containers with the given test id. uses a global override, if provided.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"special case","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"determine which statspec file to use","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reset the statspec file for each test in the container","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"determine which statspec file to use for this test id","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reset the statspec file for each test with the given test id","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns a list of {@link valuecomparator}s for the given test and test containers with values for relevant statistics.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test is missing from this container","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"multiple runs of this test are present","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make each instance read its archives","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"prompt to insert an operator card. returns once the card is inserted. @param message message to display to the user","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"prompt to remove an operator card. returns once the card is removed. @param message message to display to the user","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"perform's size 2 calculations.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@issue(\"security-580\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"these go through a different code path:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"arbitrary for short text","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\"horizontal\" position in rotated world","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"4 is a trial-and-error thing, this lowers the text a bit","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cs.setrenderingmode(renderingmode.stroke) for \"hollow\" effect","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\"_all\" : {\"enabled\" : true}","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"map each domain properties in supported format, or object for complex type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add the custom mapping (searchable static property in domain model)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle embedded persistent collections, ie list<string> listofthings","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle arrays","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use 'string' type for properties with custom converter. arrays are automatically resolved by elasticsearch, so no worries.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"once it is an object, we need to add id & class mappings, otherwise es will fail with nullpointer.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see http: www.elasticsearch.com\/docs\/elasticsearch\/mapping\/all_field","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"send an email to given email address @param userid1 @param userid2 @param asgmtname @param score @param recipientmail @param reportlink @throws exception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"build a chart from the the *first* dimension of the specified data. ranges are detected automatically. @param data @param numbuckets @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"do a pass to compute range","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"runs the current data through the deflater. as much as possible this will be buffered in the current output stream. @throws ioexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we don't need to flush here, as this should have been called already by the time we get to this point","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the maximum value that this calendar field could have, taking into consideration the given time value and the current values of the {@link calendar#getfirstdayofweek() getfirstdayofweek}, {@link calendar#getminimaldaysinfirstweek() getminimaldaysinfirstweek}, and {@link calendar#gettimezone() gettimezone} methods. for example, if the date of this instance is heisei 16february 1, the actual maximum value of the <code>day_of_month<\/code> field is 29 because heisei 16 is a leap year, and if the date of this instance is heisei 17 february 1, it's 28. @param field the calendar field @return the maximum of the given field for the time value of this <code>japaneseimperialcalendar<\/code> @see #getminimum(int) @see #getmaximum(int) @see #getgreatestminimum(int) @see #getleastmaximum(int) @see #getactualminimum(int)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"shift 400 years to avoid underflow","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the day of week of january 1 of the year","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"normalize the day of week with the firstdayofweek value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"# of days in the first week","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use an equivalent year for the getyearoffsetinmillis call to avoid overflow.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use the same year as d.getyear() to be consistent with leap and common years.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add a qualification non diplemantes.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"on transforme le commentaire pour corriger les caract\u00e8res sp\u00e9ciaux","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ajout en base","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ajout dans l'individu courant","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add a cursuspro.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"don't enable the screen until all existing windows have been drawn.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stop boot animation formerly we would just kill the process, but we now ask it to exit so it can choose where to stop the animation.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"boot_finished","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"enable input dispatch.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make sure the last requested orientation has been applied.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"any uncaught exception will crash the system process","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"node is defined but not referenced","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"node is defined and referenced","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mintimeforlogginginmilliseconds","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"checks if expiration process needs to be performed for the given iceberg table by comparing stored last expiration time. if difference between last expiration time and current time is more or equal to expiration period, launches expiration process. if expiration period is zero or negative, no expiration process will be launched. @param table iceberg table instance @return true if expiration process was launched, false otherwise","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"special handling for escaped lines","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"char literal","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in single-line or doxygen comment","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"found","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in multi-line or doxygen comment","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"end of switch()","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":">>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":">","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"invalid comment end - *\/ or int*\/*","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ellipsis ...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"float literal","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in a number literal","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in hexadecimal (possibly floating-point) literal","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in bianry literal","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"hex float literal","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"two dots in the float literal","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"0x1234l or 0x1234l","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"binary exponent","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if float then before mandatory binary exponent => invalid","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"end of while(true)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"all character.iswhitespace(c) below 0x80 follow ['\\t' - '\\f'] and [0x1c - ' ']","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"return single space as flyweight token","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dollar is extension in gcc and msvc $ is a valid start of identifiers return token(cpptokenid.dollar);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ur, ur or lr","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"u8","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"u8r","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"string with l\/u\/u\/r prefixes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"char with l or u\/u prefix","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"invalid char","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"end of switch (c)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"when","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"then","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"final virtualfile rscript = rootvdir.findfilebyrelativepath(\"bin\/\" + scriptname);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sync the rotations.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"updates the task","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this.host.getentitysenses().cansee(this.attacktarget);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"method called from server when the 'api\/todos\/new'endpoint is recieved. gets specified todo info from request and calls addnewtodo helper method to append that info to a document @param req the http request @param res the http response @return a boolean as whether the todo was added successfully or not","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (duedate != null) { simpledateformat sdf = new simpledateformat(todoitem.due_date_format); date date = new date(); try { date = sdf.parse(duedate); } catch (parseexception e) { log.w(getclass().getsimplename(), \"failed to parse due date, '\" + duedate + \"' using format \" + todoitem.due_date_format); } calendar cal = calendar.getinstance(); cal.settime(date); datepicker.updatedate(cal.get(calendar.year), cal.get(calendar.month), cal.get(calendar.day_of_month)); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make sure solver has terminated and propagate exceptions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo[nik]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not a power of two, add one more","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"first try to quickly lock some of the correct-sized free lists and allocate from them.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"next arena is being allocated.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"shouldn't happen.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"try to allocate memory if we haven't allocated all the way to maxsize yet; very rare.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is the name of the rule, not a reference to it!!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is, on other hand, is a reference to the parent rule (because it's used in inheritance)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not allocated yet","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"try to allocate from target-sized free list, maybe we'll get lucky.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"header for newly allocated used blocks.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"number of headers (smallest blocks) per target block.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"next free list from which we will be splitting.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"each iteration of this loop tries to split blocks from one level of the free list into target size blocks; if we cannot satisfy the allocation from the free list containing the blocks of a particular size, we'll try to split yet larger blocks, until we run out.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"how many ways each block splits into target size.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"how many target-sized blocks remain from last split.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the header index for the beginning of the remainder.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"index of the next free block to split.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we will split the block at headerix [splitways] ways, and take [totake] blocks, which will leave [lastsplitblocksremaining] free blocks of target size.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"whatever remains.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"take totake blocks by splitting the block at offset.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if anything remains, this is where it starts.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in the end, update free list head.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we have just obtained all we needed by splitting some block; now we need to put the space remaining from that block into lower free lists. we'll put at most one block into each list, since 2 blocks can always be combined to make a larger-level block. each bit in the remaining target-sized blocks count is one block in a list offset from target-sized list by bit index.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check resource limits","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate network offering","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see networkofferingvo","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate physical network","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see physicalnetworkvo.java","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate zone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in basic zone the network should have acltype=domain, domainid=1, subdomainaccess=true","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only one guest network is supported in basic zone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if zone is basic, only shared network offerings w\/o source nat service are allowed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only account specific isolated network with sourcenat service disabled are allowed in security group enabled zone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"don't allow eip\/elb networks in advance zone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo(vxlan): support vni specified vlanid can be specified only when network offering supports it","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"aux: generate secondary uri for secondary vlan id (if provided) for performing checks","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"don't allow to specify vlan tag used by physical network for dynamic vlan allocation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for isolated and l2 networks, don't allow to create network with vlan that already exists in the zone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for the network that is created as part of private gateway, the vnet is not coming from the data center vnet table, so the list can be empty","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"don't allow to creating shared network with given vlan id, if there already exists a isolated network or shared network with same vlan id in the zone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if networkdomain is not specified, take it from the global configuration","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"1) get networkdomain from the corresponding account\/domain\/zone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"2) if null, generate networkdomain using domain suffix from the global config variables","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate network domain","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no cidr can be specified in basic zone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if cidr is rfc1918 compliant if the network is guest isolated for ipv4","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"logical router's uuid provided as vlan_id","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set transient field","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for shared network","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the connection string value can be obtained by: 1. going to your event hubs namespace in azure portal. 2. creating an event hub instance. 3. creating a \"shared access policy\" for your event hub instance. 4. copying the connection string from the policy's properties.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create an event to send.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"send that event. this call returns a mono<void>, which we subscribe to. it completes successfully when the event has been delivered to the event hub. it completes with an error if an exception occurred while sending the event. sendoptions are not specified, so events sent are load balanced between all available partitions in the event hub instance.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"disposing of our producer and client.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no need to support utf-8","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"endswitch","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"renders the response json for tasksinfo api the json will have an array of task objects under the key tasks.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ignore","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"renders the response json for attemptsinfo api the json will have an array of attempt objects under the key attempts.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"notice: make a copy from didbackend cache. avoid share same diddocument instance between didbackend cache and didstore cache.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"private helper that marshals the information from each instance into something that turbine can understand. override this method for your own implementation for parsing eureka info. @param serviceinstance @return instance","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: reimplement when metadata is in commons add metadata map<string, string> metadata = instanceinfo.getmetadata(); if (metadata != null) { instance.getattributes().putall(metadata); }","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"add ports","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"return new pair<>(image, caption);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this shouldn't ever happen","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"usually doesn't happen ...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"close the channel because it is likely a network error.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ignored","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: handle attrib bits","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: handle text","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: handle mime-type","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: handle link-count","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: handle untranslated-name","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"system.out.println (\"list1 add \"+instance.geturi()+\" weight=\"+ilist.getinstanceweight(i));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println (\"list0 add \"+instance.geturi()+\" weight=\"+ilist.getinstanceweight(i));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"<p>constructs the textual content of the given node and recursively the textual content of its sub element nodes. appends the result to the given stringbuilder.<\/p> @param node xml node @param sb stringbuilder that will contain the textual content of the node","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pdf spec does not mention \/border for ink annotations, but it is used if \/bs is not available","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\"when drawn, the points shall be connected by straight lines or curves in an implementation-dependent way\" - we do lines.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store chnages in manifest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store localized info","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store project.xml changes store module dependencies","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store friends packages","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store public packages","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store class-path-extensions + its src & javadoc","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"delete removed jars, remove any remaining exported packages and src&javadoc refs left","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fast search based on path in uri","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"slow search based on matching metadata, no path in uri provider \"com.android.providers.media.documents\" when using \"videos\" tab in file picker","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the window went into fs mode before it was realized it could have (0,0) dimensions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"strip out non-deterministic conjuncts","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generate equality inferences","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see if we can push inherited predicates down","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"a conjunct can only be pushed down into an inner side if it can be rewritten in terms of the outer side","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add the equalities from the inferences back in","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see if we can push down any outer effective predicates to the inner side","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see if we can push down join predicates to the inner side","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"push outer and join equalities into the inner side. for example: select * from nation left outer join region on nation.regionkey = region.regionkey and nation.name = region.name where nation.name = 'blah'","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"start raft node with shared rpc server: return new raftgroupservice(groupid, endpoint, nodeoptions, this.context.rpcserver(), true) .start(false)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this synchronized block stops us from doing the select() if a new device is being added. @see startmonitoringdevice()","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"notify","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"restart the monitoring of that device","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we use the highlighted text to put the table caption","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"outcome values","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"timepoints","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"timepoint units","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sample size","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"utility function to convert text string into canonical-format word array @param text -- text string including punctuation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"normal attack","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"power strike","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"slash blast","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"energy bolt","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"magic claw","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"arrow blow","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"double shot","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"double stab","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lucky seven","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fire arrow","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"poison brace","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cold beam","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"holy arrow","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"drain","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"savage blow","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"panic: axe","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"panic: sword","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dragon fury: pole arm","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dragon fury: spear","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pole arm crusher","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sacrifice","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"spear crusher","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ice strike","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"thunder spear","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"strafe","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"avenger","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"assaulter","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"brandish","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"rush","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"blast","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fire demon","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"chain lightning","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ice demon","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"angel's ray","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dragon pulse","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"hurricane","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"piercing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sniping","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"showdown taunt","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"triple throw","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"boomerang step","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"aoe","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"thunderbolt","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"arrow bomb : bow","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"iron arrow : crossbow","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"coma: axe","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"coma: sword","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"charged blow - skill doesn't work","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dragon roar","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"explosion","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"poison mist","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"shining ray","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"arrow rain","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"inferno","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"arrow eruption","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"blizzard (sniper)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sanctuary skill doesn't work so i don't know","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"big bang","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"meteo","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"paralyze","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"blizzard","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"genesis","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"bishop big bang","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ninja ambush","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ninja storm knockback","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"assassinate","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"super dragon roar","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@author supiangel","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"first strike","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"back-flip kick","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"backward blow","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"uppercut","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"spinning punch","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"final punch","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"absorb","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"smash","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fatal bullet","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"decoy","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"withdraw","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"triple shot","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fire shot","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ice shot","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dragon strike","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fist","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"energy orb","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"demolition","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"snatch","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"rapid fire","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"air strike","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"battleship cannon","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"battleship torpedo","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: currently assumes that every element is a separate bundle, but this can be changed by pushing some of this logic into the \"dofnrunner\"","classification":"DESIGN","projectname":"namcyan"}
{"comment":"handover to queue, do not block the grpc thread","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: it would be nice to emit results as they arrive, can thread wait non-blocking?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"remotebundle close blocks until all results are received","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"determine whether or not access to the given cluster resource should be allowed based on the privileges of the current user. @param cluster the cluster @param readonly indicate whether or not this check is for a read only operation @return true if the access to this cluster is allowed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"admin has full access","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns a snapshot mapping the names of each file in the directory at the given path to the last modified time of that file.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_mosactionperformed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"creates a new google document. once the document is created, returns its document id. @param {docs} service docs authorized service to be able to create a doc. @return {string} returns the document id of the newly created doc.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo auto-generated catch block","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"system.err.println(start + \" ---> \" + length);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.err.println(\"syntaxbusy, request queued\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"return the reloadabletype representing the superclass of this type. if the supertype is not reloadable, this method will return null. the reloadabletype that is returned may not be within the same type registry, if the supertype was loaded by a different classloader. @return the reloadabletype for the supertype or null if it is not reloadable","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the length of this sequence in microseconds. @return the length of this sequence in microseconds","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is a fixed tick per frame computation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pre-kitkat, only one external storage device was addressable","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"worst case, resort to internal storage","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"instantiate firebase objects","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"instance of firebase object(i.e. database root object)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reference to depositqueue child object in root object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"instantiate other variables","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mr is needed for the reproduction","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"framework checks for null authn so this shouldn't happen","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the authn data type matches is a good idea, and necessary if there are other fields to open\/inspect","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"restore the kv-state \/ columnfamily meta data for all key-groups referenced by the current state handle. @throws ioexception @throws classnotfoundexception @throws rocksdbexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check for key serializer compatibility; this also reconfigures the key serializer to be compatible, if it is required and is possible","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"rocksdbkeyedstatebackend.restoredkvstatemetainfos = new hashmap<>(restoredmetainfos.size());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo with eager state registration in place, check here for serializer migration strategies","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"transform the observed (current) time series","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"transform baseline time series","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . emit code for the symbol constant class, optionally including non terms, if they have been requested. @param out stream to produce output on. @param emit_non_terms do we emit constants for non terminals? @param sym_interface should we emit an interface, rather than a class?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"top of file","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"class header","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"output a constant decl for the terminal","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"emit names of terminals","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"do the non terminals if they want them (parser doesn't need them)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"walk over the non terminals later might sort these","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tum comment: here we could add a typesafe enumeration output a constant decl for the terminal","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"end of class","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"internal: return the value of the object if it already is registered, otherwise null.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"don't register read-only classes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the working copy is again being registered in which case we return the same working copy","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if object exists in my new objects if it is in the new objects cache then it means domain object is being re-registered and we should return the same working clone. this check holds only for the new registered objects perf: avoid initialization of new objects if none.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"non-empty means this is suitable for in-place updates","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in-place update failed, so fall through and re-try the same with a full atomic update","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"full (non-inplace) atomic update","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"could just let the optimistic locking throw the error","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the specified document could not be found in this shard and was explicitly routed using _route_","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a new doc by default if an old one wasn't found","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"safety check: don't allow an update to an existing doc that has children, unless we actually support this.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"however, next line we see it doesn't support child docs","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is an update where the updated doc is not the root document","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"internal: this method will perform a delete operation on the provided objects pre-determining the objects that will be deleted by a commit of the unitofwork including privately owned objects. it does not execute a query for the deletion of these objects as the normal deleteobject operation does. mainly implemented to provide ejb 3.0 deleteobject support.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"else, it is a new or previously deleted object that should be ignored (and delete should cascade)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fire events only if this is a managed object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this method is used internally to clone a map that holds the persistencecontexts. a weak map is returned if referencemode is weak.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"search through string's characters one by one until we find a non-alphabetic character. when we do, return false; if we don't, return true.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check that current character is letter.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"all characters are letters.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"invokes {@link sourcetransferhandler#transferdata(pushsourcestream)} on {@link #transferhandler} for each of <tt>pkts<\/tt> in order to consecutively push them out of\/make them available outside this <tt>pushsourcestream<\/tt>. @param pkts the set of <tt>rawpacket<\/tt>s to push out of this <tt>pushsourcestream<\/tt>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"return pkt to the pool because it is invalid and, consequently, will not be made available to reading.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"return oldpkt to the pool because it was made available to reading and it was not read.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"1. create connect context","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"2. create database db1","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"3. create table tbl1","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"must set replicas' path hash, or the tablet scheduler won't work","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"4. get and test the created db and table","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"5. process a schema change job","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"6. check alter job","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test show backends;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"here the input isn't in the canonical form, but we should be forgiving","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"as of solr 1.3","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"obtain representations for playback.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check drm support if necessary.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"hd streams require l1 security.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"build the video renderer.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"build the audio renderer.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"build the debug renderer.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"invoke the callback.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add a line to the list of loaded feeds to record the snapshot and which feed the snapshot replicates.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the line above should throw an error","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"(a: subjecttype) is type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the pattern is essentially a 'null' expression","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"just make sure the import completed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo(lwhite): better tests","classification":"TEST","projectname":"namcyan"}
{"comment":"note that instances are not referenced by any other model entity, so they can be safely deleted here without leaving any references in place. if there are textual references to the instance (i.e. in a property that refers to it by name) then these references must be manually cleaned up separately by the code that calls this method. first remove the instances individually from the list of all instances","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"then remove all of the instances for the specified concept from the other list","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"then remove the unused sentences and sources that may be left as a result","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dsw0","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"according to the manual, 0x04, 0x08 and 0x10 should always be off, but...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dsw1","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"those are the bonus with 5 lives port_dipname( 0x38, 0x00, def_str( \"bonus_life\") ); port_dipsetting( 0x28, \"30k 100k and every 100k\" ); port_dipsetting( 0x30, \"40k 120k and every 120k\" ); port_dipsetting( 0x00, \"30k 80k\" ); port_dipsetting( 0x08, \"30k 100k\" ); port_dipsetting( 0x10, \"30k 120k\" ); port_dipsetting( 0x18, \"30k\" ); port_dipsetting( 0x20, \"40k\" ); port_dipsetting( 0x38, \"none\" );","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dsw2","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fake","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"retrieve view type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"view.save(guiid, title, \"\", guiname);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"boolean issys = (viewmap == sysid2view);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not exist, let's get it on-demand","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"<include> is used with an in built android layout id","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in older versions, preference could be put in layout folder and we do not support prefernce yet.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"retrieve view id (android:id) node idnode = attrmap.getnameditem(id_attr);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"view without class attribute. it does happen.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"retrieve callback (android:onclick)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"retrieve text (android:text)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"hailong: add hint support retrieve hint (android:hint)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"view.save(guiid, text, hint, guiname);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"view.saveinclude(layoutid, includeeid);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\u5904\u7406 \u76d1\u63a7\u6587\u4ef6\u5939 \u7684\u4e8b\u4ef6.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (issys) { sysridmap.put(id, guiid); invsysridmap.put(guiid, id); } else { ridmap.put(id, guiid); invridmap.put(guiid, id); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"throw new runtimeexception(\"unhandled menu tag \" + guiname);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"continue;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"creates a new connection and a new session to activemq","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"rollup the parameters of the given source parameter group. @param sourceparamgroup the parameter group to be rolled up @param targetparamgroup the group that will receive the rolled up content @param referencehandler the rollup reference handler instance @param cloner used for cloning model element as required","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find proper device and raise event.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns a {@link list} of additional {@link testconfiguration} instances that should be run along with the default {@code testconfiguration} instances. <p>this typically includes a configuration to test google play services (if available) and any other device specific configurations.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"allows for android projects with mixed scala\\java tests to be","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"run with maven surefire (see the robospecs project on github)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ugh, we're barfing while loading org.sqlite now for some reason?!? todo: still?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"called when loading successfully finishes.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"when there are no application form items","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create application form","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this method takes a reference to the head of a linked list. it returns the reference to the head of the linked list in the reversed order.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"method to drive the robot using joystick info. @param xspeed speed of the robot in the x direction (forward). @param yspeed speed of the robot in the y direction (sideways). @param rot angular rate of the robot. @param fieldrelative whether the provided x and y speeds are relative to the field.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ask the kinematics to determine our swerve command","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"command each swerve module","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"report our commands to the dashboard","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test of getvotesforinstance method, of class fes2.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"classifier.prunethresholdoption.setvalue(0.00001);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"score a frame with the given model.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"have to compute","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for regression this computes the mse","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"hr = new hitratio();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now call auc and confusionmatrix and maybe hitratio","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"put the metrics into the kv store","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"it's already cached in the dkv","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: write your code here","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"values is a reference to the hsvvalues array.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"bprevstate and bcurrstate keep track of the previous and current state of the button","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"activate tensorflow object detection before we wait for the start command. do it here so that the camera stream window will have the tensorflow annotations visible.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wait for the game to begin","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"getupdatedrecognitions() will return null if no new information is available since the last time that call was made.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"step through the list of recognitions and display boundary info.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"telemetry.adddata(string.format(\"mode (%s)\", mode), \"\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"go somewhere based on mode","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"adds correction terms of the following form for variables v. <ul> <li> if primed context has no v, conjoins v_1 = v_max (v doesn't change in this block) <li> if primed context has index i &lt; max, conjoins v_i = v_max <li> if unprimed context has has index i &gt; 1, conjoins v_1 = v_i <\/ul> adds formulas for program counter before and after block transition. @return a path formula with the above mentioned adjustments to the block transition formula. the ssa map contains the indices for all primed variables including those not in the original block formula and the pc. the pointer target set is the same as before.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add general correction v_1 = v_max if v is not in block formula (= not in primed context),","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add low correction v_1 = v_? if unprimed context for v has higher index (? > 1).","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add high correction v_? = v_max if primed context for v has lower index (? < max)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add program counter","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"copy the keys and values from the source to this object. this will not copy the default values. this is meant to be used by going from a higher precedence object to a lower precedence object, so that if a key already exists, this method will not reset it. @param opsrc non-null reference to an outputproperties.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sets the report header group at the specified column","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no report header groups?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"search for column","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not found","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get remote repositories","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme is always false","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo it seems to me that transitive dependency policy only applies to jar artifacts, is that true ?? if( \"jar\".equals( dependencykey.gettype() ) )","classification":"DESIGN","projectname":"namcyan"}
{"comment":"place the cell within the grid layout at the specified row and column. @param parent - the cell's parent @param row - the row that the cell will be set at @param col - the column that the cell will be set at","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set the row and column in the correct location of the sudoku board","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set the layout params and add the edittext to the gridlayout parent","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (!function.hasbody()) { \/*add the clone to the original place in order to be included where needed return makecloneandinsert(newname, function, true); } if this is a definition, add the clone to the correct file app app = getrootimpl().getnode(); optional<translationunit> file = app.getfile(filename); if (!file.ispresent()) { translationunit tu = getfactory().translationunit(new file(filename), collections.emptylist()); app.addfile(tu); file = optional.of(tu); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"copy headers from the current file to the file with the clone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"list<includedecl> allincludes = getincludescopyfromfile(originalfile);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add as many ..\/ as folders in the relative folder","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add relative folder of original file","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"base: \" + baseincludepath); system.out.println(\"depth: \" + relativefolderdepth); adapt includes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if angled, ignore","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"include before: \" + includedecl.getcode());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"include after: \" + includedecl.getcode());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add includes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sets the new enum lists for this schema. the sets in the provided maps are converted into lists. @param enums the new enum sets for this schema.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check that all the given keys are valid","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sets the new enum lists for this schema. the sets in the provided maps are converted into lists, and sorted according to their natural ordering. @param enums the new enum sets for this schema.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sets the new enum lists for this schema. @param enums the new enum lists for this schema.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"new line is a frame delimiter specific for xhr-polling\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"after a session was established the server needs to accept requests for sending messages. xhr-polling accepts messages as a list of json-encoded strings.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we're using an echo service - we'll receive our message back. the message is encoded as an array 'a'.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sending messages to not existing sessions is invalid.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the session must time out after 5 seconds of not having a receiving connection. the server must send a heartbeat frame every 25 seconds. the heartbeat frame contains a single h character. this delay may be configurable. todo the server must not allow two receiving connections to wait on a single session. in such case the server must send a close frame to the new connection.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"due to the time it takes for an async request to be scheduled it might actually be the one that returns the 'another connection still open' error. therefore we need to check both.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"static flag","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"global constant","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the pressed button of the alert. that can be used to in a condition, eg.: showalert(alerttype.confirmation, \"ok?\", \"is it ok?\") == buttontype.ok @param type the alert type @param title the title of the alert @param text the text of the alert @param ontop the alert \"modality\"; true if the alert should be always on top, false otherwise @return the button type (depends on the alert type)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if no button was pressed, the dialog got canceled (esc, close)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the grid boundaries to determine the size of the cost map.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create the grid.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"discretizedvertices contain only x and y.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo mcost is not used, function below sets polygon regions to obstacle_cost.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"if the currentbufferindex is less than the buffer size - 1, it means, the next buffer in the list has been freed up for rewriting. reuse the next available buffer in such cases. in case, the currentbufferindex == buffer.size and buffer size is still less than the capacity to be allocated, just allocate a buffer of size chunk size.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"just validate the windowid and viewid","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"goodg2b() - use goodsource and badsink","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"always call the superclass","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"partition the limit by the full path. percentages of the limit are partitioned to named groups. group membership is derived from the provided mapping function. @param pathtogroup mapping function from full path to a named group. @return chainable builder","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"after 'source_col_c = 1' is pushed into source table scan, it's possible for 'source_col_c' table scan assignment to be pruned redirection results in project('dest_col_b') -> filter('dest_col_c = 1') -> tablescan for such case but dest_col_a has mismatched type compared to source domain","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add tracing for this operation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"at this point we are going through mutations for each table","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate as we go if transactional since we can undo if a problem occurs (which is unlikely)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"build map from physical table to mutation list","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for transactions, track the statement indexes as we send data over because our commitexception should include all statements involved in the transaction since none of them would have been committed in the event of a failure.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"keep all mutations we've encountered until a commit or rollback. this is not ideal, but there's not good way to get the values back in the event that we need to replay the commit. copy tableref so we have the original ptable and know when the indexes have changed.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we haven't retried yet, retry for this case only, as it's possible that a split will occur after we send the index metadata cache to all known region servers.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"track tables to which we've sent uncommitted data","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we have indexes, wrap the htable in a delegate htable that will attach the necessary index meta data in the event of a rollback","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove batches as we process them","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"swallow this exception once, as it's possible that we split after sending the index metadata and one of the region servers doesn't have it. this will cause it to have it the next go around. if it fails again, we don't retry.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add a new child span as this one failed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"throw to client an exception that indicates the statements that were not committed successfully.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"apply heightmap","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"clamp newheight within the selection area","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"offset x,z to be 'real' coordinates","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"depending on growing or shrinking we need to start at the bottom or top","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"skip water\/lava","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"grow -- start from 1 below top replacing airblocks","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fill rest with air","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"apply a raw heightmap to the region. @param data the data @return number of blocks affected @throws maxchangedblocksexception if the maximum block change limit is exceeded","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"drop trees to the floor -- todo","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: define a title for the content shown.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: if you have web page content that matches this app activity's content, make sure this auto-generated web page url is correct. otherwise, set the url to null.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: make sure this auto-generated app deep link uri is correct.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"initialization is needed before constructing dfa. @param minxsize maximum number of the states @param maxxsize minimum number of the states","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"allocates a new config every time.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"alphabet size: range[6 ~ 16] or [10, 20]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"randomly fill the alphabet","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"faulty event size (make sure it less than a half of alphabet size)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"like junit4, j2cl always counts errors as failures","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"since total number of tests cannot be asserted; ensure nummber of succeeds is correct.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo string nextlink = (string) graphmap.get(odata_next); todo continuationdata continuationdata = nextlink == null ? null : new continuationdata(new graphpagination(nextlink));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"play selected song from playlist, to skip forward or back","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"on double click of song, play it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"on right click open context menu","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"allow for removal of selected songs from playlist","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"allow for clearing entire playlist","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"show context menu at location of click","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"undo selection if user clicks away from focused row","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo use unchecked.consumer from jool library solution(","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"solution)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"data","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"data change","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"control","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"at this point source class represents the true polymorphic type of the document","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lock a thread wanting to find information about the same type so that this information retrieval is only done once ignore this warning, this class reference will be on the heap","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the cache is already aware of this type, return candidate fields for it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"don't bother with primitives","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if it is not known, scan each field for annotation or appsmith type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if this field is null, but the cache has a non-empty list of candidates already, then this is an appsmith field with known annotations","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if it is null and the cache is not aware of the field, this is still a prospect, but with an unknown type (could also be polymorphic)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if an object exists, check if the object type is the same as the field type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if they match, then this is going to be an appsmith known field","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if not, then this field is polymorphic, it will need to be checked for type every time","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now, go into field type and repeat","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this type only qualifies as a candidate if it is polymorphic, or has a list of candidates","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this will only ever be null if the field value is populated, and is known to be a non-encryption related field","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if this is a collection, check if the type parameter is an appsmithdomain","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is a known type, it should necessarily be of appsmithdomain type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the type is not known, then this is either not parsed yet, or has polymorphic implementations","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update cache for next use","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_addbuttonactionperformed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"step2 create the connection object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"step3 create the statement object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"step4 execute query","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"step5 close the connection object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\"id : \", id,","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"int returnvalue = jfc.showsavedialog(null);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_addartistactionperformed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_addalbumactionperformed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gets the line number associated with the given address. @param pc {@code >= 0;} the address to look up @return {@code >= -1;} the associated line number, or {@code -1} if none is known","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"import note: \"onlydatatrelatedtome\" relies on filterqueries for providing access to private data for the correct user in other words \"onlydatatrelatedtome\", negates other filter queries related to permissions @param user @param dataverse @param query @param filterqueries @param sortfield @param sortorder @param paginationstart @param onlydatatrelatedtome @param numresultsperpage @param retrieveentities - look up dvobject entities with .find() (potentially expensive!) @return @throws searchexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sortclause foo = new sortclause(\"name\", solrquery.order.desc); if (query.equals(\"*\") || query.equals(\"*:*\")) { solrquery.setsort(new sortclause(searchfields.name_sort, solrquery.order.asc));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"} else { solrquery.setsort(sortclause); } solrquery.setsort(sortclause);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"string displayname = entry.getvalue();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"permission filter query","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"facets to retrieve solrquery.addfacetfield(searchfields.host_dataverse); solrquery.addfacetfield(searchfields.author_string);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"solrquery.addfacetfield(searchfields.affiliation);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"solrquery.addnumericrangefacet(searchfields.production_date_year_only, citationyearrangestart, citationyearrangeend, citationyearrangespan); solrquery.addnumericrangefacet(searchfields.distribution_date_year_only, citationyearrangestart, citationyearrangeend, citationyearrangespan);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make the solr query","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"hide \"org.apache.solr...\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we can't show anything because of the search syntax error","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"arraylist titles = (arraylist) solrdocument.getfieldvalues(searchfields.title);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"logger.info(\"titlesolrfield: \" + titlesolrfield); logger.info(\"title: \" + title);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set list of all statuses this method also sets booleans for individual statuses","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"logger.info(id + \": \" + description);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"solrsearchresult.setapiurl(baseurl + \"\/api\/dataverses\/\" + entityid);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"image url now set via thumbnail api solrsearchresult.setimageurl(baseurl + \"\/api\/access\/dscardimage\/\" + datasetversionid); no, we don't want to set the base64 thumbnails here. we want to do it inside searchincludefragment, and only once the rest of the page has already loaded. datasetversion datasetversion = datasetversionservice.find(datasetversionid); if (datasetversion != null){ solrsearchresult.setdatasetthumbnail(datasetversion.getdataset().getdatasetthumbnail(datasetversion)); } @todo could use getfieldvalues (plural) here.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"solrsearchresult.settitle((string) titles.get(0));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"solrsearchresult.setapiurl(baseurl + \"\/api\/meta\/datafile\/\" + entityid); solrsearchresult.setimageurl(baseurl + \"\/api\/access\/filecardimage\/\" + entityid);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"logger.info(\"field: \" + facetfield.getname() + \" \" + facetfieldcount.getname() + \" (\" + facetfieldcount.getcount() + \")\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"quote field facets","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"hopefully people will never see the raw facetfield.getname() because it may well have an _s at the end","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"give it the non-friendly name so we remember to update the reference data script for datasets","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stop examining available dataset fields. we found a match","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"logger.info(\"adding <<<\" + staticsearchfield + \":\" + friendlyname + \">>>\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stop examining the declared\/static fields in the searchfields object. we found a match","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the \"type\" facet is special, these are not","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for now the only range facet is citation year","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"to avoid overlapping dates","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"special [12 to 34] syntax for range facets","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reverse to show the newest citation year range at the top","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"null check added because these tests were failing: mvn test -dtest=searchit","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"how often is this null?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"be sure to clear the active file bit in case mplayer is waiting for more data be sure we don't close the stdin connection before we send the quit message, but don't hang waiting for the quit to be processed inactivefile(); stop();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"replaces all except if a match is immediately preceded by a > sign, in which case this match is not replaced","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"firepropertychange doesn't do this check sufficiently","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set inline to avoid recursion","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns an accumulator to use for this animation. all animations with the same tag and target share the same accumulator. the lookup is rather slow, so try to store the returned object somewhere you can access it directly.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"a setterwriter expression is one of the following set: setf: setb: @param expression @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\u5339\u914d\u5e76\u8f6c\u53d1\u5230\u5f53\u524d\u7f51\u5173\u5b9e\u4f8b\u672c\u5730\u63a5\u53e3\u3002 \u6ce8\u610f\uff1a\u9700\u8981\u901a\u8fc7 prefixpathgatewayfilterfactory \u5c06\u8bf7\u6c42\u91cd\u5199\u8def\u5f84\uff0c\u4ee5\u5339\u914d\u672c\u5730 api \uff0c\u5426\u5219 dispatcherhandler \u8f6c\u53d1\u4f1a\u5931\u8d25\u3002","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sleep 100 to prevent thrashing and facilitate interruption","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"login","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"home","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"formplaceholderfacet","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"quicktime:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"directshow:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"none to add","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"<pre> process a vnmrbg \"sq\" command. sq commands are sent from the vnmr background engine to the sq through the vnmrj-vnmrbg socket interface. usually, they are generated by the em in response to a change in the status of the experiment queue but (for testing purposes) may also be entered from the command line. general syntax: vnmrjcmd('sq <command> <arg> .. <arg> [<macro>]') if <macro> is specified, the sq sends a command to the background engine to execute the macro after other actions specified by the command are carried out. refer to studyqueueapi.spec for additional details <pre>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"does nothing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq start [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq pause [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq stop [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq normalmode [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq submitmode [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq read filename.xml [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set sqdirs[jviewport]=path","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq write filename.xml [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq nwrite filename.xml [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq setids')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq nesting = {true,false}\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq validate {move,copy,all,none}\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq delete <id>\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set sqdirs[jviewport]=''","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq add <file> [<cond>] [<dst>] [<macro>]') vnmrjcmd('sq add new <type> [<cond>] [<dst>] [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq move <src> [<cond>] <dst> [true,false] [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"posterror(\"insufficient command arguments sq \" + cmd);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq {lmove,pmove} <src> [<cond>] <dst> [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq show <attr> <id> [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq copy <id> <cond> <dst> [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"syntax: vnmrjcmd('sq {get,set} <type> [<cond> <id>] <attr> <val> [<macro>]')","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"first token","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"second token","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"e.g. set p2.a2 lock on","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"e.g. set actions > p2.a2 lock on","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"e.g. set actions after p2.a2 lock on","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"switch","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"looking for nodes in id will return a null list if id does not exist","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mgr.invalidatetree();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"e.g.: vnmrjcmd('sq watch auto ', cursqexp, autodir, svfdir)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (tok.counttokens() != 3) { messages.postdebug(\"bad format for 'watch' cmd: \" + str); } else { string studydir = tok.nexttoken(); string autodir = tok.nexttoken(); string datadir = tok.nexttoken(); squpdater.startupdates(this, studydir, autodir, datadir); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generate an smt2 model for a given analysiscontract. the main interface of this class. @param ac the analysiscontract to generate for @param forassumptions indicates whether the analysiscontract is an assumption (slight differences in processing) @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"prepare for a new iteration, clean the state","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle contract clause itself first (implicitly includes traversing unknown types and properties)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"process input and output to collect info about components and properties","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create definitions and facts also populate string2int dictionary as a side effect","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"defs and facts come come first","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"weekdays mo, tu, .... su","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"return a valid track (with at least two points, including the start and destination). in some cases (e.g., destination is too close or too far, path could not be found), a straight line will be returned. @param start the starting point @param destination the destination point @return a track with at least two points including the start and destination points","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"avoid updating to frequently","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"disable routing for huge distances","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"disable routing when near the target","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now really calculate a new route","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the path to the users documents location. @return the path to the user's documents location.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we cannot get this, we have to exit because we don't know where to store our data.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns a representation of a serialized parameter.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"null is easy","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check the loaded object support (i.e. config) to see if this is a config item","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle empty collections as returned by the collections object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create the appropriate deferredparameter, a lot of these a fairly simple constant values, but some are quite complex when dealing with objects and collections","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check for substitution types, if present we invoke recursively on the substitution","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if this is a proxy we just grab the value from the startupcontext","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"because this is the result of a method invocation that may not have happened at param deserialization time we just load it from the startup context","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only try to load the class by name if it is not a primitive class","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"else load the primitive type by reference; double.class => class var9 = double.type;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"new com.foo.myannotation_proxy_annotationliteral(\"foo\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"method.invokeinterfacemethod(map_put, valueshandle, method.load(entry.getkey()), loadobjectinstance(method, entry.getvalue(), returnvalueresults, entry.getvalue().getclass()));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"created a {@link deferredparameter} to load a complex object, such as a javabean or collection. this is basically just an extension of {@link #loadobjectinstanceimpl(object, map, class, boolean)} but it removes some of the more complex code from that method. @param param the object to load @param existing the existing object map @param expectedtype the expected type of the object @param relaxedvalidation @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"a list of steps that are performed on the object after it has been created we need to create all these first, to ensure the required objects have already been deserialized","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if this is a collection we want to serialize every element","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"each step can happen in a new method, so it is safe to do this","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle the value serialization","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"map works the same as collection","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check how the object is constructed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"used to resolve the parameter position for @recordableconstructor","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the getter is ignored","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the matching field is ignored","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"read only prop, we may still be able to do stuff with it if it is a collection","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"special case, a collection with only a read method we assume we can just add to the connection","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the collection","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"special case, a map with only a read method we assume we can just add to the map similar to how collection works above","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if there is actually a field with the name","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if there is no underlying field then we ignore the property","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"normal javabean property","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is a weird situation where the reader and writer are different types we iterate and try and find a valid setter method for the type we have openapi does some weird stuff like this","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now handle accessible fields","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the field is ignored","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a deferred value to represet the object itself. this allows the creation to be split over multiple methods, which is important if this is a large object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"do the creation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fallback for collection types, such as unmodifiablemap","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now return the actual deferred parameter that represents the result of construction","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is where the object construction happens first create the actial object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"then prepare the steps (i.e. creating the values to be placed into this object)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now actually run the steps (i.e. actually stick the values into the object)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"just return the already created object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"read a line from the <i>in<\/i> {@link inputstream}, and return the line (without any trailing newlines). @param prompt the prompt to issue to the console, may be null. @return a line that is read from the terminal, or null if there was null input (e.g., <i>ctrl-d<\/i> was pressed).","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"prompt may be null mask may be null buffer may be null this is the accumulator for vi-mode repeat count. that is, while in move mode, if you type 30x it will delete 30 characters. this is where the \"30\" is accumulated until the command is struck.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the terminal is unsupported, just use plain-java reading","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle macros","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle custom callbacks","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"search mode. note that we have to do this first, because if there is a command not linked to a search command, we leave the search mode and fall through to the normal state.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set buffer and cursor position to the found string.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set cursor position to the found string","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we're still in search mode, print the search status","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, restore the line","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if this is still false at the end of the switch, then we reset our repeatcount to 0.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"every command that can be repeated a specified number of times, needs to know how many times to repeat, so we figure that out here.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"default success to true. you only need to explicitly set it if something goes wrong.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"current location of the cursor (prior to the operation). these are used by vi *-to operation (e.g. delete-to) so we know where we came from.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we are on a \"vi\" movement based operation, then we need to restrict the sets of inputs pretty heavily.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tab","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"there is an annoyance with tab completion in that sometimes the user is actually pasting input in that has physical tabs in it. this attempts to look at how quickly a character follows the tab, if the character follows *immediately*, we assume it is a tab literal.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ctrl-k","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ctrl-l","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"vi_move_accept_line is the result of an enter while in move mode. this is the same as a normal accept_line, except that we need to enter insert mode as well.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"according to bash\/readline move through history in \"vi\" mode will move the cursor to the start of the line. if there is no previous history, then the cursor doesn't move.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"according to bash\/readline move through history in \"vi\" mode will move the cursor to the start of the line. if there is no next history, then the cursor doesn't move.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"backspace","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"delete","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"maintain cursor position while searching.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we are re-entering move mode from an aborted yank-to, delete-to, change-to then don't move the cursor back. the cursor is only move on an expclit entry to movement mode.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handler for ctrl-d. attempts to follow readline behavior. if the line is empty, then it is an eof otherwise it is as if the user hit enter.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is a weird special case. in vi \"dd\" deletes the current line. so if we get a delete-to, followed by a delete-to, we delete the line.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"similar to delete-to, a \"yy\" yanks the whole line.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"';' and ',' don't need another character. they indicate repeat next or repeat prev.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we were in a yank-to, delete-to, move-to when this operation started, then fall back to","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"another subtly. the check for the normal state is to ensure that we do not clear out the repeat count when in delete-to, yank-to, or move-to modes.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the operation performed wasn't a vi argument digit, then clear out the current repeatcount;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a geopolygon using the specified points and holes and a test point. @param filteredpointlist is a filtered list of the geopoints to build an arbitrary polygon out of. @param holes is a list of polygons representing \"holes\" in the outside polygon. null == none. @param testpoint is a test point that is either known to be within the polygon area, or not. @param testpointinside is true if the test point is within the area, false otherwise. @return a geopolygon corresponding to what was specified, or null if what was specified cannot be turned into a valid non-degenerate polygon.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we will be trying twice to find the right geopolygon, using alternate siding choices for the first polygon side. while this looks like it might be 2x as expensive as it could be, there's really no other choice i can find.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we don't know if this is the correct siding choice. we will only know as we build the complex polygon. so we need to be prepared to try both possibilities.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"yes: build it for real","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no: do the complement and return that.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"yes: return what we just built","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no: return the complement","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"there is no conceivable exception that can come out of this, but throw something just in case. want the signature to not have exception in it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"first see if we can access the clipboard","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"can't access clipboard.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"minimize a loss function. @param lossdefinition defines the type of loss function @param observations defines the data on which to calculate the loss @param dimensionality the number of dimensions of the loss functions parameter vector @param learningrate the learning rate for the minimization @param numrepetitions how often to restart from a random @return a {@link vectormodel} that represents the best discovered minimum","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"repeat the optimization multiple times and keep the best model.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generate an initial model.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"repeatedly go against the gradient until convergence.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"calculate the gradient of the current model.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update the model and calculate the width of the update step.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"adapt the learning rate (bold driver): if we we are getting better, increase the learning rate by 5%. otherwise, decrease it by 50%.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update the best model.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set the message content for this message. @param content message body as a string.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"restore game history (pop current moves frame and reset selected move):","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"restore cached current game situation (figure constellation, king positions, castlings, active player and turn number):","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"castling left:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"castling right:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"undo en passant capture:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"string contextrelativepath = httprequest.getservletpath();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"string abspath = getservletcontext().getrealpath(contextrelativepath);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ik: added null check for abspath, it may be null (ex. on jetty)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wbrequest.setcontextprefix(geturlroot());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@param httprequest httpservletrequest which is being handled @param httpresponse httpservletresponse which is being handled @return true if the request was actually handled @throws servletexception per usual @throws ioexception per usual","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wbrequest.setcontextprefix(getabsolutelocalprefix(httprequest)); wbrequest.setcontextprefix(geturlroot());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"end of refactor","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set exclusionfilter on wbrequest only if not set externally","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we don't accept replay requests on this accesspoint bounce the user to the right place:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cause perf headers to be committed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if not liveweb redirected, then render current exception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"slightly hacky, but ensures that all block loaders are closed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"configkey is defined as <configclass extends configinstance>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate sync monitor content","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate if emplid is in the key","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo get the data id","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validation if data is processed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate if processed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"loop for","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"processed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get data content","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate that content was correct","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check for valid uri","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the generated main dex list should contain main (which is a root) and a (which is a direct dependency of main).","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the main dex classes should be the same as the input main dex list.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, parammap:\" + parammap , module);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the content to be linked to one or more sites","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"determine if user is owner of target content","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, userloginid:\" + userloginid + \" authorid:\" + authorid , module);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"utilmisc.tolist(\"article\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, roles:\" + roles +\" roletypelist:\" + roletypelist , module);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get all the subsites that the user is permitted to link to","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, origpublishedlinklist:\" + origpublishedlinklist , module); make a map of the values that are passed in using the top subsite as the key. content can only be linked to one subsite under a top site (ends with \"_master\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, param:\" + param + \" pos:\" + pos , module);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, siteidlookup:\" + siteidlookup , module); loop thru all the possible subsites","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"int counter = 0;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"string permissionmessage = null;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, arr:\" + arrays.aslist(arr) , module);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"main (2nd level) site id","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"timestamp topfromdate = (timestamp)arr[3];","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see if a link already exists by looking for non-null fromdate if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, pubarr:\" + arrays.aslist(pubarr) , module);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, currentsubcontentid:\" + currentsubcontentid , module); if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, origsubcontentid:\" + origsubcontentid , module);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"disable existing link","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, deactivating:\" + cassoc , module);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create new link","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, servicein(3b):\" + servicein , module);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (debug.infoon()) debug.loginfo(\"in updatepublishlinks, results(3b):\" + results , module);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if no current link is passed in, look to see if there is an existing link(s) that must be disabled","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"delete associated relation annotation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update timestamp now","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store latest annotations","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"a hack to rememeber the visural dropdown display value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"setlayerandfeaturemodels(jcas);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gets abstractoption set. @return the {@code abstractoption} set","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check the first row","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check the last row","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"nothing to do here","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use the old db definitions to create the tables","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"verify the absence of the new columns in the tables","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"upgrade the tables and add new columns to the old tables","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"verify the presence of the new columns in the upgraded tables","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"depending on whether the user said \"yes\" or \"no\", send him to the right place.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dismiss","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"creates an instance of statsvalues which supports values from the specified {@link statsfield} @param statsfield {@link statsfield} whose statistics will be created by the resulting {@link statsvalues} @return instance of {@link statsvalues} that will create statistics from values from the specified {@link statsfield}","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"function stats","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"assuming that primary key is a single attribute (column) for the given table name, this method can retrieve it. @param tablename the name of the table in the dbms. @return the name of the primary key column.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the http credential header we need from a new oauth2 accesstoken.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"optimize for the common case: do a volatile read to peek for a good cache value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"defer the future resolution (asyncrefresh will spin up a thread that will try to acquire the lock)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_bnt0actionperformed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"posicionar cursor","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"try and read a format if we don't have one already.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we can't make progress without one.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"rendering loop.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test alignmentutils.trimcigarbyreference()","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"noinspection throwablenotthrown","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"caller: newinstance() input: see newinstance()","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tablesize = 1 << 3 = 8 in my case","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store the symbol which is spread","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for explanations on how to distribute symbol values over the table: http: fastcompression.blogspot.fr\/2014\/02\/fse-distributing-symbol-values.html symbol start positions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cumulative = [0,3,6,8,9] in my case store the start position of every symbol","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"low probability symbol","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cumulative[3+1] = 8+1 = 9 spread symbols","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make sure the symbols are successfully spread","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"build table fill in ctable1","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tableu16 : sorted by symbol order; gives next state value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"build symbol transformation table fill in symboltt","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stop the thread.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"after the interrupt, the run() method will stop tun2socks, and then complete. we need to wait until that is finished before closing the tun device.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"merge the events in the given list if they are within the same period general algorithm is as follows: 1) sort them into a map from (type, description)-> list<aggevent> 2) for each key in map, merge the events and accumulate them in a list to return @param timeunitlength @param premergedevents @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"effectively map from type to (map from description to events)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"result list to return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for each (type, description) key, merge agg events","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for each description ...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"run through the sorted events, merging together adjacent events","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"merge them","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"done merging into current, set next as new current","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"merge clusters to stripes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns first two number groups of the java version string. @param jdkver the java version string from system.getproperty(\"java.version\"). @return first two number groups of the java version string.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"grab only number groups and \".\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"split out the number groups","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the first number group","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"2nd number group, or 0","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@param analysis page analysis. @param tag tag. @param errors errors found in the page. @return true if the error has been reported.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check namespace","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"go to the end of the last line","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if there's a tag at the end of the last line","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the tag is in the last line","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if there's an other opening tag before in the page","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"decide what to do","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"displays clear icon in clearableedittext. @param show pass true to display icon, otherwise false to hide.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the \"device pixel ratio\" for the current display. a return value higher than 1.0 indicates a \"retina\" or \"hidpi\" screen. @deprecated this method relies on apple-specific awt properties, which remain from the old apple jdk but will be removed from the jdk in java 9.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"method to store an object field into the attached instance. @param fieldnumber number of the field to store @param value the value in the detached instance","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no value so nothing to do","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"1-1 interface field","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"field is defined to not accept this type so just return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not join table so no supported schema updates","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if we have to use jwk(s)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set all claims","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not the right way to do this","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"menumanager menu = menumanager.getinstance();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unused - gets points from a table. logger.config(\"\\nr_initpointtoangle\"); r_initpointtoangle (); unused - gets points from a table. logger.config(\"\\nr_inittables\"); r_inittables (); viewwidth \/ viewheight \/ detaillevel are set by the defaults","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we now know what patterns are being used, interleave to find times nb no need to reverse-optimize these itineraries; we'll just filter them below.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find all possible times to board and alight each pattern for each trip pattern, for each trip on that pattern, array of [depart origin, arrive destination]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sort by departure time of each trip, within each pattern","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"loop over departures within the time window firsttrip is the trip on the first pattern","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now interleave times","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"linear scan over timetable to do interleaving","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we've found the end of the times at which this path is possible","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find the transfer time","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no transfer time, we are at the same stop (board slack applied below)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tries to get the object directly if primary identifiers are present. tries to search for the object if they are not.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"search","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"assume single secondary identifier for simplicity","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get changes from the connector","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"there is no current shadow in a change. add it by fetching it explicitly.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"re-fetch the shadow if necessary (if attributestoget does not match)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stop running container","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"build artifact","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"open the file manager for the parent folder","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mrenderthread = new renderthread(getresources(), surface, v); init","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ssimplefs","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: wait for onframeavailable() ??","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"draw","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"rt.cleanup();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"notify assistive technologies that the combo box lost focus","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for now, only consider need to handle default creator","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"first things first: as per [issue#34], can not access private ctors or methods","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"and as above, can't access private ones","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"logger.debug(\"user \" + u.id + \" connected\"); add the new user to the data structures","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"try (jedis j = jedispool.getresource()) { j.sadd(\"online_users\", long.tostring(u.id)); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"notify logged users about the new player","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"logger.debug(\"unknown user connected\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"logger.debug(\"user \" + u.id + \" disconnected\"); remove user from the data structures","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wait for 100 ms to see if the user connects through another websocket thread.sleep(100);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"try (jedis j = jedispool.getresource()) { j.srem(\"online_users\", long.tostring(u.id)); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"notify logged users about the leaving player","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"logger.debug(\"unknown user disconnected\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"processed.clear(); reducecfg(cfg, processed);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"filtering product lists based on product attributes ?category=1 &manufacturer=2 &type=... &lang=en|fr not required, will use request language &start=0 not required, can be used for pagination &count=10 not required, can be used to limit item count @param model @param request @param response @return @throws exception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"new bigdecimal(this.cloudsnum); @todo erro? (x = bigdecimal.one)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"clear message received buffer","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"checking chain metrics","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"checking per chain metrics","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"checking each item in chain","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"load the quiz","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check that the type serializer is consistent","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"-------------- configure the source task's ship strategy strategies in task config","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"---------------- configure the receiver","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"connect source and target with edge","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for forward edges, create as many tasks in upstream operator as in source operator","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tez-specific bookkeeping todo: this probably will not work for vertices with multiple outputs","classification":"DESIGN","projectname":"namcyan"}
{"comment":"implementation of execution entry method","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"string transactionid = null; try { javax.transaction.transactionmanager transactionmanager = com.arjuna.ats.jta.transactionmanager.transactionmanager(); transactionimple transaction = (transactionimple) transactionmanager.gettransaction(); if (transaction == null) return; int status = transaction.getstatus(); transactionid = transaction.get_uid().stringform(); transactionid = transactionmanager.gettransactionid(); } catch (exception e) { e.printstacktrace(); return; }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we cannot proceed while a (another) prepare is in progress","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update the number of booked and free seats in the derived state","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a state derived from the current state which holds the new value(s)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"updates current state using values from the specified derived state","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"install the specified derived state as the current transaction state","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"currentstate = childstate;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"updates the current state using values from the specified derived state","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"implements the ice4j-related portion of {@link #start(bundlecontext)}. @param bundlecontext the {@code bundlecontext} in which this {@code videobridge} is to start @param cfg the {@code configurationservice} registered in {@code bundlecontext}. explicitly provided for the sake of performance.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make all ice4j properties system properties.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we expect the getstring to return either null or a non-empty string object.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"these properties are moved to ice4j. this is to make sure that we still support the old names.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initialize the the host candidate interface filters in the ice4j stack.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"start the initialization of the mapping candidate harvesters. asynchronous, because the aws and stun harvester may take a long time to initialize.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"move to new activity","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"** base case","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"** recursive case","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.err.println(\"\\t\\ta[\"+i+\"]:\"+attributename+\":\"+attributecell.getvalue());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"creates the widgets for criteria. @param centre @param root @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"empty property means \"entity itself\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create directory because it might not exist","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"path might include directories as well","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check file: or no scheme uris","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we will use it in upcoming send","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"bb should now be back to 1","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"retrieve all legal moves","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"retrieve all joint moves and next states","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"nop;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme: s = getstringprop(\"fontbaseurl\"); if (s != null) { fopfactory.getfontmanager().setfontbaseurl(s); }","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme: s = getstringprop(\"hyphenbaseurl\"); if (s != null) { fopfactory.sethyphenbaseurl(s); }","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme: s = getstringprop(\"userconfig\"); if (s != null) { fopfactory.setuserconfig(s); }","classification":"DEFECT","projectname":"namcyan"}
{"comment":"\"pdf\";","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\"postscript\";","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\"afp\";","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"coming back from the cash shop chr.warp(chr.getorcreatefieldbycurrentinstancetype(chr.getfieldid()));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"warping from portal in 106020403 is unable to find defined portal (not a scripted portal)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"character is dead, respawn request","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"always 0","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove shutdown hook to prevent resource leaks, unless this is invoked by the shutdown hook itself.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"race, jvm is in shutdown already, we can safely ignore this","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"retrieve persistence versions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"modify detached entity: add a new master","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get a managed copy from the merge operation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"verification","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_newnomatchstopsradiobuttonactionperformed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"temp buffer for storing labels","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"always use rankdir to determine how records are laid out","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"agerr(agerr, \"bad label format %s\\n\", nd_label(n)->text);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reclblp = \"\\\\n\";","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"info = parse_reclbl(n, flip, not(0), textbuf);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if ((sz.x < info->size.x) || (sz.y < info->size.y)) {","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"agerr(agwarn, \"node '%s' size may be too small\\n\", agnameof(n));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme - is this still true: suspected to introduce ronding error - see kluge below","classification":"DEFECT","projectname":"namcyan"}
{"comment":"build header actions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"setup webview.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we've detected the redirect url.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"suborg = foreach suborg_l generate dept, univ;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note: as yet there's no route to get here - a 2i query *always* uses a partitionrangereadcommand. this is here in preparation for coming changes in selectstatement.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the right hand side of the range may not be a decoratedkey (for instance if we're paging), but if it is, we can optimise slightly by restricting the slice","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for index queries over a range, we can't do a whole lot better than querying everything for the key range, though for slice queries where we can slightly restrict the beginning and end.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, just start the index slice from the key we do have","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"our binary travel time grid format ends with a block of json containing additional structured data. this includes this is somewhat hackish - when we want to return errors to the ui, we just append them as json at the end of we always append this json even when it won't contain anything so the ui has something to decode. the response's http status code is set by the caller - it may be an error or not. if we only have warnings and no serious errors, we use a success error code. todo distinguish between warnings and errors - we already distinguish between info and warnings. this could be turned into a gridjsonblock constructor, with the json writing code in an instance method.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we could do this when setting up the spark handler, supplying writevalue as the response transformer but then you also have to handle the case where you are returning raw bytes.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"--- precondition","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no element found","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get all tables that have dlp findings","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"log and continue","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"since there isn't an obvious way to get the chip version, the hub model is used to determine which chip is being used.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is a block creation process and when created this will be published to all peers and block will be added to blockchain. @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"read the one field, as required by the following rule: # vi. at least the randomnumber field must be read from the database result set.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update it, but make sure to exclude the current number as hibernate optimisations would have us \"fail\" the verification:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check for infinity and nan","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the integer part of d including '-' sign.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"int part fits long","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cwirth fix","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"biginteger should be used","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no fraction part","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we have a fraction.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the output string","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the fractional part of d","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"at this point df = b * 2^e. e must be less than zero because 0 < df < 1.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"1\/2^s2 = (nextdouble(d) - d)\/2","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the special case. here we want to be within a quarter of the last input significant digit instead of one half of it when the output string's value is less than d.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@formatter:off at this point we have the following: s = 2^s2; 1 > df = b\/2^s2 > 0; (d - prevdouble(d))\/2 = mlo\/2^s2; (nextdouble(d) - d)\/2 = mhi\/2^s2. @formatter:on","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"do we yet have the shortest string that will round to d?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"j is b\/2^s2 compared with mlo\/2^s2.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"j1 is b\/2^s2 compared with 1 - mhi\/2^s2.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"either dig or dig+1 would work here as the least significant digit. use whichever would produce an output value closer to d.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the even test (|| (j1 == 0 && (digit & 1))) is not here because it messes up odd base output such as 3.5 in base 3.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"specify one window to be used for all ffts and iffts. the window should be the same size as the ffts. @param window default is hammingwindow @see spectralwindowfactory","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use the same window everywhere.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: we should consider the model as not only the model, but also the input transforms for that model.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"find next wildcard in the pattern.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we're at a wildcard in the pattern, find the place in the text where the character(s) after the wildcard match up with what's in the text.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pattern ends with '*', we're all good.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see if patternpiecelen chars from text at textpos match chars from pattern at patternpos","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we matched, we're all set, otherwise we have to advance textpos","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we matched, we're all set, otherwise we failed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see if the pattern from patternpos to wildcardpos matches the text starting at textpos","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we didn't reach the end of the pattern, make sure we're not at a wildcard, that's a 0 or more match, so then we're still ok.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we're at the end, so we have a match if the pattern was completely consumed, and either we consumed all the text or we didn't have to match it all (no '$' at end of the pattern)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if key is specified, we should use key as routing; if key is not specified and no sequence id is provided, not an effectively-once publish, use the default round-robin routing.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if there is no key and sequence id is provided, it is an effectively-once publish, we need to ensure for a given message it always go to one partition, so we use sequence id to do a deterministic routing.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"control this view's display\/prompt\/action loop until the user chooses and action that causes this view to close.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"using this override to place getannualreport and gameshouldend inside displayview while loop.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check to see if the game should end and if so, display a message and return to main menu todo implement try catch. todo when fully implemented, this will contain mortality rate variable from annual report todo when fully implemented, this will contain currentyear variable from annual report. todo create end of game report showing total game statistics. use annual report format but bring in stats from every year. display the annual report above the gamemenuview","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo when fully implemented, this will contain mortality rate variable from annual report","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"get message that should be displayed only print if it is non-null","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"regular equals because of null","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"framebuffer is not up yet","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"select gputovram pbo an read pixels from gpu to vram","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"select vramtosys pbo, bind it to systemram and copy the data over","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"swap indices","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unmap buffer","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unbind pbo","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"draw screenshot.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"g2d.drawimage(img, transformop, 0, 0);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reference positions by doing point# * 3 + (0 for","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"x, 1 for y, 2 for heading)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make sure app is embedded in a correct div","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"main application must bind generic presenter and custom view !!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pre-defined places","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generic pages","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"$non-nls-1$ $non-nls-2$","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create an intent for emailing attendees of an event. @param resources the resources for translating strings. @param eventtitle the title of the event to use as the email subject. @param body the default text for the email body. @param toemails the list of emails for the 'to' line. @param ccemails the list of emails for the 'cc' line. @param owneraccount the owner account to use as the email sender.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use the event title as the email subject (prepended with 're: ').","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use the sendto intent with a 'mailto' uri, because using send will cause the picker to show apps like text messaging, which does not make sense for email addresses. we put all data in the uri instead of using the extra intent fields (ie. extra_cc, etc) because some email apps might not handle those (though gmail does).","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we will append the first email to the 'mailto' field later (because the current state of the email app requires it). add the remaining 'to' values here. when the email codebase is updated, we can simplify this.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the email app requires repeated parameter settings instead of a single comma-separated list.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add the subject parameter.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add the cc parameters.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"insert the first email after 'mailto:' in the uri manually since uri.builder doesn't seem to have a way to do this.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"start the email intent. email from the account of the calendar owner in case there are multiple email accounts.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"workaround a email bug that overwrites the body with this intent extra. if not set, it clears the body.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is a log statement for a disabled log-level, skip.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ok, it's block the code, but for a small period","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"detect with the precalculated hash value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ignore blank section definitions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"-- ignore","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not a match?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\"onload='...'\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\"onunload='...'\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"expandmenu style","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"expandmenu javascript","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"expandmenu","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"menuid","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"expandablemenu","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"showicon","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"showmenuhelp","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"content table class","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"content cell class","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"content message id","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"content message class","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"content menubar","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"content message","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"request context path","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"css file","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"banner image height","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"key suffix","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"property values","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"minimum valie","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generate html","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"banner style","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"banner image","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"print.sysprintln(\"property image source: \" + imgsrc);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"print.sysprintln(\"default image source: \" + this.getdefault());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"javascript","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"always write \"utils.js\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check for other javascript","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"current page name","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\"pagename\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"page url","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\"pageurl\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"htmloutput","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"produce the raw bytes of the content. the data is fetched using the pop3 retr command. @see #contentstream","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"number of bytes in this line","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"end of line","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"got cr, is the next char lf?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in any case, end of line","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not cr, nl, or crlf, count the byte","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"here when end of line or out of data if out of data, we're done","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if it was an empty line, we're done","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"help gc","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set the value for this header_name. throws illegalwriteexception because pop3 messages are read-only. @param name header name @param value header value @see javax.mail.internet.mimeutility @exception illegalwriteexception because the underlying implementation does not support modification @exception illegalstateexception if this message is obtained from a read_only folder.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add this value to the existing values for this header_name. throws illegalwriteexception because pop3 messages are read-only. @param name header name @param value header value @see javax.mail.internet.mimeutility @exception illegalwriteexception because the underlying implementation does not support modification @exception illegalstateexception if this message is obtained from a read_only folder.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove all headers with this name. throws illegalwriteexception because pop3 messages are read-only. @exception illegalwriteexception because the underlying implementation does not support modification @exception illegalstateexception if this message is obtained from a read_only folder.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add a raw rfc822 header-line. throws illegalwriteexception because pop3 messages are read-only. @exception illegalwriteexception because the underlying implementation does not support modification @exception illegalstateexception if this message is obtained from a read_only folder.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_label_iconrealizarpedidomouseclicked","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"favoriting","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unfavoriting","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stores stop id value with stopname key","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"inserts values into stoplatlon with stop_id @param stopid","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set the version on the manager to connect with","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we don't support it we should get an exception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"repeatedly add datanode copies equal to the number of their weights","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"object has a public static const variable names \"length\", which is some legacy compatibility crap left over from emca script 262, so we ignore it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we didn't really find any events, but we want to follow the same code path below as if we did.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see comment above.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"getters without setters are de facto const, use same bypass as above for const vars","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note: when we've failed to find change events for properties of untyped or object-typed parents, we go ahead and generate code to create a runtime propertywatcher with no change events specified. the lack of change events tells the runtime pw to introspect rtti to discover change events associated with the actual type of the actual value being assigned to the property. otoh for strongly-typed properties, we still require change events to be reachable at compile time.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"leave this chat room.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we are already disconnected leave maybe called from gui when closing chat window","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"delete the list of members","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"connection can be null if we are leaving cause connection failed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"determines whether to accept or drop a vp8 frame. note that, at the time of this writing, there's no practical need for a synchronized keyword because there's only one thread accessing this method at a time. @param frame the vp8 frame. @param incomingindex the quality index of the incoming rtp packet @param externaltargetindex the target quality index that the user of this instance wants to achieve. @param receivedms the current time (in millis) @return true to accept the vp8 frame, otherwise false.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we make local copies of the externaltemporallayeridtarget and the externalencodingtarget (as they may be updated by some other thread).","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we stop forwarding immediately. we will need a keyframe in order to resume.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"temporal scalability is not enabled. pretend that this is the base temporal layer.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"xxx(george) i've noticed some \"rogue\" base layer keyframes that trigger this. what happens is the client sends a base layer key frame, the bridge switches to that layer because for all it knows it may be the only keyframe sent by the client engine. then the bridge notices that packets from the higher quality streams are flowing and execution ends-up here. it is a mystery why the engine is \"leaking\" base layer key frames","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for non-keyframes, we can't route anything but the current encoding","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this branch reads the {@link #currentencodingid} and it filters packets based on their temporal layer.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pending downscale, decrease the frame rate until we downscale.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pending upscale, increase the frame rate until we upscale.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the currentspatiallayerid matches exactly the target currentspatiallayerid.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in this branch we're not processing a keyframe and the currentspatiallayerid is in suspended state, which means we need a keyframe to start streaming again. reaching this point also means that we want to forward something (because both externalencodingidtarget and externaltemporallayeridtarget are greater than 0) so we set the request keyframe flag. assert needskeyframe == true;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reads a weight matrix from the specified file, inserts it into the database with the specified name and version, and returns its dbid. this means that the file may contain only a single weight matrix","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"restore process to a saved checkpoint.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"treat strings with multiple terms as text only if using the default!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"don't auto-map if we don't have a type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"what follows is a poor man's crl extractor, for those lacking a bouncycastle \"bcprov.jar\" in their classpath. it's a very basic state-machine: look for a standard url scheme (such as http), and then start looking for a terminator. after running hexdump a few times on these things, it looks to me like the utf-8 value \"65533\" seems to happen near where these things terminate. (of course this stuff is asn.1 and not utf-8, but i happen to like some of the functions available to the string object). - juliusdavies@cucbc.com, may 10th, 2006","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"just return empty list","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"noinspection trywithidenticalcatches","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we don't want to pass the exceptions up or rethrow a more generic exception, since then, we would have to handle this on every object instantiation, but these exceptions should never throw in production, since these are static code issues (wrongly defined classes) which should be handled once, straight away and then never change again.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"looking for \" + nm + \"; trying \" + d.name);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"p = virtualfs.gettvfilesystem().getpath(virtualfs.getname().getname());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (list.size() >= 1) { first = list.get(0); } if (list.size() > 1) { others = new string[list.size() - 1]; for (int i = 1; i < list.size(); i++) { others[i - 1] = list.get(i); } } if (others == null) {","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"p = virtualfs.gettvfilesystem().getpath(virtualfs.getname().getname(),first); } else { p = virtualfs.gettvfilesystem().getpath(first, others); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"central directory structure \/ central file header signature","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixed 256 key size, 16 bytes salt + 2 bytes pwverification","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"public static sqlitedatabase getconnectiondb() {","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\u0435\u0441\u043b\u0438 \u0431\u0430\u0437\u044b \u043d\u0435\u0442, \u0442\u043e \u043e\u043d\u0430 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438, \u0438\u043d\u0430\u0447\u0435 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u0431\u0430\u0437\u0435","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"filler","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"items","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"args","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cancel","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"deposit & inform","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"navigation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@brief compute justifications for the predefined assertion. note that this will not contain tbox-assertions (i.e. subclassof, ...) @return a set of justifications for the assertion (basically a set of wrappers around sets of owl-axioms)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we represent justifications as instances of a custom class outside of this function, which requires transitioning this is done in order to hide usage of the owlapi in code that does not need to rely directly on it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"order is important for hitting set computation -> use treeset!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"auto generated method signature @param param5","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"auto generated method signature @param param6","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"auto generated method signature @param param7","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unpack model","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"link","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"name label","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"eid label, configurable","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lets switch to gravia's mvn coordinates","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo lest not deploy shared stuff for now since bundles throw an exception when trying to stop them which breaks the tests ;)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo should not really happen when we can ask about the installed resources","classification":"DESIGN","projectname":"namcyan"}
{"comment":"when the dragon dies: <ul> <li>if the fight owner is online, put the dragon drops in that player's inventory. if they are not online, <\/ul> @param dragon the dragon that died.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"bukkit.getofflineplayer() never returns null, even for non-existent.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fight owner is offline. record an unclaimed prize.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the item(s) did not fit, so player must claim with command.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"clear the fight owner once prizes have been given or unclaimed prizes recorded, to prevent extra prizes if spurious dragons spawn.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ifastsum","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validates the data on entering the corresponding parse tree node. @throws datamodelexception a violation of data model rules","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validates the data on exiting the corresponding parse tree node. @throws datamodelexception a violation of data model rules","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"0..1. how well does this fuel absorb radiation?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tests that the component will be initialized correctly.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".scale(6)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mdrive.setvelocity(command, new drivesignal( command.scale(constants.kdriveleftkv).getleft() + math.copysign(constants.kdriveleftvintercept, command.getleft()), command.scale(constants.kdriveleftkv).getright() + math.copysign(constants.kdriveleftvintercept, command.getright()) ));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"associate the data with the formlayout columns and load the data.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"1 - set properties of the form","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sets the form size to fill the screen.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"2 - define the fields instances to use - we don't use .setlabel since we will use addformitem instead of add to add items to the form - addformitem allows us to set supertextfield with on a formalayout when add doesn't","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from secteuractivite is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodesecteuractivite.setlabel(\"secteuractivite\"); ???this.cbocodesecteuractivite.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add filtering","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"beforeupdate codesecteuractivite (cif): contr\u00f4le de inactif","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (event.getvalue() != null) {","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"allow users to enter a value which doesn't exist in the data set, and set it as the value of the combobox.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sepecific for isinactif","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"3 - bind fields instances to use (manual data binding) easily bind forms to beans and manage validation and buffering to bind a component to read-only data, use a null value for the setter.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"4 - add input fields to formlayout - we don't use .setlabel since we will use addformitem instead of add to add items to the form - addformitem allows us to set supertextfield with on a formalayout when add doesn't this.formlayout.add(this.txtcodedomaineactivite, this.txtlibelledomaineactivite, this.txtlibellecourtdomaineactivite, this.chkinactif); 4 - alternative","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"5 - making the layout responsive : custom responsive layouting breakpoint at 600px, with the label to the side. at resolutions lower than 600px, the label will be at the top. in both cases there is only 1 column.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@param ci @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if explorer is in createmode","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"there must be a ranking because everything that is displayable on tagit is a pointofinetrest but maybe also another type (like a route) until then we break, when contentitem has toptype (like route) init with none","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"res = \"content\/photoroute.xhtml\";","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if( currentuser.getcontentitem().getid() == currentcontentitem.getid() ) { res = \"content\/user.xhtml\"; personaction.begin(); break; } else {","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"asynchronous method to handle the incoming request.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we could write remaining bytes, but for test this is enough","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@return default set of attributes for creating new storage keys","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"keyattributes.id;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"keyattributes.name;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this method are overridden for extra claim request to google end-point @param request @param response @param context @throws authenticationfailedexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create oauth client that uses custom http client under the hood","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"from distribution to transmission","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if original input is set in the incoming genomic location object then use the same value for the normalized genomic location object returned, otherwise set it to the string representation of the incoming genomic location object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"normalize chromosome name","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"convert vcf style start,end,ref,alt to maf style","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove common prefix and adjust variant position accordingly","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"readline \" + positioninbuffer + \" \" + new string(buffer));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"read more data","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we reached the end of the buffer and did not find a new line. reset positioninbuffer continue and read in more data","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"newline found","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we've reached the end of the file","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo do we need two copies?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo this does not look right","classification":"DESIGN","projectname":"namcyan"}
{"comment":"system.arraycopy(buffer, lineboundaries[0], newpartialline, partialline.length, lengthofline);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.arraycopy(buffer, lineboundaries[0], returnline, 0, lengthofline);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.arraycopy(buffer, lineboundaries[0], returnline, partialline.length, lengthofline);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"keep looping. the only case where i can think of that this would happen is if the buffer is full of new line characters. hopefully that will never happen.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note: while we could have used loader.load(sourcepath.tofile() if the path fs provider == filesystems.getdefault(), that rdfloader method does not use absolute path as the base uri, so to be consistent we'll always do it with our own input stream that means we may have to guess format by extensions:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"load","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a hollow type for each ftype (this requires two steps, because we don't necessary have all the types created for superclasses until this loop completes)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create type instance","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add to my data structures","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get typetype to use for mixin list (we need to handle case when loading sys itself - and lookup within my own pod)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@param q_cntl @param index @param h @param xv @param cntl @throws metadatavalidationexception @throws metadataexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"creates a popupmenu at the pressed sound button and handles the users input","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"declare popupmenu and assign it to the design created in longclick.xml","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle user clicks on the popupmenu","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the user wants to share a sound or set a sound as system audio","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"define a filename on the given information from the soundobject and add the .mp3 tag to it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the path to the users external storage","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"creates the directory if it doesn't exist mkdirs() gives back a boolean. you can use it to do some processes as well but we don't really need it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"finally define the file by giving over the directory and the filename","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"define an inputstream that will read the data from your sound-raw.mp3 file into a buffer","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"log the name of the sound that is being saved","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"define an outputstream\/fileoutputstream that will write the buffer data into the sound.mp3 on the external storage","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"define a buffer of 1kb (you can make it a little bit bigger but 1kb will be adequate)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"write the data to the sound.mp3 file while reading it from the sound-raw.mp3 if (int) inputstream.read() returns -1 stream is at the end of file","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"close both streams","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"log error if process failed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"send a sound via whatsapp or the like","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the users device android version is 5.1 or higher if it is you'll have to use fileprovider to get the sharing function to work properly","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"define the intent to be of type audio\/mp3","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"start a new chooser dialog where the user can choose an app to share the sound","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"uri refers to a name or location .parse() analyzes a given uri string and creates a uri from it define a \"link\" (uri) to the saved file","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"save as ringtone, alarm or notification if (item.getitemid() == r.id.action_ringtone) { create a little popup like dialog that gives the user the choice between the 3 types theme_holo_light was deprecated in api 23 but to support older apis you should use it alertdialog.builder builder = new alertdialog.builder(view.getcontext(), alertdialog.theme_holo_light); builder.settitle(\"save as...\"); builder.setitems(new charsequence[]{\"ringtone\", \"notification\", \"alarm\"}, new dialoginterface.onclicklistener(){ @override public void onclick(dialoginterface dialog, int which){ decide on the users choice which information will be send to a method that handles the settings for all kinds of system audio switch (which) { ringtone case 0: changesystemaudio(context, ringtonemanager.type_ringtone, file); break; notification case 1: changesystemaudio(context, ringtonemanager.type_notification, file); break; alarmton case 2: changesystemaudio(context, ringtonemanager.type_alarm, file); break; default: } } }); builder.create(); builder.show(); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add sound to favorites \/ remove sound from favorites if (item.getitemid() == r.id.action_favorite) { databasehandler databasehandler = databasehandler .getinstance(context.getapplicationcontext()); identify the current activity if (context instanceof favoriteactivity) { databasehandler.removefavorite(context, soundobject); } else { databasehandler.addfavorite(soundobject); } }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"encodes this {@link archive} into a {@link bytebuffer}. <p \/> please note that this is a fairly simple implementation that does not attempt to use more than one chunk. @return an encoded {@link bytebuffer}. @throws ioexception if an i\/o error occurs.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add the data for each entry","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"copy to temp buffer","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"copy to output stream","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"write the chunk lengths","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"since each file is stored in the only chunk, just write the delta-encoded file size","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we only used one chunk due to a limitation of the implementation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wrap the bytes from the stream in a buffer","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"inherit documentation from supertype","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if empty","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the input stream","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"read the event","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update readcount and readposition","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"offset to next unread event","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generate new entry","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we'll get interrupted when asked to shutdown. in this case, we can skip the call to nextreadaheadlog.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stop processing events","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note that the read offset is still valid since the marshalledobject extraction should always succeed. it's just that the remoteevent within it could not be reconstituted. therefore, just skip to the next marshalledobject in the stream.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if an ioexception occurs then the eventreader is in a bad state. therefore, we get rid of our existing reference and create a fresh one. the underlying stream is also removed from from the pool, forcing a fresh copy to be returned on the next \"get\" request.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo (fcs) add close to interface eventreader.close();","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"private static org.slf4j.logger log = loggerfactory.getlogger(specialportalhandler.class);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: check that flavor is readonly or mutable.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"authenticate given username and password through jaas (instead of java ee security). @param user, or null @param password cleartext password. after authentication will be cleared. @param realm jaas realm name @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"referenced in jaas.conf","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@override public void apply(object key, offheapinternalcacheentry value) { if (filter.shouldloadkey((k)key)) { action.apply((k)key, value); } }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"some of the dark star stuff is 8-bit, so we have to make sure we're positive","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"data[pos + 1] = (byte)((val >> 0) & 0x0f); data[pos] = (byte)((val >> 4) & 0x0f);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"preconditions.checkargument(node.getnode() instanceof stmt, \"expected input of action scope.insertentry to be a stmt joinpoint\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"preconditions.checkargument(newstmt instanceof stmt, \"expected input of action scope.insertend to be a stmt joinpoint, is a \" + node.getjoinpointtype());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"list<? extends astatement> statements = selectstatements(); if (statements.isempty()) { throw new runtimeexception(\"not yet implemented when scope is empty\"); } stmt newstmt cxxactions.getvalidstatement(collectionutils.last(statements).getnode()); insertimpl(position, newstmt); body becomes the parent of this statement return new cxxstatement(newstmt, this);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"adds a bookmark with the given {@link tab}. this will reset last used parent if it fails to add a bookmark. @param context the current android {@link context}. @param bookmarkmodel the current {@link bookmarkmodel} which talks to native. @param tab the current {@link tab} which bookmark properties are pulled. @param bookmarktype the {@link bookmarktype} of the bookmark.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reading list items will be added when either one of the 2 conditions is met: 1. the bookmark type explicitly specifies reading_list. 2. the last used parent implicitly specifies reading_list.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use \"new tab\" as title for both incognito and regular ntp.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the shopping list experiment saves extra metadata along with the bookmark.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the probability that the records v1 and v2 came from represent the same entity, based on high and low probability settings etc.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we ignore properties with no comparator","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get a sorted copy of the series data. once we have this we can release locks.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make sure we have data before continuing.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"calculate the range on each axis.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"axisx = new range<>(ticksx.get(0), ticksx.get(ticksx.size() - 1)); rangexrendered = axisx;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"axisy = new range<>(ticksy.get(0), ticksy.get(ticksy.size() - 1)); calculate the width of the widest y-axis label and the height of the tallest x-axis label.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"x-labels are displayed at a 30-degree incline. the approximate width of the rotated text is 0.87*{width} the distance from the top of the bounding to the origin from which text should be drawn is 0.5*{length} + 0.87*{height}","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"render series data, build tooltip cache","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add rectviewport.getminy() instead of subtracting because we're mirroring the y coordinate around the x-axis.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"render axes (last so it overwrites any values near an axis) clear the axis area","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"draw the axes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ticksx and ticksy are lists of the corresponding values; they need to be handed of to the corresponding fnnormalize and then scaled for display.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"translate then rotate to rotate text around local origin rather than rotating around the canvas origin. rotating and drawing at an offset results in a rotation around the origin.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (type == note_on || type == note_off)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only show if channel switch is on","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (command == noteoff || velocity == 0)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update progress slider periodically","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"guitarview.getprogslide().setvaluelabel(string.format(\"%d\", percent)); guitarview.mytextarea.append(string.format(\"%d\", percent) + \"\\n\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\" \" + lat + \" \" + lng);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this update method will be called from update in breakoutview it determines if the paddle needs to move and changes the coordinates contained in rect if necessary","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"decrement position","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"increment position","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"apply the new position","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"repeat every 1 second","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"spec: 'the receiver must reject the request if the source url is the same as the target url.'","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: allow configuration of allowed target uri hosts.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"in theory i\/o failures cold also be issues on our side (e.g. trusted cas being wrong), but differentiating between those and issues on the source uris side (e.g. 404s) seems hard.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"entrada de dados","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"primeiro n\u00famero","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"segundo n\u00famero","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"terceiro n\u00famero","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"detremina o maior valor","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"imprime resultado","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"prepare","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"seek","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note: valid position is returned","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"start","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wait for the next player started","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note: valid current position position is returned","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wait for the next player completion","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note: standardmediaplayer fails on this assertion if using nuplayer","classification":"DEFECT","projectname":"namcyan"}
{"comment":"note: valid current position position is returned xxx galaxy s4 (sc-04e, android 4.4.2) fails on this assertion","classification":"DEFECT","projectname":"namcyan"}
{"comment":"check if this ship is\/would be interdicted at specified position. @param ship ship @param position positon to check from @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo add interdiction check for target sector","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"use vanilla check method - check one sector in each direction for jumpaddons that interdict this one.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"debug jumpdrive level","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"debugfile.log (\"warpdrive of \"+ ship.getname() + \" has level: \" + ((managedsegmentcontroller<?>)ship).getmanagercontainer().getpowerinterface().getactivereactor().getlevel());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"range to check for inhibitors [sectors]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get inhibitor level returns [0..9]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo change apply value to 300k?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"will catch anything up to","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"max inhrange of inhibitor","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo change config entry of inhibition power consumption","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"debugfile.log(\"inhibitor has strength: \" + inhibitorstrength + \" catches rkt level: \" + catcheslvl + \" power cons: \" + inhibitorstrength * 60000 + \" range: \" + inhrange + \" vs: \" + distance);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"figure out what script to open. a missing script name is caught by the resolver\/systemid grouping later on and causes an exception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"locate the appropriate file on the filesytem","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set up the bsf manager and register relevant helper \"beans\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"parameters to act(...)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"scriptaction housekeeping","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"helpers todo: should we check for a null request object here or let the script handle it?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"execute the script","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"try\/catch","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"snapshot the directory before installing dependencies","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"snapshot the directory after installing dependencies","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the directories, longest named directories first","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\"touch\" the file to fix this issue","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@see internaldataview#postputall(distributedputalloperation, versionedobjectlist, localregion)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sendreply","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"distribute if required","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"attempts to sign in or register the account specified by the login form. if there are form errors (invalid email, missing fields, etc.), the errors are presented and no actual login attempt is made.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reset errors.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store values at the time of the login attempt.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check for a valid password.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check for a valid email address.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"there was an error; don't attempt login and focus the first form field with an error.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we show the loader and hide the form","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we set the response listener with corresponding overridden methods","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we add the request","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ignore too frequent notifications, according to user preference","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"determinate source app name (\"label\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get color","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ignore gadgetbridge's very own notifications, except for those from the debug screen","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this could cause #395 to come back","classification":"DEFECT","projectname":"namcyan"}
{"comment":"dismiss action","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"open action","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mute action","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for both dismiss and open","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for mute","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"last day must also be included","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"technical","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if we have data about this day in the database? maybe it's christmas or maybe it's the weekend.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"1. dividend payments to other parties","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"2. do i have any rights or obligations (options) \/ obligations(stocks)?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"3. strategy((1.)unemployment rate, (2.) p\/e (3) moving average (4) rsi)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"4. pay dividends to the owners","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"first search exact.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"second search case-insensitive, but still exact.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"third search sub-string.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fourth search sub-string and case-insensitive.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@real","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"approximated black 1976 implied standard deviation, i.e. volatility*sqrt(timetomaturity). <p> it is calculated using brenner and subrahmanyan (1988) and feinstein (1988) approximation for at-the-money forward option, with the extended moneyness approximation by corrado and miller (1996)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"parameters","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"eye rule with prefix","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set the shutter with a string.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set the band information on the data choice @param datachoice the data choice @param aii the addeimageinfo with the image stuff","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if this data source has been changed after we have create a display then the possibility exists that the bandinfo contained by the incoming data choice might not be valid. if it isn't then default to the first one in the list","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.err.println(\"has band = \" + bandinfos.contains(bi));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"finds neighbors of a given node @return list of nodes neighboring the current node","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"since we're on a grid, treat our graph as such and determine neighbors like that","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"executes the given task (supplier) in the grpc context executor of this client, such that if the context is cancelled (e.g. client shutdown) the rpc is automatically cancelled. <p> important: tasks submitted in parallel by different threads are forced executed sequentially. <p>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(hexdumplistener.gethexdump(frame.data, 0, frame.enddata, true, true));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"last byte for flush ?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the database does not store a time zone, so we assume the date is in the system's time zone. but to make these tests compare epoch times but still work with any system time zone, we have to offset the epoch to the system's time zone.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"read from <annpath>\/<annset>\/<tiering>\/<docid>.json","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"log.info(\"reading annotations from {}\", file.getpath());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"noannotationscount++; if (noannotationscount % 100 == 1) { log.debug(\"{} document(s) do not have {} annotations\", noannotationscount, annset); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"until the end of this json object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"skip types","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"do nothing: we just want to increment the parser's position","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"annotation map","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"relation map","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"show the export file dialog and export the current selected task graph using the selected <code>fileimportexportdecorator.exportworkflow<\/code> method.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"computes the state resulting from performing the bitwise xor-operation on this state and the given state. if one of the states is bottom, bottom is returned. if both states represent single values, a state representing the value obtained by the bit-wise xor-operation on the states' values is returned. otherwise, top is returned. @param pstate the state to bit-wise-xor with this state. @return the state resulting from performing the bitwise xor-operation on this state and the given state. if one of the states is bottom, bottom is returned. if both states represent single values, a state representing the value obtained by the bit-wise xor-operation on the states' values is returned. otherwise, top is returned.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"[0,1] ^ 1 = [0,1]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"1 ^ [0,1] = [0,1]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"computes the state resulting from flipping the bits of the values represented by this state. @return the state resulting from flipping the bits of the values represented by this state.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"computes the state resulting from performing the bitwise or-operation on this state and the given state. if one of the states is bottom, bottom is returned. if both states represent single values, a state representing the value obtained by the bit-wise or-operation on the states' values is returned. otherwise, top is returned. @param pstate the state to bit-wise-or with this state. @return the state resulting from performing the bitwise or-operation on this state and the given state. if one of the states is bottom, bottom is returned. if both states represent single values, a state representing the value obtained by the bit-wise or-operation on the states' values is returned. otherwise, top is returned.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"grayf32 binary32 = new grayf32(input8.getwidth(), input8.getheight());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gthresholdimageops.threshold(input32, binary8, threshold, down);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"outputimage = convertbufferedimage.convertto(binary8, null);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"outputimage = imageutil.removealpha(outputimage); outputimage = imageutil.convertrgb(outputimage, new int[] {0x0d0d0d}, new int[] {0xffffff});","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"block developer application @param appid the id of the application to be blocked @return a boolean value that indicates whether the update is successful","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"let's get the user from principal and validate the userid against it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo check and ensure user is moderator role","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"final set of paths","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"primary physical sd-card (not emulated)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"all secondary sd-cards (all exclude primary) separated by \":\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"primary emulated sd-card","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"device has physical external storage; use plain paths.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"external_storage undefined; falling back to default.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"device has emulated storage; external storage paths should have userid burned into them.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\/storage\/emulated\/0[1,2,...]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add all secondary storages","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"all secondary sd-cards splited into array","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no more entries to read","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get read locks on the specified rows to prevent skipping of rows that haven't committed yet, but have an id between idstoread. for example, one transaction starts and inserts id = 1, but another transaction starts, inserts, and commits i=2 before the first transaction commits. locking can also be done with serializable isolation level.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for a given audit log id, the join would have produced multiple rows for each id. each row contains a single output. group all the rows and the outputs into a auditlogentry. for a given audit log id, these accumulate the outputs from the different rows.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"invalid operations are returned as null","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this means that all the outputs for a given audit log entry has been read.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reset these accumulated values","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"currently, nothing is done with db's","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this will happen for queries that don't have any output objects. this can be removed a long with the outer aspect of the join above once the bug with exchange partitions is fixed.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this is the case where we read to the end of the table.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"startrobot(); sleep(1000); give motors time to ramp up to speed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"private static boolean _use_dos_palette = false;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"final filelist files = _use_dos_palette ? files_dos : files_win; final filelist files = files_win;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"loadgrfindexed(files.basic[0].filename, trg1idx, 0);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"non-breaking space medium","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"non-breaking space tiny","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"non-breaking space large","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"files.landscape[_sprite_page_to_load - 1].filename,","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unload sprite group data","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reset price base data","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"location of (zr, zi) in histogram","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use threadlocalrandom for improved performance","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the sequence generated by (cr, ci) escapes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add node to correct tree @param ctx cpntext @param treetype tree type @param record_id id @param trxname transaction @return true if node added","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"insert tree in correct tree","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for each s, we may need to create a new \"chunk\" each partition is created by dfs from a source","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a new logical plan for the new chunk","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the spread (smegma) entry for the climatology @param request the request @param dpi the input @param sample a sample grid @param climstartyear starting year for climatology @param climendyear ending year for climatology @return an entry or null @throws exception problems","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.err.println(\"creating spread\"); string statname = \"mean\";","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"per marty hoerling - just use the spread of one member","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find the mean","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.err.println(\"found mean: \" + sprdentry);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sprdentry = sample; now make the spread from the mean","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not testing persistence here","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"request has been forwarded to master node, and was","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: do something here when the time comes.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: cleanup the clientrequests after the requests are completed","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"add thread to back of list for this key - add is thread safe","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"while (clientrequests.get(key).peek()[0] != clientport || clientrequests.get(key).availablepermits() != max_reads);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"delete the key","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: mark it as deleted then loop to see if anybody is reading\/writing to it if a write is after, keep the row by unmarking it as deleted (since the operation cancels) if a read is after, check the deleted flag, if its deleted, make sure to return key dne otherwise, return the key if at any point the queue is empty, and the row is marked as deleted, then remove it from the clientrequests delete it from the cache as well! remove the top item from the list for this key","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"logger.debug(\"prune waiting\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"insert\/update the key","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"inserting a new key","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"updating a key","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stop the deletion","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sleep for a bit to let data take effect thread.sleep(1000);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove the top item from the list for this key","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@param args contains the program's input args (here for signature purposes)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"'and' may appear here","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"parse optional expressions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"parse body","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reset active media query to none","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":",","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo configuration \"cn={0},ou=wct users,dc=webcurator,dc=org\", \"cn={0},ou=wct users,dc=webcurator,dc=org\"","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"***** deceleration mode","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the url is opaque, meaning it starts with something like \"portlet:\" or \"mailto:\" and doesn't have the double-forward-slash like \"http: \" does, then","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the uri starts with \"portlet:\", then return a baseurl that contains the modified parameters. this will be a url that represents navigation to a different viewid.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tck: modeviewidtest tck: requestrenderignoresscopeviacreateviewtest tck: requestrenderredisplaytest tck: requestredisplayoutofscopetest tck: renderredirecttest tck: ignorecurrentviewidmodechangetest tck: exceptionthrownwhennodefaultviewidtest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the uri is self-referencing, meaning, it targets the current faces view, then copy the render parameters from the current portletrequest to the baseurl. note: this has the added benefit of copying the bridgerequestscopeid render parameter, which will preserve the bridgerequestscope if the user clicks on the link (invokes the baseurl).","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the portlet container created a portleturl, then apply the portletmode and windowstate to the portleturl.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"apply the security.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"according to the bridge spec, the \"javax.portlet.faces.secure\" parameter must not be \"carried forward to the generated reference.\" according to a clarification in the portlet 3.0 javadoc for baseurl#setproperty(string,string), setting the parameter to null will remove it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, return the a baseurl string representation (unmodified value) as required by the bridge spec.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, if the url is a jsf2 portlet resource url, then","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"faces-63 return the uri unmodified to prevent double-encoding of resource urls.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, if the url is not a jsf2 portlet resource url, but still contains the \"javax.faces.resource\" resource url identifier, then return a resourceurl that can retrieve the jsf2 resource.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, if the url is relative, in that it starts with \"..\/\", then return a baseurl string representation of the url that contains the context-path.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tck: encoderesourceurlrelativeurltest tck: encoderesourceurlrelativeurlbacklinktest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, if the url is external, then return an encoded baseurl string representation of the url.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tck: encoderesourceurlforeignexternalurlbacklinktest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, if the url originally contained the \"javax.portlet.faces.viewlink\" which represents navigation to a different faces view, then","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the url targets a faces viewid, then return a portleturl (action url) that targets the view with the appropriate portletmode, windowstate, and security settings built into the url. for more info, see javadoc comments for {@link bridge#view_link}.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tck: encoderesourceurlviewlinktest tck: encoderesourceurlviewlinkwithbacklinktest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, return a portleturl (render url) that contains the \"_jsfbridgenonfacesview\" render parameter, which is a signal to the genericfacesportlet to dispatch to this non-faces target when the url is requested. note that this seems to be a use-case that is contradictory with the javadoc for brige#view_link which claims navigation to a different view. but there are a number of tests in the tck that utilize this (see below).","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tck: encodeactionurlnonjsfviewrendertest tck: encodeactionurlnonjsfviewwithparamrendertest tck: encodeactionurlnonjsfviewwithmoderendertest tck: encodeactionurlnonjsfviewwithinvalidmoderendertest tck: encodeactionurlnonjsfviewwithwindowstaterendertest tck: encodeactionurlnonjsfviewwithinvalidwindowstaterendertest tck: encodeactionurlnonjsfviewresourcetest tck: encodeactionurlnonjsfviewwithparamresourcetest tck: encodeactionurlnonjsfviewwithmoderesourcetest tck: encodeactionurlnonjsfviewwithinvalidmoderesourcetest tck: encodeactionurlnonjsfviewwithwindowstateresourcetest tck: encodeactionurlnonjsfviewwithinvalidwindowstateresourcetest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, if the url targets a faces viewid, then return a resourceurl that targets the view.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tck: resourceattrretainedafterredisplaypprtest tck: encodeactionurljsfviewresourcetest tck: encodeactionurlwithparamresourcetest tck: encodeactionurlwithmoderesourcetest tck: encodeactionurlwithinvalidmoderesourcetest tck: encodeactionurlwithwindowstateresourcetest tck: encodeactionurlwithinvalidwindowstateresourcetest tck: encodeurlescapingtest tck: encoderesourceurlwithmodetest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, if the bridge must encode the url to satisfy \"in-protocol\" resource serving, then return a an appropriate resourceurl.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tck: nonfacesresourcetest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, assume that the url is for an resource external to the portlet context like \"\/portalcontext\/resources\/foo.png\" and return a baseurl string representation of it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tck: encoderesourceurltest tck: encoderesourceurlbacklinktest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"these binding kinds avoid switchingprovider when the backing instance already exists, e.g. a component provider can use factoryinstance.create(this).","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"these binding kinds avoid switchingprovider when their are no dependencies, e.g. a multibound set with no dependency can use a singleton, setfactory.empty().","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"component.setimportenabled(false);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"short circuit if it's a text node, implementation is simpler","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise, calculate two locations and subtract","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tools","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"appcontext.getproperty(\"cuba.user.namepattern\"); if (stringutils.isblank(pattern)) { pattern","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"resolve properties inside a properties object @param props properties to resolve @param xmlprop @param file","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the relevance (of each results element) to the search terms.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"which results element to return first in this batch.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the number of results elements to return.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"request only fields that we need to display","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add a filter to ensure that solr never returns partial documents","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get line chart data option string to draw the chart @param filepath data file path @param datatype data type @param columns data all columns @param columnnames select data columns( list data) @return @throws illegalargumentexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only read limited line data(if the data length over max length)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"close the message channel.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we need to close everything because the socket may be closed by the other end like in lb scenarios sending options and killing the socket after it gets the response","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove the \"tcp:\" part of the key to cleanup the iohandler hashmap","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is a datasourcecomponent","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"given","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"method call on an object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"parent object reference find the caller object context","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the parent object, if exists","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find the context that contains the function starting the parent","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the call context must be the same object as the caller object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the method from that context","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"object reference","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the object itself","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find the context that contains the function","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the method from the object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"simple method call syntax","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unqualified \"parent\" function: must be a parent constructor reference find the caller object context","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"context is the parent object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the constructor from the parent context","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pure function call or unqualified call in an object context?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"function not found, or function exists only in subcontexts","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we found the function, now we need to find the overrides, if it is on an object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"search the function from the top of the object levels","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find the containing context by name","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"retrieve the function code","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"call the functon","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"return the return value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"(non-javadoc) @see com.holonplatform.vaadin.flow.components.builders.inputbuilder#build()","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check dataprovider","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"default data provider","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"configure captions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"(non-javadoc) @see com.holonplatform.vaadin.flow.components.builders.inputconfigurator#required( boolean)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"method method = method.constructnoargmethod(method.buildgettername(converter.parseattributename()), \"org.hl7.fhir.dstu3.model.type\"); method.setbody(gettemplate().getadaptergetmethoddelegationwithtrycatchbody(converter.parseattributename())); addmethod(methods, method);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"method = constructsetmethodsignature(converter.parseattributename(), \"org.hl7.fhir.dstu3.model.type\", getparenttype()); method.setbody(gettemplate().getadaptersetmethoddelegationbody(converter.parseattributename())); method.addimport(\"org.hl7.fhir.dstu3.model.type\"); addmethod(methods, method);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"method method = method.constructnoargmethod(method.buildgettername(converter.parseattributename()), \"org.hl7.fhir.dstu3.model.reference\"); method.setbody(gettemplate().getadaptergetmethoddelegationwithtrycatchbody(converter.parseattributename())); addmethod(methods, method);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"method = method.constructnoargmethod(method.buildgettername(converter.parseattributename() + \"target\"), \"org.hl7.fhir.dstu3.model.resource\"); method.setbody(gettemplate().getadaptergetmethoddelegationwithtrycatchbody(converter.parseattributename() + \"target\")); addmethod(methods, method);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo currently not handled: text, meta, references","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo add org.hl7.fhir.dstu3.model.type method","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"system.out.println(line);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"olp system.out.print(\".\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.format(\"%06x %04x\\n\", addr, val);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.format(\"%d (%d,%d)\\n\", index, x, y);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"result contains the local file uri if successful","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"produce table","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"append row to table","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create config for trajectory trajectoryconfig config new trajectoryconfig(constants.maxmecspeed,constants.maxmecacceleration) add kinematics to ensure max speed is actually obeyed .setkinematics(mecdrivetrain.getmeckinetimatics()); an example trajectory to follow. all units in meters. trajectory exampletrajectory trajectorygenerator.generatetrajectory( start at the origin facing the +x direction new pose2d(0, 0, new rotation2d(0)), pass through these two interior waypoints, making an 's' curve path list.of(new translation2d(1, 1), new translation2d(2, -1)), end 3 meters straight ahead of where we started, facing forward new pose2d(3, 0, new rotation2d(0)), config);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mecdrivetrain.setpose(pptrajectory.getinitialpose());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"position contollers","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"needed for normalizing wheel speeds constants.maxmecspeed, velocity pid's new pidcontroller(constants.kpmecl1velocity, 0, 0), new pidcontroller(constants.kpmecl2velocity, 0, 0), new pidcontroller(constants.kpmecr1velocity, 0, 0), new pidcontroller(constants.kpmecr2velocity, 0, 0),","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mecdrivetrain::getcurrentwheelspeeds,","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"consumer for the output motor voltages","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pathplannerstate initialstate = pptrajectory.getinitialstate(); return new instantcommand(() -> mecdrivetrain.setpose(new pose2d(initialstate.posemeters.gettranslation(), initialstate.holonomicrotation))) .andthen(mecanumcontrollercommand); .andthen(mecdrivetrain::stopdrive);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"list all ui beans (whether or not they have the {@link cdiui} annotation. @param beanmanager @return set of ui beans","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"warn: be supported in sflowvisitor\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"like x = y.m(z);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"do viewpoint adaptation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if there is an initialization for field, we need adapt it from classtree type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we don't want to annotate class type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"may need viewpoint adaptation if it is a field","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we need to adapt it from pov of this","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wei: move from reimannotatedtypefactory on aug 2.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wei: added on aug 2 wei: remove the above line, also considering remove the tree.getkind() == kind.member_select in the \"default\" case","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"try to get inputsource from saxsource input","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pass the sax parser to the compiler","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"incase there is an exception thrown resort to jaxp","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle domsource","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"try to get sax inputsource from dom source.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"try to get inputstream or reader from streamsource","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"clear old xml reader","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create inputsource from reader or inputstream in source","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"executed at the end of {@link imutator}s chain to apply all scheduled changes in the builder @param <t> type of the class to be built @param builder bytebuddy builder @return new instance of {@link dynamictype.builder} which contains all required changes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lets cache presence of methods per condition","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"included or excluded","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"advice will not be included in any case: moving forward","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no such methods at all","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"parameter type is string","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the duration is already formatted","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"invoke the trust plugin if necessary","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"legacy pipes in gf","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"public methods protected methods note: this returns a newly created (memory based) model, so all connections with a possible underlying store are cut","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note that the model has a \"predictable iteration order\", and since we get a concurrentmodexception while altering the model itself, we choose to instance a new one, and add the valid filtered nodes in order to this new one","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove all non-documentbaseuri subjects from the model","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we're not interested in blank nodes because they don't have a page as subject, so we might as well filter them out","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"trim all \"lang\" params from the subject this is an important change: from time to time, the eg. ?lang=en part of an uri seeps through, even though we set every rdfa html tag with a clear @about attribute eg. this is the case as subject of \"http: www.w3.org\/ns\/rdfa#usesvocabulary\" because we don't save the statements of a resource by language (the @lang tag makes sure it is added statement-per-statement for certain datatypes), the subject of the resource needs to be cleared from all lang query params to avoid false doubles while querying the triplestore (eg. using sparql). we group by subject-uri and double (or triple, or ..., depends on the amount of languages in the system) entries mess up the counts, iterations, group-by's, etc. that's why we try hard here to avoid these during import.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the object is a literal, check if it needs to be trimmed big note: xsd.anyuri is also an instance of a literal!!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we like to use and save relative uris as relative uris because it means we don't need to update them if the site domain changes. but the rdfa doc clearly states all relative uris need to be converted to absolute uris: https: www.w3.org\/tr\/rdfa-core\/#s_curieprocessing however, when dealing with custom html tags (eg. <meta datatype=\"xsd:anyuri\"> tags), this doesn't happen automatically, so let's do it manually.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"it makes sense to convert the data type to iri as well","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this means it's a 'true' literal -> check if we can trim","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note: this makes sense: see simpleliteral(string label, iri datatype) constructor code","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"after all the filtering above, check if we need to change the statement: remove it from the model and add it again later on","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the settings say so, validate the incoming (filtered) model","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"debug rdfdatamgr.write(system.out, model, rdfformat.ntriples);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@param standardvaluesmap","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"getvalidrawratios();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"oct 2012 check for zero or missing standard ratio and remove ratio from fractination consideration if ( standardvaluesmap[count] == 0.0 ) {","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"removes transitions to or from a missing activity, probably due to the activity not being imported.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@see orur01handler#processmessage(message)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the expected question for the obs in the hl7 message has to be coded","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this method handle the keyboard input of the player. it handles keeper moves. @param code @throws ioexception @throws classnotfoundexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"compute the chaining distances. we do <i>not<\/i> bother to materialize the chaining order.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store the current lowest reachability.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find the minimum:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"both values could be nan, deliberately.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"weighted sum, decreasing weights","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update distances","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"nan = processed!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns a list of clang flags used for all link and compile actions executed through clang.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo(bazel-team): use the value from --watchos-minimum-os instead of tying to the sdk version.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"configures the first algorithm responsible for : 1. discovering the distinct values for the header 2. arranging the initial crosstab data into rows for the second iteration 3. computing totals on the crosstab data. @return the intermediate algorithm","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initial steps algorithm.addinitstep(new configintermedcolsinitstep());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if(!needsprogramaticsorting){ algorithm.addinitstep(new configintermedioinitstep()); }else{ algorithm.addinitstep(new configmultiexternalfilesinputforintermreportinitstep()); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only for debug algorithm.addinitstep(new columnheaderoutputinitstep(\"intermediate report\")); main steps","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only for debug if( getshowtotals() || getshowgrandtotal()){ algorithm.addmainstep(new flatreporttotalsoutputstep()); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only for debug algorithm.addmainstep(new datarowsoutputstep()); if( intermediategroupcols.size() > 0){","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"user clicked ok button","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"starts at startingplayer, since input list starts at startingplayer","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"verify input","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate results","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if this entry is score, update views && activate next round","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"change buttons","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"code.appendinplace(parse(rs, hook).src); code.appendinplace(close);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"|| src[pos] == close)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: fix nulls only process the session if it has associated events","classification":"DEFECT","projectname":"namcyan"}
{"comment":"system.out.println(\"start\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"perspectivetriples.size() = \" + perspectivetriples.size());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"statement1.tostring() = \" + statement1.tostring()); system.out.println(\"statement1.getobject().tostring() = \" + statement1.getobject().tostring()); ttp: www.w3.org\/ns\/prov#wasattributedto,","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this means the source has properties so it is likely to be the document with an author","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"author source = \" + author);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"it is not the document so a cited source","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"quote source = \" + cite);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"str = \" + str);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"myperspective = \" + myperspective);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"statement1.getpredicate().geturi() = \" + statement1.getpredicate().geturi());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"final author = \" + author);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"assign country codes for {@link relation}s. this is assuming all {@link way}s crossing borders got cut and new {@link way}s were generated to fill the polygon. all we need to do here is group them by country and split the members. @param relation the {@link relation} to process. @return all {@link relation}s produced after splitting the given {@link relation}.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"either the way is not sliced or way is outside of the supplied bound","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if we have the sub-relation in the store","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"put the member back into the relation. missing members will be handled on a case by case basis","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"here we are not checking the bound, because we are assuming all data outside of bound has already been filtered out and doesn't exist in the pbfmemorystore","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"modified by way slicing or relation slicing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"group entities by country","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"one country code found, assign it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"muliple country codes found, implies relation crosses countries. as a 2 dimensional feature, relation sliced should not have more than one piece for each country. for now, for features without a country code (nodes and feature not covered by any boundary), we put a copy for every sliced piece to ensure integrity.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"process a pending trash message command. @param remotestore the remote store we're working in @param newmailbox the local trash mailbox @param oldmessage the message copy that was saved in the updates shadow table @param newmessage the message that was moved to the mailbox","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"0. no remote move if the message is local-only","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"can't find old mailbox, it may have been deleted. just return.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"2. we don't support delete-from-trash here","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the rest of this method handles server-side deletion 4. find the remote mailbox (that we deleted from), and open it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"5. find the remote original message","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"6. find the remote trash folder, and create it if not found","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the remote trash folder doesn't exist we try to create it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"7. try to copy the message into the remote trash folder note, this entire section will be skipped for pop3 because there's no remote trash","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"because remotetrashfolder may be new, we need to explicitly open it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update the uid in the local trash folder, because some stores will have to change it when copying to remotetrashfolder","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this will be called if the deleted message doesn't exist and can't be deleted (e.g. it was already deleted from the server.) in this case, attempt to delete the local copy as well.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"8. delete the message from the remote source folder","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo implement reconnect https: issues.apache.org\/jira\/browse\/artemis-194 todo: this used to check for && this.acceptorused.isauditnetworkproducers()","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"@param singlepointsegments @param string private static void writesegmentstofile(list<segment> segments, string filename) { geometryjson geometryjson = new geometryjson(digits_of_precision); file outfile = new file(filename); outputstream ostream = null; try { ostream new fileoutputstream(outfile); for (segment segment : segments) { geometryjson.write(((segmentimpl) segment).getlinestring(), ostream); } } catch (filenotfoundexception e) { e.printstacktrace(); } catch (ioexception e) { todo auto-generated catch block e.printstacktrace(); } finally { try { if (ostream != null) { ostream.close(); } } catch (ioexception e) { don't care } } } @param segment @deprecated - move toward linefeature private static boolean validatesegment(segment segment) { if (segment.getstart().matcheslocation((segment.getend()))) { system.out.println(\"single point line?\"); return true; } else { return false; } } @param linesbyname","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"https: github.com\/auth0\/jwks-rsa-java\/blob\/master\/src\/main\/java\/com\/auth0\/jwk\/jwk.java#l171","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"string keydatastring = key.get().x509certificatechain.get(0); byte[] keydata = base64.getdecoder().decode(keydatastring.getbytes(standardcharsets.utf_8)); return (rsapublickey) keyfactory.generatepublic(new x509encodedkeyspec(keydata));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".withaudience(ap) todo verify audience if the app id","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"get the searchbeans for each objectentity fill the beans with all information, regardless of permission. @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"just an empty list","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get all the objectentity's in the tree","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only objects, exclude derived series","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a bean","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"then the object info","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note id should be the (system) identifier in the repository (sid) just hoping that is is set correctly when read from the repository!!!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"should be the repository id for this peace of info","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add to the list","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns true of the queued redis message has timed out (ie, created > 25 minutes ago)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sort order: ascending by date","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"build the uri needed for the query","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a cursor loader","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"log.debug(\"s: '\" + uri + \"' \" + qname); ----- <xfml>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"----- <facet>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme: complain if no id","classification":"DEFECT","projectname":"namcyan"}
{"comment":"----- <topic>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"----- <page>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme: complain if no url","classification":"DEFECT","projectname":"namcyan"}
{"comment":"----- <occurrence>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"----- <name> ----- <psi> ----- <description> ----- <title> ----- <connect>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"copy.getolepaidcopies().add(paidcopy);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"calculates the number of dstinct elements that can be stored in a filter of size <code>bytes<\/code> without exceeding the given false positive probability. @param bytes the size of the filter @param fpp the desired false positive probability @return the maximum number of distinct values that can be added","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"implements the nodejs require.resolve algorithm, see https: nodejs.org\/api\/modules.html#modules_all_together <p>require(x) from module at path y 1. if x is a core module, a. return the core module b. stop 2. if x begins with '.\/' or '\/' or '..\/' a. load_as_file(y + x) b. load_as_directory(y + x) 3. load_node_modules(x, dirname(y)) 4. throw \"not found\" @param dir y in the pseudo algorithm @param target x in the pseudo algorithm","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (is.available() > 0) {","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"read receiveport type from input, to produce a better error message.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"and try again if we did not reach the timeout...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"do all of the \"welcome to the wonderful world of jsqsh activities\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create the welcome file since we are going to welcome them!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"here's a hack. the \".welcome\" file is a recent change to jsqsh, and we don't want to do the whole welcome thing if an existing jsqsh user already has a ~\/.jsqsh but doesn't have a .welcome file in it. to avoid this, check to see if drivers.xml is older than the date at which this comment was written and don't do the setup activities.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"directory was created prior to \"now\" (when i am typing this comment), so pretend the welcome was done","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"seleccionamos el directorio en el que se van a recoger todos los","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create the discretedataset","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"learn the ltm","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"save it in bif format","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"alliance info","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add mqtt listener","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"need to bind the ui activity and the background service","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: this function is only used for >=api 8.0, so may be need to support other version's api","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"remove element from the queue @return element","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"compute the subnet mask address","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"compute the mask address there is probably a way easier way to do this","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the minimum degree rank","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"resolve reference to constantpool by index in constants","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not needed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"long\/double may leave create a blank space","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_networknamemouseclicked","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"figure out where we need to jump to...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"setup the cipher to use the new iv at the proper offset...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"and read\/update the buffer to be decrypted","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sends the level finish packet.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for thread safety","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set the flag and while loop in the run() will exit","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"try to wake up the thread which associate this object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"&& javafxutils.currentbookmark.getstatus() == bookmarkstatus.changed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if(new file(item.second).isabsolute()){","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set a new strategies how to load options. @param filterablepagingprovider the paging provider that gives the actual options in pages @param filterablecountprovider the count provider to give the total about of options with current filter @param pagelength the length of the pages that component should use to access providers","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"look up the beginning and the end of the line (outside of the extracted string) such that we can show a preview of the diff, e.g. if you have foo.settitle(\"hello\"); we want to show foo.settitle(r.string.hello); so we need to extract \"foo.settitle(\" and \");\". look backwards to the beginning of the line (and strip whitespace)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"look forwards to the end of the line (and strip whitespace)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"display .java change:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"display strings.xml change:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"log.v(tag, \"oncreatedialog() called\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"error already handled, so just notify user.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"notify the listadapter that it's cursor needs refreshing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ignore.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"overrides setup() in applicationtest and does not call super.setup().","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove the existing program data folder","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for the parameters to be available using java 9, the following needs to be added to the test jvm command line parameters because com.sun.javafx.application.parametersimpl is not exposed, nor is there a \"proper\" way to access it: --add-opens=javafx.graphics\/com.sun.javafx.application=all-unnamed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get retries","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get key","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set pin","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"change pin","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get pin token","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"(non-javadoc) @see java.util.iterator#remove()","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"search = false, filter = false","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"search = false, filter = true","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo bug","classification":"DEFECT","projectname":"namcyan"}
{"comment":"search = true, filter = false","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"email message","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find the edges and return as a list of points. the method uses a dfs search through all points in the image with values > 0 to link adjacent sequential points into edges. the method then uses method mergeadjacentendpoints. note that the later 2 methods are not needed if the edges will be used in a corner detector only, but if the edges are to be used to find inflection points in scale space maps, those methods help to provide more complete shapes and better matches between the same object in another scale space map. @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dfs search for sequential neighbors.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for now, choosing to look only at the blue","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for each neighbor v of u","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if u is not in an edge already, create a new one","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"keep the curve points ordered add v to the edge u if u is the last node in it's edge","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: do we only want 1 neighbor from the 9 as a continuation? yes for now, but this requires edges be only 1 pixel wide inserting back at the top of the stack assures that the search continues next from an associated point","classification":"DESIGN","projectname":"namcyan"}
{"comment":"count the number of points in edges","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"not necessary now that lines from cannyedgefilter are 1 pix width. miscellaneouscurvehelper ch = new miscellaneouscurvehelper(); n = 0; sz = output.size(); lastsize = integer.max_value; while ((sz < lastsize) && (n < nitermax)) { lastsize = sz; output = ch.pruneandincludeadjacentcurves(output, img.getwidth()); sz = output.size(); log.log(level.fine, \"{0}) {1} edges after prune overlapping\", new object[]{integer.tostring(n), integer.tostring(sz)}); n++; }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this helps to merge edges (that is extracted curves) at adjacent points that resemble an intersection of the lines, but it's not necessarily useful if only interested in corners and not inflection points because the curvature is determined correctly whether the curves are merged or not.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"prunespurs(output);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"start on the left side","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"start on the right side","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"move x","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"select direction again","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if start above end","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"abstractdirection = abstractrobot.direction.down;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if start below end","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"done","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"abstractdirection = abstractrobot.direction.up;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"move y","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test solve","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@param s: input string @return: the longest palindromic substring","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"executes the pngout, optipng, and advpng optimization programs on the working file passed into the constructor. @return the optimized file. @throws ioexception if there was an issue reading \/ writing to the file system @throws interruptedexception if the optimization was interrupted.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"creates a value representing an instance of a class type, with the values of the fields determined by the default member initializers only. constructors are not considered when determining the values of the fields.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"$non-nls-1$ $non-nls-2$ $non-nls-3$","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"recursively create all the base class member variables.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"send an ack @throws forcereattemptexception if the peer is no longer available","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"chunkentries returns false if didn't finish","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@param a byte[] chunk @param b positive if last chunk @return true to continue to next chunk","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (this.last) throw new internalgemfireerror(localizedstrings.fetchkeysmessage_already_processed_last_chunk.tolocalizedstring());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sync the (now obsolete) policy fields with the jscrollpane.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note that viewport.getviewsize() is equivalent to viewport.getview().getpreferredsize() modulo a null view or a view whose size was explicitly set.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if there's a viewport add its preferredsize.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if there's a jscrollpane.viewportborder, add its insets.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if a header exists and it's visible, factor its preferred size in.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if a scrollbar is going to appear, factor its preferred size in. if the scrollbars policy is as_needed, this can be a little tricky: - if the view is a scrollable then scrollabletracksviewportwidth and scrollabletracksviewportheight can be used to effectively disable scrolling (if they're true) in their respective dimensions. - assuming that a scrollbar hasn't been disabled by the previous constraint, we need to decide if the scrollbar is going to appear to correctly compute the jscrollpanes preferred size. to do this we compare the preferredsize of the viewport (the extentsize) to the preferredsize of the view. although we're not responsible for laying out the view we'll assume that the jviewport will always give it its preferredsize.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fill this collision map with a set of rectangles. a rectangle is added to a cell if it overlaps with it (that includes just touching it). afterwards, each cell of the collision map should contain all rectangles that cover the cell. @param rectangles is a set of rectangles to insert, it must be != null @throws collisionmapoutofboundsexception if a rectangle is out of the bounds of this rectangle","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"given a rectangle, this method returns a set of potential colliding rectangles (rectangles in the same cells). @param rectangle the rectangle to test overlap with must be != null @return a set with all rectangles that possibly overlap with rectangle @throws collisionmapoutofboundsexception if the rectangle is out of the bounding box for this collisionmap","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the given rectangle collides with rectangles in the {@link collisionmap}. @param rectangle the rectangle to check for collision @return true if the given rectangle intersects one of the rectangles in the collision map. @throws illegalargumentexception if rectangle is null","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"look for the raw contact if specified.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise try to find the one that matches the default.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"id de usuario","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"usuarios concurrentes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tiempo","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"resoluci\u00f3n","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"disponibilidad","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"hacemos llamada a paypal para comprobar el estado del acuerdo","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"nvpdecoder object is created","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"decode method of nvpdecoder will parse the request and decode the name and value pair","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"checks for acknowledgement and redirects accordingly to display error messages","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"en este punto todo ha ido bien as\u00ed que obtenemos el status","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"comprobaci\u00f3n del resultado del check del acuerdo","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mostrar mensaje \u00e9xito asignar t\u00edtulo y contenido adecuado","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"acuerdo activo","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mostrar alert informando al usuario del problema","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mostrar mensaje error asignar t\u00edtulo y contenido adecuado","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cerramos la ventana de confirmaci\u00f3n","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cerramos el di\u00e1logo de precios","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sensordecoder.decodesound(values);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"a linha abaixo se refere ao combobox","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"as linhas abaixo \"limpam os campos\"","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validi\u00e7\u00e3o dos campos obrigatorios","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"a estrutura abaixo \u00e9 usada para confirmar a inser\u00e7\u00e3o dos dados na tabela a linha abaixo atualiza a tabela usuario com os dados do formulario","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"testando a logica system.out.println(adicionado);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use the name of a class and instantiate this tokenizer","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use classloader and search for named class in class path...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create the class using the unparametereized the constructor.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"===== memory events","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"===== fences","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"===== jumps we override the meaning of execution here. a jump is executed iff its condition was true.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generates structures in given cube. @param world the world that the structure is generated in @param cube the block buffer to be filled with blocks (cube) @param cubepos position of the cube to generate structures in","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"used to randomize contribution of each coordinate to the cube seed without these swapping x\/y\/z coordinates would result in the same seed so structures would generate symmetrically","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"x\/y\/zorigin is location of the structure \"center\", and cubex\/y\/z is the currently generated cube","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test if the filename contains an indication of the subtitles (vostfr, ...)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"(appointment_id,title,description, type, phone, division_id) values (5, '', 'test', '', 'test','')\" ;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"look up key to keys and \"insert\" to make everything work; to change body of generated methods, choose tools | templates.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo subscribe to network events instead of using this","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo remove this but with caution","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo to test different configs change the files poiting by config_file avoid changing the code directly","classification":"TEST","projectname":"namcyan"}
{"comment":"metadata here is user's network type device used geolocation if permitted etc google storage forbids to store user related data so we send that data to a private server","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we first resolve the ip of the server and then communicate with the server using ip only, because we have multiple server under same domain and we want the client not to switch server during a test run todo come up with a better way to handle inet related queries, since this introduced inefficiency","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a keystore containing our trusted cas","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a trustmanager that trusts the cas in our keystore","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create an sslcontext that uses our trustmanager","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"extract data that was sent by previous activity. in our case, list of apps, server and timing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generate or retrieve an id for this phone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"to get historycount","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generate or retrieve an historycount for this phone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if retrieve historycount succeeded","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make sure server is initialized!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find a way to switch to no wait","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set the app to run test for","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"run the test on this.app","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we have more space than necessary; resize to give each at least preferred size","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update each of the widgets with the remote adapter","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"write a program to add a score of 100 to the the array scores.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"... code to add should stay above this line","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"... code to remove should stay above this line","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"copy of scores looks like: \" + scores);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handles changes to the apn database.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the \"current\" may no longer be valid. mms depends on this to send properly. tbd","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check root component has no generics","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"verify all components","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create new block. @param nodes nodes from which block should be created; if the set of nodes contains inner function calls, the called function body should not be included. @param blockhead entry point for the block.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"it means, that there is no entry in this block. don't add it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"type is a normal class.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"i'm not exactly sure why getrawtype() returns type instead of class. neal isn't either but suspects some pathological case related to nested classes exists.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"useragent: \" + useragentstring); system.out.println(\"regexp: \" + pattern.tostring()); system.out.println(\"replacement: \" + format);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"move the group content into an array","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"group count: \"+m.groupcount());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"--\"+s);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"replace the tokens in the pattern","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"replacing [\"+token+\"] with [\"+groupcontent.get(i)+\"]\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"response: \"+format);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"perform the window parsing - used to do coreref, plus get initial named entities, sentiment, and tokens","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reparse to get openie \/ relations items","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"combinedtriples = triplerelation.reducetriples(combinedtriples, filterstyle.filter_to_minimize_terms);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make point obs from a single timestep of a grid @param timestep the grid @param dt the timestep for the grid @return a field of pointobs @throws remoteexception java rmi problem @throws visadexception visad problem","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this concept name is value so do special processing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"do normal processing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@param args the command line arguments","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"holaaaaa qque ondass","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"getlogwriter().info(\"[testservereventsinsystemclient] create bridge client\"); properties config = new properties(); config.setproperty(distributionconfig.mcast_port_name, \"0\"); config.setproperty(distributionconfig.locators_name, \"\"); getsystem(config); attributesfactory factory = new attributesfactory(); factory.setscope(scope.local); bridgetestcase.configureconnectionpool(factory, getserverhostname(host), ports, false, -1, -1, null); createregion(name, factory.create()); assertnotnull(getrootregion().getsubregion(name));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"register the bridge listener","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"register the system listener","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"register the universal adapter","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create bridgeserver in vm0...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gather details for later creation of bridgeloader...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create region which connects to bridge server","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"kirk: did increasing this solve problem on balrog?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"left fired by system listener","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"there won't be an adapter crashed event because since the two vms are in the same distributed system, and the server's real member id is used now. in this case, two events are sent - one from jgroups (memberdeparted), and one from the server (a membercrshed). the membercrashed event is deemed a duplicate and not sent - see universalmembershiplisteneradapter.systemmembershiplistener.isduplicate","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"reconnect bridge client to test for crashed event","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"pausing poll request\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"continuing poll request\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"bounds","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update the temp color","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handles a request to completely reset the loader.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ensure the loader is stopped","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the number below should be the line number of the previous line","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fileconfigprovider fcp = new fileconfigprovider(\"overrides.json\"); for(config config : fcp.getall(\"prod\", \"ssa\")){ system.out.println(config); } restconfigprovider rcc = new restconfigprovider(\"http: localhost:8080\/configuration\"); rcc.getall(\"prod\", \"ssa\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test of getentereddate method, of class gov.nih.nci.camod.domain.availability.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test of setentereddate method, of class gov.nih.nci.camod.domain.availability.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test of getmodifieddate method, of class gov.nih.nci.camod.domain.availability.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test of setmodifieddate method, of class gov.nih.nci.camod.domain.availability.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test of getreleasedate method, of class gov.nih.nci.camod.domain.availability.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test of setreleasedate method, of class gov.nih.nci.camod.domain.availability.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test of getvisibleto method, of class gov.nih.nci.camod.domain.availability.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test of setvisibleto method, of class gov.nih.nci.camod.domain.availability.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test of tostring method, of class gov.nih.nci.camod.domain.availability.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"test of equals method, of class gov.nih.nci.camod.domain.availability.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initialize the setdrivepowers system variables. the init() methods of our hardware class does all the work:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"init delay option select:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"after init is pushed but before start we can change the delay using dpad up\/down","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"runs a loop to change certain settings while we wait to start","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"leave the loop if stop is pressed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"increases the amount of time we wait","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"decreases the amount of time we wait","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no such thing as negative time","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"changes alliance sides","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"led code:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"telemetry while waiting for play:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we don't need a \"waitforstart()\" since we've been running our own loop all this time so that we can make some changes.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"init the imu after play so that it is not offset after remaining idle for a minute or two...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"time delay:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for (int i = 0; i <= 5; i++) { robot.robotwait(5); robot.driveodo.quickdrive( -4,96,0.3, -90,3.0); robot.driveodo.quickdrive(-52,96,0.3, 0,3.0); robot.driveodo.quickdrive(-52,48,0.3, 90,3.0); robot.driveodo.quickdrive( -4,48,0.3, 0,3.0); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"header","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tabs covering the full width of the tab bar","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"at startup, set the first page visible, while the remaining are not","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"2 - define the fields instances to use - we don't use .setlabel since we will use addformitem instead of add to add items to the form - addformitem allows us to set supertextfield with on a formalayout when add doesn't contr\u00f4les de tabinfogenerale","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"setwidth(400, unit.pixels);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"contr\u00f4les de tabdefinition","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from modevalorisationrubrique is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodevalorisationrubrique.setlabel(\"modevalorisationrubrique\"); ???this.cbocodemodevalorisationrubrique.setid(\"this.cbocodemodevalorisationrubrique.getvalue()\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tmp - this.txtmontantfixe.addclassname(textfield_left_label);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"align center for numeric value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"configuration options for haslocale","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from modevalorisationbase is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodevalorisationbase.setlabel(\"modevalorisationbase\"); ???this.cbocodemodevalorisationbase.setid(\"this.cbocodemodevalorisationbase.getvalue()\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tmp - this.txtbasefixe.addclassname(textfield_left_label);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from modevalorisationtaux is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodevalorisationtaux.setlabel(\"modevalorisationtaux\"); ???this.cbocodemodevalorisationtaux.setid(\"this.cbocodemodevalorisationtaux.getvalue()\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tmp - this.txttauxfixe.addclassname(textfield_left_label);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tmp - this.txtcoefficientmultiplicateur.addclassname(textfield_left_label);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from tranchevaleur is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodetranche.setlabel(\"tranchevaleur\"); ???this.cbocodetranche.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"beforeupdate codetranche (cif): contr\u00f4le de inactif","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from variableservice is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodevariablerubrique.setlabel(\"variableservice\"); ???this.cbocodevariablerubrique.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"beforeupdate codevariablerubrique (cif): contr\u00f4le de inactif","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from emploifonds is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodeconstanterubrique.setlabel(\"emploifonds\"); ???this.cbocodeconstanterubrique.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"beforeupdate codeconstanterubrique (cif): contr\u00f4le de inactif","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodevariablebase.setlabel(\"variableservice\"); ???this.cbocodevariablebase.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"beforeupdate codevariablebase (cif): contr\u00f4le de inactif","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodeconstantebase.setlabel(\"emploifonds\"); ???this.cbocodeconstantebase.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"beforeupdate codeconstantebase (cif): contr\u00f4le de inactif","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodevariabletaux.setlabel(\"variableservice\"); ???this.cbocodevariabletaux.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"beforeupdate codevariabletaux (cif): contr\u00f4le de inactif","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodeconstantetaux.setlabel(\"emploifonds\"); ???this.cbocodeconstantetaux.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"beforeupdate codeconstantetaux (cif): contr\u00f4le de inactif","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"contr\u00f4les de tabajustement","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from systemevaleurminmax is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodevaleurminimum.setlabel(\"systemevaleurminmax\"); ???this.cbocodevaleurminimum.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tmp - this.txtvaleurminimumfixe.addclassname(textfield_left_label);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodevaleurmaximum.setlabel(\"systemevaleurminmax\"); ???this.cbocodevaleurmaximum.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tmp - this.txtvaleurmaximumfixe.addclassname(textfield_left_label);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodeconstantevaleurminimum.setlabel(\"emploifonds\"); ???this.cbocodeconstantevaleurminimum.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"beforeupdate codeconstantevaleurminimum (cif): contr\u00f4le de inactif","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodeconstantevaleurmaximum.setlabel(\"emploifonds\"); ???this.cbocodeconstantevaleurmaximum.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"beforeupdate codeconstantevaleurmaximum (cif): contr\u00f4le de inactif","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from systememodeabattement is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodeabattement.setlabel(\"systememodeabattement\"); ???this.cbocodemodeabattement.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tmp - this.txtabattementfixe.addclassname(textfield_left_label);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from systememodearrondissement is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodearrondissement.setlabel(\"systememodearrondissement\"); ???this.cbocodemodearrondissement.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tmp - this.txtnombrechiffrearrondissement.addclassname(textfield_left_label);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"contr\u00f4les de tabcompteurbasemontant","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from systememodestockagebasemontant is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurbase01.setlabel(\"systememodestockagebasemontant\"); ???this.cbocodemodestockagecompteurbase01.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurbase02.setlabel(\"systememodestockagebasemontant\"); ???this.cbocodemodestockagecompteurbase02.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurbase03.setlabel(\"systememodestockagebasemontant\"); ???this.cbocodemodestockagecompteurbase03.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurbase04.setlabel(\"systememodestockagebasemontant\"); ???this.cbocodemodestockagecompteurbase04.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurmontant01.setlabel(\"systememodestockagebasemontant\"); ???this.cbocodemodestockagecompteurmontant01.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurmontant02.setlabel(\"systememodestockagebasemontant\"); ???this.cbocodemodestockagecompteurmontant02.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurmontant03.setlabel(\"systememodestockagebasemontant\"); ???this.cbocodemodestockagecompteurmontant03.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurmontant04.setlabel(\"systememodestockagebasemontant\"); ???this.cbocodemodestockagecompteurmontant04.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"contr\u00f4les de tabcompteurinterne","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"choose which property from systememodestockageinterneexterne is the presentation value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurinterne01.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurinterne01.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurinterne02.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurinterne02.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurinterne03.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurinterne03.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurinterne04.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurinterne04.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurinterne05.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurinterne05.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurinterne06.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurinterne06.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurinterne07.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurinterne07.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurinterne08.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurinterne08.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurinterne09.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurinterne09.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurinterne10.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurinterne10.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"contr\u00f4les de tabcompteurexterne","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurexterne01.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurexterne01.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurexterne02.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurexterne02.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurexterne03.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurexterne03.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurexterne04.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurexterne04.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurexterne05.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurexterne05.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurexterne06.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurexterne06.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurexterne07.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurexterne07.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurexterne08.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurexterne08.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurexterne09.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurexterne09.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"???this.cbocodemodestockagecompteurexterne10.setlabel(\"systememodestockageinterneexterne\"); ???this.cbocodemodestockagecompteurexterne10.setid(\"person\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"g\u00e9n\u00e9ralement pas de asrequired pour les nombres afin de permettre la saisie de z\u00e9ro - .asrequired(\"la saisie du montant fixe est obligatoire. veuillez saisir le montant fixe.\") .withconverter(integer::valueof, string::valueof, \"veuillez saisir un nombre\") .withvalidator(new regexpvalidator(\"seuls les chiffres 0-9 sont accept\u00e9s\",\"\\\\d*\"))","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de d\u00e9termination de la base est requise. veuillez s\u00e9lectionner un mode de d\u00e9termination de la base\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"g\u00e9n\u00e9ralement pas de asrequired pour les nombres afin de permettre la saisie de z\u00e9ro - .asrequired(\"la saisie de la base fixe est obligatoire. veuillez saisir la base.\") .withconverter(integer::valueof, string::valueof, \"veuillez saisir un nombre\") .withvalidator(new regexpvalidator(\"seuls les chiffres 0-9 sont accept\u00e9s\",\"\\\\d*\"))","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de d\u00e9termination du taux est requise. veuillez s\u00e9lectionner un mode de d\u00e9termination du taux\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"g\u00e9n\u00e9ralement pas de asrequired pour les nombres afin de permettre la saisie de z\u00e9ro - .asrequired(\"la saisie du taux fixe est obligatoire. veuillez saisir le taux.\") .withconverter(integer::valueof, string::valueof, \"veuillez saisir un nombre\") .withvalidator(new regexpvalidator(\"seuls les chiffres 0-9 sont accept\u00e9s\",\"\\\\d*\"))","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".withconverter(integer::valueof, string::valueof, \"veuillez saisir un nombre\") .withvalidator(new regexpvalidator(\"seuls les chiffres 0-9 sont accept\u00e9s\",\"\\\\d*\"))","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie de la tranche est requise. veuillez s\u00e9lectionner une tranche\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie de la variable rubrique est requise. veuillez s\u00e9lectionner une variable\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie emploifonds rubrique est requise. veuillez s\u00e9lectionner une emploifonds\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie de la variable base est requise. veuillez s\u00e9lectionner une variable\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie emploifonds base est requise. veuillez s\u00e9lectionner une emploifonds\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie de la variable taux est requise. veuillez s\u00e9lectionner une variable\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie emploifonds taux est requise. veuillez s\u00e9lectionner une emploifonds\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie de la valeur minimum est requise. veuillez saisir la valeur minimum\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"g\u00e9n\u00e9ralement pas de asrequired pour les nombres afin de permettre la saisie de z\u00e9ro - .asrequired(\"la saisie de la valeur minimum fixe est obligatoire. veuillez saisir la valeur minimum fixe.\") .withconverter(integer::valueof, string::valueof, \"veuillez saisir un nombre\") .withvalidator(new regexpvalidator(\"seuls les chiffres 0-9 sont accept\u00e9s\",\"\\\\d*\"))","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie de la valeur maximum est requise. veuillez saisir la valeur maximum\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"g\u00e9n\u00e9ralement pas de asrequired pour les nombres afin de permettre la saisie de z\u00e9ro - .asrequired(\"la saisie de la valeur maximum fixe est obligatoire. veuillez saisir la valeur maximum fixe.\") .withconverter(integer::valueof, string::valueof, \"veuillez saisir un nombre\") .withvalidator(new regexpvalidator(\"seuls les chiffres 0-9 sont accept\u00e9s\",\"\\\\d*\"))","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie de la emploifonds valeur minimum est requise. veuillez saisir la emploifonds valeur minimum\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie de la emploifonds valeur maximum est requise. veuillez saisir la emploifonds valeur maximum\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode abattement est requise. veuillez s\u00e9lectionner un mode abattement\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"g\u00e9n\u00e9ralement pas de asrequired pour les nombres afin de permettre la saisie de z\u00e9ro - .asrequired(\"la saisie de l'abattement fixe est obligatoire. veuillez saisir l'abattement fixe.\") .withconverter(integer::valueof, string::valueof, \"veuillez saisir un nombre\") .withvalidator(new regexpvalidator(\"seuls les chiffres 0-9 sont accept\u00e9s\",\"\\\\d*\"))","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode arrondissement est requise. veuillez s\u00e9lectionner un mode arrondissement\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"g\u00e9n\u00e9ralement pas de asrequired pour les nombres afin de permettre la saisie de z\u00e9ro - .asrequired(\"la saisie du nombre chiffre arrondissement est obligatoire. veuillez saisir le nombre chiffre arrondissement.\") .withconverter(integer::valueof, string::valueof, \"veuillez saisir un nombre\") .withvalidator(new regexpvalidator(\"seuls les chiffres 0-9 sont accept\u00e9s\",\"\\\\d*\"))","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de base 01 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de base 01\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de base 02 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de base 02\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de base 03 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de base 03\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de base 04 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de base 04\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de montant 01 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de montant 01\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de montant 02 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de montant 02\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de montant 03 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de montant 03\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de montant 04 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de montant 04\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de interne 01 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de interne\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de interne 02 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de interne\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de interne 03 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de interne\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de interne 04 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de interne\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de interne 05 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de interne\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de interne 06 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de interne\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de interne 07 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de interne\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de interne 08 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de interne\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de interne 09 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de interne\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de interne 10 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de interne\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de externe 01 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de externe\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de externe 02 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de externe\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de externe 03 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de externe\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de externe 04 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de externe\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de externe 05 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de externe\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de externe 06 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de externe\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de externe 07 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de externe\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de externe 08 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de externe\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de externe 09 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de externe\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".asrequired(\"la saisie du mode de stockage compteur de externe 10 est requise. veuillez s\u00e9lectionner un mode de stockage compteur de externe\")","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"4 - add input fields to formlayout - we don't use .setlabel since we will use addformitem instead of add to add items to the form - addformitem allows us to set supertextfield with on a formalayout when add doesn't this.formlayout.add(this.txtnorubrique, this.txtlibellerubrique, this.txtlibellecourtrubrique, this.txtnommandataire, this.txtnotelephone, this.txtnomobile, this.txtnotelecopie, this.datdatenaissance, this.txtlieunaissance, this.txtadresse, this.txtville, this.txtnombrehomme, this.txtnombrefemme, this.chkinactif, this.txtnopieceidentite, this.chkdeposant, this.chkemprunteur, this.chkgarant, this.chkdirigeant, this.chkadministrateur); 4 - alternative","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"5 - making the layout responsive : custom responsive layouting breakpoint at 600px, with the label to the side. at resolutions lower than 600px, the label will be at the top and there is only 1 column. the form will show 2 columns if width is >= 600px","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"breakpoint at 600px, with the label to the side. at resolutions lower than 600px, the label will be at the top. in both cases there is only 1 column. tabinfogeneraleformlayout.setresponsivesteps(new formlayout.responsivestep(\"0\", 1, formlayout.responsivestep.labelsposition.top), new formlayout.responsivestep(panel_flex_basis, 1, formlayout.responsivestep.labelsposition.aside));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"breakpoint at 600px, with the label to the side. at resolutions lower than 600px, the label will be at the top and there is only 1 column. the form will show 2 columns if width is >= 600px","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"breakpoint at 600px, with the label to the side. at resolutions lower than 600px, the label will be at the top. in both cases there is only 1 column. tabdefinitionformlayout.setresponsivesteps(new formlayout.responsivestep(\"0\", 1, formlayout.responsivestep.labelsposition.top), new formlayout.responsivestep(panel_flex_basis, 1, formlayout.responsivestep.labelsposition.aside));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"breakpoint at 600px, with the label to the side. at resolutions lower than 600px, the label will be at the top. in both cases there is only 1 column. tabajustementformlayout.setresponsivesteps(new formlayout.responsivestep(\"0\", 1, formlayout.responsivestep.labelsposition.top), new formlayout.responsivestep(panel_flex_basis, 1, formlayout.responsivestep.labelsposition.aside));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"breakpoint at 600px, with the label to the side. at resolutions lower than 600px, the label will be at the top. in both cases there is only 1 column. this.tabcompteurbasemontantformlayout.setresponsivesteps(new formlayout.responsivestep(\"0\", 1, formlayout.responsivestep.labelsposition.top), new formlayout.responsivestep(panel_flex_basis, 1, formlayout.responsivestep.labelsposition.aside));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"breakpoint at 600px, with the label to the side. at resolutions lower than 600px, the label will be at the top. in both cases there is only 1 column. this.tabcompteurinterneformlayout.setresponsivesteps(new formlayout.responsivestep(\"0\", 1, formlayout.responsivestep.labelsposition.top), new formlayout.responsivestep(panel_flex_basis, 1, formlayout.responsivestep.labelsposition.aside));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"breakpoint at 600px, with the label to the side. at resolutions lower than 600px, the label will be at the top. in both cases there is only 1 column. this.tabcompteurexterneformlayout.setresponsivesteps(new formlayout.responsivestep(\"0\", 1, formlayout.responsivestep.labelsposition.top), new formlayout.responsivestep(panel_flex_basis, 1, formlayout.responsivestep.labelsposition.aside));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"6 - configure tabs","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"configure onselectedtabchange","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cache selected tab","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"first page to show programmatically","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pre-select tabs","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"read from the mplayer standard output and error a line that starts with the given parameter and return it. @param expected the expected starting string for the line @return the entire line from the standard output or error of mplayer","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"empty the database table before downloading up-to-date content","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the corresponding audio file has already been downloaded","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"download file bytes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store the downloaded file in the external storage directory","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store the audio in the database","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update the ui","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for integral number type things, need to convert \"null\" into 0.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for decimal number type things, need to convert \"null\" into 0.0.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only reassign if not -1 as messes up code further down","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this test can return -1 for invalid value as in sample_pdfs_html\/general-may2014\/18147.pdf which breaks code further down so we reject this value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"obtains the priority of this rule. it actually is a dynamic priority that depends on the question that was asked. the priority is: - 100% if the question asked is the same to the background of the rule. - 50% if the question asked is an ordered subset of the filtered question. - 0% otherwise. @param questionasked question asked by the user, that underwent the filtering process. @return the dynamic priority of the rule.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the filtered question is the same than asked","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"otherwise","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a counter","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for each word asked","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if found, we add one, otherwise, we add zero","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"return the value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the referenced resource, fetching it <b>if it has not already been loaded<\/b>. this method invokes the http client to retrieve the resource unless it has already been loaded, or was a contained resource in which case it is simply returned.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: add question: you are really want to exit.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"0=yes, 1=no, 2=cancel","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mapcolor.clear","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"who knows what this does? nothing, it seems. but just in case i'll let it stick around. comment your code please!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the target for the given specialinvokeexpr.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"hash calculator","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"encryptor for encrypting secret keys","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"aes-256 encrypted","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unencrypted key pair","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"first key is the master key","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove master key, so that we later only add sub keys.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generate master key","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"signer for creating self-signature","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generator which the user can get the key pair from","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"finds the main action predicates in the sentence and their respective arguments. for each, creates a recipeevent object to store the information. this information is stored in the predicate_idx_to_event map. @param node verb node to be examining @param edge_rels map of governor\/dependent pairs and the edge relation that connects them, if any. @param node_to_deps map that connects a governor node to its dependents. @param leaves list of leaf nodes of the constituent parse tree @param lemmas list of lemmas of tokens in the sentence @param tags list of pos tags of the tokens in the sentence @param words list of words in the sentence @param recipe_name name of the recipe @param sentence_idx index of the sentence within the current recipe @param curr_sentence_char_offset starting no-space character offset of the current sentence @param sentence_string full text string of the current sentence @param predicate_idx_to_event map of character offsets to the recipe events that start at that offset. note that this is not the no-space character offset since the tree map just cares about the relative order","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find the no-space character offset of the predicate","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create recipeevent","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check for pcomp","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the verb has a subject other than \"i\", assume parse error and add the subject as an argument.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"search through the dependents of the verb and add each expanded dependent as an argument.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"skip subjects","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store the prepositional object, but ignore for now. we will deal with it when the prepositional phrase is found.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for vmod and xcomp edges, create an argument for the current verb","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"deal with prepositional phrases and determining whether or not a dependent verb is a new verb or part of the current verb. uses heuristics to find out.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"prepositional phrase","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find the true preposition from the collapsed dependency relation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"event.setdirectobject(arg_string);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this method should not be called if the node is not a verb. not sure if this happens, so i will currently have it crash so i can investigate it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.err.println(\"variable \" + variable + \" new value \" + value + \" type \" + variable.getclass().getname());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme fixme super ad-hoc","classification":"DEFECT","projectname":"namcyan"}
{"comment":"here's a place where two locations could be bound to each other?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme is there a better way???","classification":"DESIGN","projectname":"namcyan"}
{"comment":"retrieves <input type=\"file\" name=\"file\">","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ensure directories exist","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we can't even pass exceptions without re-wraping them since classes on the invoking side are incompatible also flatten to avoid getting nested ites","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tls layer","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we don't need the plainsocket","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create and connect ssl socket, but don't do hostname\/certificate verification yet.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"protocols...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ciphers...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"all all already enabled ones for compatibility.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set up sni before the handshake.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"verify hostname and certificate.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme: auto-generated method stub","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: how to identify the correct device if there are several devices in the list?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@formatter:on","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns an argument map fitting the given value key set (using defined types). @param arguments input arguments to test arguments against @return argument map with correct value types","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"<p>project a point on the unit sphere stereographically from the north pole to complex projective space.<\/p> <p><code>(0, 0, 1)<\/code> is projected to the point with homogeneous coordinates <code>(1, 0)<\/code>.<br> <code>(0, 0, -1)<\/code> is projected to the point with homogenous coordinates <code>(0, 1)<\/code>.<\/p> @param cp the {@link complexprojective1} used to hand over the result. must not be null. @throws illegalargumentexception if {@link #normsquared()} differs from <code>1.0<\/code> by more than {@link #epsilon}","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the point lies on the sphere.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if the point lies above or below the xy-plane.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dummy variables","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"rotate by 180 degree around the x-axis.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"project that point. now, z < -epsilon.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"rotate back.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"point lies below xy-plane so we use","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initialize the cipher @return true if it succeeded false if it did not","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"obtain a cipher instance and configure it with the properties required for fingerprint authentication","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"return true if the cipher has been initialized successfully","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"return false if cipher initialization failed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"keystoreexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unrecoverablekeyexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add necessary code to the source and necessary build supports to enable the requested serializations in 'enabledserializations'","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"enable support for proto serialization","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle .proto files.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if a dockerfile exists, remove it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the inreplyto from the parent property (foreign node) or if not found generate one based on what the local server version of it is.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tousernames will hold all usernames in the acl list (both local and foreign user names)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lookup all usernames from the acl info, to add them all to 'tousernames'","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get username off this node and add to 'tousernames'","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"string apid = parent.getstringprop(nodeprop.act_pub_id.s());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"construct the update-type wrapper around teh person object, and send","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"else send out as a note.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for users that don't have a sharedinbox we collect their inboxes here to send to them individually","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"when posting a public message we send out to all unique sharedinboxes here","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"loads only foreign user's inboxes into the two sets.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"merge both sets of inboxes into allinboxes and send to them","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"post message to all foreign usernames found in 'tousernames', but skip all in userinboxes becasue we just sent to those above.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"writes the runner project out. @throws ioexception signals that an i\/o exception has occurred. @throws parseexception if the source code has parser errors. @throws xmlexception if an xml related exception occurs.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo revise whole method todo now using a newer japa (suuports java 8), -> maybe antlr supports better","classification":"DESIGN","projectname":"namcyan"}
{"comment":"copy snippets","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create info file","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove sette annotations and imports from file","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"parse source with javaparser","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"extract type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note better exception type","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"skip file if java version is not supported by the tool (@settesnippetcontainer) note it can be also done with snippet containers... (and also done in catg generator!)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove sette annotations from the class","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove sette annotations from the members","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove sette imports","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"save edited source code","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"copy libraries","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create project","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make base exp4j expressionbuilder using _formulaequation string as input","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"setup regex pattern we want to use to isolate formula variables from _formulaequation string ==in terms of modularity, should we keep the regex string we use as a field for formulas that can be changed by config? dunno, probably not, would be interesting though","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"make a matcher to get the variables out of the formula equation string given, using above pattern","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"while regex matcher can find matching values, set them as variables in exp4j expressionbuilder","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"while index i, starting at 1, is less than matcher.groupcount(), which inherently does not include groupcount(0)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set ith match from regex as a variable in the formula expression builder","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"once regex stuff is done and variables are set, properly build the expression.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"internal method to load the other classes as requires by the user","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"deserialize the database","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"show options","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"start the parser","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"read the options in the parser configuration file","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"same as before","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initializing the database parser","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handing control to the parser","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"start the editor","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initializing the editor","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the editor is capable of returning to the main menu","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"configure everything again?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"configuration system is self-initialising, just hand over control to it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"that's all, after configuration, the program needs to be restarted anyway","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"export the current database to a database_exported.csv file,which opens in ms excel","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initializing the export system and handing over control to it!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we can come back to the main menu","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now it's the import system","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"same as case 4","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no!!! don't leave me behind!(can't do anything about it anyway, can i?)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"bye-bye","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stop making mistakes in input!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"i'm very considerate, i give everybody infinite chances","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"generic synchronizer - used for pop3 and imap. todo break this method up into smaller chunks. @param account the account to sync @param folder the mailbox to sync @return results of the sync pass @throws messagingexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"0. we do not ever sync drafts or outbox (down or up)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"1. get the message list from the local store and create an index of the uids","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"1a. count the unread messages before changing anything","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"2. open the remote folder and create the remote folder if necessary","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the folder is a \"special\" folder we need to see if it exists on the remote server. it if does not exist we'll try to create it. if we can't create we'll abort. this will happen on every single pop3 folder as designed and on imap folders during error conditions. this allows us to treat pop3 and imap the same in this code.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"3, open the remote folder. this pre-loads certain metadata like message count.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"6. determine the limit # of messages to download","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"7. create a list of messages to download","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"message numbers start at 1.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get a list of the messages that are in the remote list but not on the local store, or messages that are in the local store but failed to download on the last sync. these are the new messages that we will download. note, we also skip syncing messages which are flagged as \"deleted message\" sentinels, because they are locally deleted and we don't need or want the old message from the server.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"localmessage == null -> message has never been created (not even headers) mflagloaded = unloaded -> message created, but none of body loaded mflagloaded = partial -> message created, a \"sane\" amt of body has been loaded mflagloaded = complete -> message body has been completely loaded mflagloaded = deleted -> message has been deleted only the first two of these are \"unsynced\", so let's retrieve them","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"8. download basic info about the new\/unloaded messages (if any) a list of messages that were downloaded and which did not have the seen flag set. this will serve to indicate the true \"new\" message count that will be reported to the user via notification.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fetch the flags and envelope only of the new messages. this is intended to get us critical data as fast as possible, and then we'll fill in the details.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"determine if the new message was already known (e.g. partial) and create or reload the full message info","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"copy the fields that are available into the message","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"commit the message to the local store","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"track the \"new\" ness of the downloaded message","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"9. refresh the flags for any messages in the local store that we didn't just download.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update the seen & flagged (star) flags (if supported remotely - e.g. not for pop3)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"10. compute and store the unread message count. -- no longer necessary - provider uses db triggers to keep track int remoteunreadmessagecount = remotefolder.getunreadmessagecount(); if (remoteunreadmessagecount == -1) { if (remotesupportsseenflag) { * if remote folder doesn't supported unread message count but supports * seen flag, use local folder's unread message count and the size of * new messages. this mode is not used for pop3, or imap. remoteunreadmessagecount = folder.munreadcount + newmessages.size(); } else { * if remote folder doesn't supported unread message count and doesn't * support seen flag, use localunreadcount and newmessagecount which * don't rely on remote seen flag. this mode is used by pop3. remoteunreadmessagecount = localunreadcount + newmessagecount; } } else { * if remote folder supports unread message count, use remoteunreadmessagecount. * this mode is used by imap. } uri uri = contenturis.withappendedid(emailcontent.mailbox.content_uri, folder.mid); contentvalues updatevalues = new contentvalues(); updatevalues.put(emailcontent.mailbox.unread_count, remoteunreadmessagecount); resolver.update(uri, updatevalues, null, null); 11. remove any messages that are in the local store but no longer on the remote store.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"delete associated data (attachment files) attachment & body records are auto-deleted when we delete the message record","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"delete the message itself","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"delete extra rows (e.g. synced or deleted)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store the updated message locally and mark it fully loaded","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"14. download large messages. we ask the server to give us the message structure, but not all of the attachments.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pop doesn't support structure mode, so we'll just do a partial download (hopefully enough to see some\/all of the body) and mark the message for further download.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store the partially-loaded message and mark it partially loaded","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we have a structure to deal with, from which we can pull down the parts we want to actually store. build a list of parts we are interested in. text parts will be downloaded right now, attachments will be left for later.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"download the viewables immediately","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"15. clean up and report results","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo - more original sync code. using for reference, will delete when done.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now do the large messages that require more round trips.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the provider was unable to get the structure of the message, so we'll download a reasonable portion of the messge and mark it as incomplete so the entire thing can be downloaded later if the user wishes to download it.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store the updated message locally localfolder.appendmessages(new message[] { message }); message localmessage = localfolder.getmessage(message.getuid()); set a flag indicating that the message has been partially downloaded and is ready for view. localmessage.setflag(flag.x_downloaded_partial, true);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now download the parts we're interested in storing.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"store the updated message locally localfolder.appendmessages(new message[] { message }); message localmessage = localfolder.getmessage(message.getuid()); set a flag indicating this message has been fully downloaded and can be viewed. localmessage.setflag(flag.x_downloaded_full, true);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update the listener with what we've found synchronized (mlisteners) { for (messaginglistener l : mlisteners) { l.synchronizemailboxnewmessage( account, folder, localfolder.getmessage(message.getuid())); } }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"report successful sync","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"localfolder.close(false);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"process a pending trash message command. @param remotestore the remote store we're working in @param account the account in which we are working @param newmailbox the local trash mailbox @param oldmessage the message copy that was saved in the updates shadow table @param newmessage the message that was moved to the mailbox","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"3. if delete_policy_never, simply write back the deleted sentinel and return this sentinel takes the place of the server-side message, and locally \"deletes\" it by inhibiting future sync or display of the message. it will eventually go out of scope when it becomes old, or is deleted on the server, and the regular sync code will clean it up for us.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"consider doing this in the tosca yaml parser","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_guestsearchactionperformed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"empty matcher will cause infinite loop","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"start highlight from the start of the field","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"calculate the width of the unhighlighted text to get the start of the highlighted region.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the width of the highlighted region","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"while ( startfrom < text.length() && matcher.find( startfrom ) )","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"welcome to madness","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"2. get most distant point of the face's point set","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: check","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"3. find all faces that can be seen from this point","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"4.0 remove all vertices that are only connected to lightfacevertices","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"4.1 get vertices on border between lit and unlit triangles","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"4.2 get edges on border","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"4.2.1 remove old adjacents (crossing triangle hole)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"4.3 stitch holes using edge","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"update adjacents map","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"find out which triangle got deleted","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: just relevant for last iteration","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"5. assign all points of all light-faces to the new created faces","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"6. push new created faces on the stack and start at (1))","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"corpus_%corpusname% = { name: \"...\", tokencount: 500, typecount: 1000, commontypes: 900, clustercount: 100, identityeps: 0.00004 iterationcount: 7, typetoid: { typename:0, typename2: 1, ... }, idtotype: { 1: \"word\", 4: \"bleh\", } };","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no rare word check here, to keep vector status","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add test contacts.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"finish activity earlier","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lets escape quotes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle byte pretty formatting","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"process numeric value (do something smart in the future)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"buffer.append(object.getclass().getname()).append(\".\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"skip this+servicechanged","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"skip ourselves","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unknown","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"assign a new unique id up to slices count - then add replicas evenly. @return the assigned shard id","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"merge sort","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"spend coins","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wait while balance be a 100","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wait while balance isn't update","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"submit disabled","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"empty string is valid zero","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"valid value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we can send transaction even if coin does not exists, because it can be no a true","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"amount without commission","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"visible \"use max\" for spend tab","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"invisible \"use max\" for spend tab","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"parses a saml response for attributes. @param samlresponse the saml response sent by identity provider @param attributes the attributes to fetch from assertion @return {@link map} containing the mapped keys in {@code attributes} with a {@link list} of values found for the attribute @throws servletexception if the parsing fails for the {@code samlresponse}","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"final eventpublisher publisher = new eventpublisher(project_name, topic_name);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"populate cdc metadata","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"for the 4 byte header","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"nothing to return by default","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"gfxcmd=\" + cmd); make sure the frame is still valid or we could crash on fullscreen mode switches","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"gfxcmd while frame not displayable\"); spin until the frame is valid and displayable, if we don't we'll lose parts of the ui or crash","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"init\"); start up native renderer","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"platform default","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"layout frame bounds=\" + f.getbounds() + \" videobounds=\" + videobounds + \" parentbounds=\" + parent.getbounds());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if not connecting to localhost: draw background to bounds (scaled) draw logo to {{2% from left, 15% from top}{20% view width, 7% view height}}, no clipping, alpha = 0.85, adjust size to keep aspect ratio load arial 32 bold draw the following text, double spaced using arial 32 bold, white with black shadow (offset by (+2,+2)) \"sagetv placeshifter is connecting to\" \"the server: \"+myconn.getservername() \"please wait...\" text is centered in the view on the middle line, use font metrics to determine proper location g.setfont(pleasewaitfont); g.setcolor(java.awt.color.black); y += 2; g.drawstring(str1, 2 + (getwidth()\/2) - (fm.stringwidth(str1)\/2), y + fm.getascent()); y += fm.getheight(); g.drawstring(str2, 2 + (getwidth()\/2) - (fm.stringwidth(str2)\/2), y + fm.getascent()); y += 2*fm.getheight(); g.drawstring(str3, 2 + (getwidth()\/2) - (fm.stringwidth(str3)\/2), y + fm.getascent()); g.setcolor(java.awt.color.white); y = (getheight() \/ 2) - fh\/2; g.drawstring(str1, (getwidth()\/2) - (fm.stringwidth(str1)\/2), y + fm.getascent()); y += fm.getheight(); g.drawstring(str2, (getwidth()\/2) - (fm.stringwidth(str2)\/2), y + fm.getascent()); y += 2*fm.getheight(); g.drawstring(str3, (getwidth()\/2) - (fm.stringwidth(str3)\/2), y + fm.getascent());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"try { if (myconn.getmediacmd().getplaya() != null) { myconn.getmediacmd().getplaya().stop(); myconn.getmediacmd().getplaya().free(); } }catch (exception e){} system.exit(0);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"f.dispose();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"f.addmouselistener(this);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"f.addmousemotionlistener(this);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"f.setvisible(true);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"deinit\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"x, y, width, height, argbtl, argbtr, argbbr, argbbl","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"fillrect: dest=(\"+x+\",\"+y+\" \"+width+\"x\"+height+\") argbtl=\"+integer.tohexstring(argbtl)+\" argbtr=\"+integer.tohexstring(argbtr)+\" argbbl=\"+integer.tohexstring(argbbl)+\" argbbr=\"+integer.tohexstring(argbbr));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"(float)((argbtl>>24)&0xff)\/255.0f);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"alpha already supplied","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"clearrect: dest=(\"+x+\",\"+y+\" \"+width+\"x\"+height+\") argbtl=\"+integer.tohexstring(argbtl)+\" argbtr=\"+integer.tohexstring(argbtr)+\" argbbl=\"+integer.tohexstring(argbbl)+\" argbbr=\"+integer.tohexstring(argbbr));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"x, y, width, height, thickness, argbtl, argbtr, argbbr, argbbl, clipx, clipy, clipw, cliph","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"x, y, width, height, argbtl, argbtr, argbbr, argbbl, clipx, clipy, clipw, cliph","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"filloval: dest=(\"+x+\",\"+y+\" \"+width+\"x\"+height+\") clip=(\"+clipx+\",\"+clipy+\" \"+clipw+\"x\"+cliph+\") argbtl=\"+integer.tohexstring(argbtl)+\" argbtr=\"+integer.tohexstring(argbtr)+\" argbbl=\"+integer.tohexstring(argbbl)+\" argbbr=\"+integer.tohexstring(argbbr));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"x, y, width, height, thickness, arcradius, argbtl, argbtr, argbbr, argbbl, clipx, clipy, clipw, cliph","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"x, y, width, height, arcradius, argbtl, argbtr, argbbr, argbbl, clipx, clipy, clipw, cliph","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"fillroundrect: dest=(\"+x+\",\"+y+\" \"+width+\"x\"+height+\") clip=(\"+clipx+\",\"+clipy+\" \"+clipw+\"x\"+cliph+\") arcradius=\"+arcradius+\" argbtl=\"+integer.tohexstring(argbtl)+\" argbtr=\"+integer.tohexstring(argbtr)+\" argbbl=\"+integer.tohexstring(argbbl)+\" argbbr=\"+integer.tohexstring(argbbr));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"x, y, len, text, handle, argb, clipx, clipy, clipw, cliph","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use awt string bounds or we'll clip on occasion","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"java.awt.dimension textsize = fontptr.getstringsize(thestring);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"drawtext: \\\"\"+thestring+\"\\\" loc=(\"+x+\",\"+y+\") num positions=\"+positions.length);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"x, y, width, height, handle, srcx, srcy, srcwidth, srcheight, blend","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"blend is a color, use alpha component for blending","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"either an image handle or layer handle (if not in imagemap)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if height < 0 disable blending if width < 0 (font mode, composite with background and blend with given color) blend with full rgba color else blend with alpha only","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"drawtextured: handle=\"+handle+\" dest=(\"+x+\",\"+y+\" \"+width+\"x\"+height+\") src=(\"+srcx+\",\"+srcy+\" \"+srcwidth+\"x\"+srcheight+\") blend=\"+integer.tohexstring(blend));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only use alpha","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\" (drawing image) imageptr=\"+imageptr);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\" (compositing surface) layerptr=\"+long.tohexstring(imageptr.longvalue())+\" currentlayer=\"+currentlayer);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"x1, y1, x2, y2, argb1, argb2","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"drawline: start=(\"+x1+\",\"+y1+\") end=(\"+x2+\",\"+y2+\") argb1=\"+integer.tohexstring(argb1)+\" argb2=\"+integer.tohexstring(argb2));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"width, height","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"loadimage: size=(\"+width+\"x\"+height+\")\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"creating a new image from bitmap data being sent over myconn, create a new empty image","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\" imghandle=\"+imghandle+\" imageptr=\"+imageptr);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"actual value is filled in later when it's prepared","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle, width, height not used unless we do uncompressed images","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"keep freeing the oldest image until we have enough memory to do this","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"width\/height is managed here","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"createsurface: (\"+width+\",\"+height+\") handle=\"+handle+\" layerptr=\"+layerptr);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"int imghandle = handlecount++;;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"prepimage: size=(\"+width+\"x\"+height+\")\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we've got enough room for it and there's a cache id, check if we've got it cached locally","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\" rezname=\"+rezname);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we use this hashcode to match it up on the loadcompressedimage call so we know we're caching the right thing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we've got it locally in our cache! read it from there.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"valid image in cache, use it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\" loaded from cache, imageptr=\"+imageptr+\" handle=\"+imghandle);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"imghandle=stbgfx.gfx_loadimage(width, height);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle, width, height, [rezid]","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we will not have this cached locally...but setup our vars to track it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"valid image in cache, use it system.out.println(\" loaded from cache, imageptr=\"+imageptr+\" handle=\"+imghandle);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"it doesn't match the cache","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this load failed but the server thought it would succeed, so we need to inform it that the image is no longer loaded.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stbgfx.gfx_unloadimage(handle);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"settargetsurface: handle=\"+handle+\" layerptr=\"+ (layerptr == null ? \"0\" : long.tohexstring(layerptr.longvalue())));","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"namelen, name, style, size","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"skip the terminating \\0 character","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"an extra 4 for the header","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"loadfont: handle=\"+fonthandle+\" name=\"+name.tostring()+\" style=\"+integer.tohexstring(style)+\" size=\"+size);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"long fontptr = loadfont0(name.tostring(), style, size);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme: implement! we don't have the font on this sytem (yet) see if it's cached and try to load it manually string cachename = name.tostring() + \"-\" + style; fontptr = loadcachedfont0(cachedir.getabsolutepath(), name.tostring() + \"-\" + myconn.getservername(), style, size); if (fontptr == 0) { return that we don't have this font so it'll load it into our cache","classification":"DEFECT","projectname":"namcyan"}
{"comment":"system.out.println(\" fontptr=\" + fontptr);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stbgfx.gfx_unloadfont(handle);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"unloadfont: handle=\"+handle+\" fontptr=\"+fontptr);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"namelen, name, len, data","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"saving font \" + name.tostring() + \" to cache\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"flipbuffer\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stbgfx.gfx_flipbuffer();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"startframe\"); prepare for a new frame to be rendered","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this makes sure the drawing surface gets resized properly","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"handle, line, len, data","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"unsigned char *data=&cmddata[12];","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the last number is the offset into the data array to start reading from stbgfx.gfx_loadimageline(handle, line, len, data, 12); int datapos = 12;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"loadimageline: handle=\"+handle+\" imageptr=\"+imageptr+\" line=\"+line+\" len2=\"+len2);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"12","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"loadimagecompressed: handle=\"+handle+\" imageptr=\"+imageptr+\" len2=\"+len2);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"srchandle, desthandle, destwidth, destheight, maskcornerarc","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"scaled size (ignore?)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"xfmimage: srchandle=\"+srchandle+\" srcimg=\"+srcimg+\" desthandle=\"+desthandle+\" destwidth=\"+destwidth+\" destheight=\"+destheight+\" maskcornerarc=\"+maskcornerarc);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\" newimage=\"+newimage);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add expressionstagelist to returned object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add embryogenesis expressionstagegroup","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add embryo stages","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add development expressionstagegroup","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"larva stages","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add tissue expressionstagegroup","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"a mate stages","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add treatment expressionstagegroup","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"add cell-line expressionstagegroup","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create mono that completes exceptionally with exception `illegalstateexception`.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we don't paginate this call. so we should make sure the number of reads is tolerable. todo: think about paginating this call.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"(non-javadoc) @see prefuse.action.action#run(double)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lets the ai player make an automated move. here, the ai player calculates a fitting next field which he then marks trying to win the tic tac toe game.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"evaluate a segmented funtion for a single value. return -1 if no valid segment found . if fn type is 0, perform an interpolation on the table","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check for domain","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"type == 0 means segment is sampled","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"calling execute\"+resulturl.getstringvalue()); the execution context will provide us with storage capacity, in this case a data container to which we will add rows sequentially note, this container can also handle arbitrary big data tables, it will buffer to disc if necessary.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"while(varit.hasnext()){","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"curvar:\"+curvar+\", curval:\"+curval+\", urltemplate:\"+urltemplate);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get rid of the &","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"now we are here\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"urltemplate = urltemplate.substring(0,urltemplate.length()-1);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"urltemplate = urltemplate.replaceall(pattern.quote(\"[\"+curvar+\"=\"+configvalue+\"&]\"), curvar+\"=\"+urlencoder.encode(currentcell.tostring(),\"utf-8\")+\"&\"); urltemplate = urltemplate.replaceall(pattern.quote(\"[\"+curvar+\"=\"+configvalue+\"]\"), curvar+\"=\"+urlencoder.encode(currentcell.tostring(),\"utf-8\")); system.out.println(\"urltemplate before:\"+doublestr+\", and after:\"+urltemplate);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"urltemplate =urltemplate.replaceall(\"\\\\[.*?\\\\]\", \"\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"urltemplate = urltemplate.substring(0, urltemplate.length()-1); system.out.println(\"urltemplate became \"+urltemplate);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: return a buffereddatatable for each output port","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"we are going to try to construct a bwevent object from a vevent. this may represent a new event or an update to a pre-existing event. in any case, the vevent probably has insufficient information to completely reconstitute the event object so we'll get the uid first and retrieve the event if it exists. <p>to put it another way we're doing a diff then update. <p>if it doesn't exist, we'll first fill in the appropriate fields, (non-public, creator, created etc) then for both cases update the remaining fields from the vevent. <p>recurring events present some challenges. if there is no recurrence id the vevent represents the master entity which defines the recurrence rules. if a recurrence id is present then the vevent represents a recurrence instance override and we should not attempt to retrieve the actual object but the referenced instance. <p>also, note that we sorted the components first so we get the master before any instances. <p>if dtstart, rrule, exrule have changed (also rdate, exdate?) then any existing overrides are unusable. we should delete all overrides and replace with new ones. <p>for an update we have to keep track of which fields were present in the vevent and set all absent fields to null in the bwevent. @param cb icalcallback object @param cal needed so we can retrieve the event. @param ical icalendar we are converting into. we check its events for overrides. @param val vevent object @param mergeattendees true if we should only update our own attendee. @return response with status and eventinfo object representing new entry or updated entry","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"empty component","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"get the guid from the component","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see if we have a recurrence id","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we have a recurrence id see if we already have the master (we should get a master + all its overrides). if so find the override and use the annnotation or if no override, make one. if no override retrieve the event, add it to our table and then locate the annotation. if there is no annotation, create one. it's possible we have been sent 'detached' instances of a recurring event. this may happen if we are invited to one or more instances of a meeting. in this case we try to retrieve the master and if it doesn't exist we manufacture one. we consider such an instance an update to that instance only and leave the others alone.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (rid != null) { see if we have a new master event. if so create a proxy to that event. masterei = findmaster(guid, ical.getcomponents()); if (masterei == null) { masterei = makenewevent(cb, chg, entitytype, guid, cal); bwevent e = masterei.getevent(); xxx this seems bogus dtstart mdtstart; string bogusdate = \"19980118t230000\"; if (dtstart.isutc()) { mdtstart = new dtstart(bogusdate + \"z\"); } else if (dtstart.gettimezone() == null) { mdtstart = new dtstart(bogusdate); } else { mdtstart = new dtstart(bogusdate + \"z\", dtstart.gettimezone()); } setdates(e, mdtstart, null, null, chg); e.setrecurring(true); e.addrdate(ridobj); e.setsuppressed(true); ical.addcomponent(masterei); } if (masterei != null) { evinfo = masterei.findoverride(rid); } }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if this is a recurrence instance see if we can find the master we only need this because the master may follow the overrides.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see if we have a new master event. if so create a proxy to this event.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dorecur - wrong again","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we just retrieved it's master","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this should never have an rid for cancel of entire event.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"presumably sent an update for the entire event. no longer suppressed master","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"manufacture a master for the instance","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"base dtstart on the recurrence id.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"e.addrdate(ridobj);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"debug(\"ical prop \" + prop.getclass().getname());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- accept response --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- attachment --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- attendee --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (cb.getstrictness() == icalcallback.conformancewarn) { warn(\"had attendees for publish\"); }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only update for our own attendee we're doing a put and this must be the attendee updating their partstat. we don't allow them to change other attendees whatever the put content says.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use the value we currently have","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"an added attendee","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- categories --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"got some categories","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- class --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- comment --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- completed --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- concept --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"got a concept","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- contact --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- created --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- description --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- dtend --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- dtstamp --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- dtstart --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"-------------------- due ------------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- duration --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- exdate --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- exrule --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- freebusy --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- geo --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- lastmodified --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- location --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"chgtbl - this only shows that it's a different location object","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see if the value is changed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- organizer --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- percentcomplete --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- poll mode --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- poll properties ----------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- poll winner --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- priority --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- rdate --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- recurrenceid -------------------- done above","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- relatedto --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- requeststatus --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- resources --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"got some resources","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- rrule --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- sequence --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- status --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- summary --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- transp --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- uid -------------------- we did this above","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------- url --------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"------------------------- x-property ---------------------------","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"see if this is an x-category that can be converted to a real category","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"=================== process sub-components ===============","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fix up timestamps.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"created cannot be null now","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove any recipients and originator","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"save a text copy of the entire event as an x-property","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"remove potentially large values","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"don't store the entire attachment - we just need the parameters.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"just return notfound as this event is on its override list","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"can be usingdirectives, globalattribs, or namespacemembersdecls namespacemembersdecls include namespaces, class, struct, interface, enum, delegate","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"using directive","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"parsetypemodifier();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"over hash","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"conditional-symbol pp-newline","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pp-expression pp-newline conditional-section(opt)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"result = new ppifnode(parseexpressiontonewline());","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"skip this block","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pp-newline conditional-section(opt)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pp-newline","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"line-indicator pp-newline","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pp-message","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"log.debug(\"in listworkingdirectory, directory is \" + workingdirectory + \" and there are \" + list.size() + \" files.\");","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the constraint s >> r', provided r is not void","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"additional constraints bi[t1=b(t1) ... tn=b(tn)] >> ti where bi is the declared bound of ti","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"jls: any equality constraints are resolved ...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"jls: ..., and then, for each remaining constraint of the form ti <: uk, the argument ti is inferred to be glb(u1,...,uk)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"any remaining type variable t that has not yet been inferred is then inferred to have type object . if a previously inferred type variable p uses t , then p is inferred to be p [t =object ].","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"there are many tables we have to decide: what table to what sheet, and what sheet to what workbook we should not repeat tables about the same class, so there are possible groups maybe a workbook should be full to have the best expected.ttl from the original model here we calculate: what table to what workbook","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"now we use the excelgenerator to generate the workbooks","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a config for this workbook","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo maybe make a getsingleordefault method","classification":"DESIGN","projectname":"namcyan"}
{"comment":"draw the excelcell matrix from exceltable","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"it uses the tableconf offset","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo if only one table with one class: add provenance sheetname -> insts a class. (for all insts)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"in one sheet multiple tables could be existing","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sheet name comes from table content","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"per sheet","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"system.out.println(\"save workbook \" + i); no extra folder when only one workbook","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"write provenance","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"used in rdfprovenance for fast lookup reified statements","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"need here sheetname for provenance","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this was a temporary cell created for a merge in tablegenerator putmultipleobjects method","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"no provenance information for this cell","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"write to files","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"key is sheet name","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"count how often","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"skip the ones with no prov and no address (temp cells)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"because json array hash is always different","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"per workbook","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"codegen iflexmodulefactory.callincontext(); public final override function callincontext(fn:function, thisarg:object, argarray:array, returns:boolean=true) : { var ret : * = fn.apply(thisarg, argarray); if (returns) return ret; return; } @param classgen @param isoverride true if the generated method overrides a base class method, false otherwise.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"it is actually a gas tank","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"validate something didn't go terribly wrong and we actually do have the tank we expect to have","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"insert gas into dropper","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we are able to fit at least some of the gas from our tank into the item","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we were able to actually extract it from our tank, then insert it into the item","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: print warning\/error","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"extract gas from dropper","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if the dropper has fluid or the tank interacting with is already full of gas","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if we were able to actually extract it from the item, then insert it into our gas tank","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dump the tank","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"it is actually an infusion tank","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: implement at some point","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: handle other chemical tanks like maybe infusion tanks","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"if something went wrong and we don't have a fluid handler on our tank, then fail","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if something went wrong and we don't have a fluid tank fail","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"insert fluid into dropper","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we are able to fit at least some of the fluid from our tank into the item","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"extract fluid from dropper","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_rhkeyreleased","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_rikeyreleased","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"objecteventlistener","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"only deal with valid renderers","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"when the robot begins, it is in initialized state in this state, initialize the robot sensors and actuators and wait for the event: driver pushes start initialize the robot","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initialize the wheels","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initialize the imu","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initialize the color sensors","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initialize the digitaltouch sensors","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initialize the led lights","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"initialize the rev2mdistance sensors","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"prepare the expansion hubs for bulk reads","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"event to trigger next state is pushing start button","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"perform the transitional actions initialize the encoders","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set the target pose (where the robot should drive to + heading)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set the new state","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check if trigger event occurred","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"perform transitional actions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"set a timelimit of 5 seconds for next state","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"perform the state actions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"report telemetry","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"trigger event?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"perform transitional actions tbd code to fold wobble arm create a new target pose on the launch line in center of field","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"or timed out?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tbd spin up the ring launcher set the new state","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"create a new target pose on the launch line in center of field","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"perform state actions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tbd action to launch rings at powershots","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"check for trigger event","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"exit opmode","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"state debug info if (debugon) { log.d(logtag, \"transitioning out of state \" + autonstate.tostring()); if (robot.getebotsmotioncontroller().istargetposereached(robot)) { log.d(logtag, \"pose achieved in \" + format(\"%.2f\", statestopwatch.getelapsedtimeseconds())); } else { log.d(logtag, \"failed to reach target, timed out!!! \" + robot.getposeerror().tostring()); } }","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gen-first:event_orderbuttonactionperformed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"@formatter:off air","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"grass","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dirt","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cobblestone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"planks","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sapling","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"bedrock","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sand","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"iron ore","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"coal ore","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"log 1","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"leaves 1","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sponge","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"glass","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lapis ore","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lapis block","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dispenser","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".tileentitytype(() -> tileentitytypes.dispenser)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sandstone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"noteblock","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"bed","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"golden rail","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"detector rail","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tall grass","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dead bush","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"red flower","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"brown mushroom","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"red mushroom","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gold block","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"iron block","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"double stone slab 1","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stone slab 1","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"brick block","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"tnt","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"bookshelf","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mossy cobblestone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"obsidian","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"torch","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fire","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"mob spawner","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"redstone wire","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"diamond ore","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"diamond block","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"crafting table","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"furnace","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lit furnace","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stone pressure plate","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wooden pressure plate","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"jukebox","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pumpkin","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"netherrack","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lit pumpkin","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stained glass","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"iron bars","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"end stone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"double wooden slab","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wooden slab","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ender chest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"trapped chest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"weighted pressure plate (light)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"weighted pressure plate (heavy)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"redstone block","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"quartz ore","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"hopper","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"quartz block","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"dropper","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":".tileentitytype(() -> tileentitytypes.dropper)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stained hardended clay","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stained glass pane","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"leaves 2","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"log 2","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"barrier","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"carpet","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"red sandstone","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"double stone slab 2","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stone slab 2","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"end rod","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"white shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"orange shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"magenta shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"light blue shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"yellow shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"lime shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"pink shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"gray shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"cyan shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"purple shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"blue shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"brown shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"green shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"red shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"black shulker box","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sign","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"banner","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"an internal method used to save the stream to the target. @param ref @param fos @throws jaxbexception","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"stop execution if all possible combinations have been generated can do this for methods as well as a new call stack is created each time","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: what if not initialized in a conditional? should insert before","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo te compat?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(user): we might need to separate out children into separate batches from parents to avoid deleting a parent before somehow failing to delete a child. delete children before their parents. note: we modify the input list, which is ok for current usage. we should make a copy in case that changes in future.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: set as a list. one s3filesystem by region","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: we really need to do a better job of not missing any events...so we should some how keep track of the last time usage was run, then go from there... for executing the job, we treat hourly and daily as special time ranges, using the previous full hour or the previous full day. otherwise we just subtract off the aggregation range from the current time and use that as start date with current time as end date.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: shouldn't we also allow parsing by the type of usage?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: fetch a maximum number of events and process them before moving on to the next range of events - get a list of the latest events - insert the latest events into the usage.events table","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: fetch a maximum number of user stats and process them before moving on to the next range of user stats get user stats in order to compute network usage","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"the height's not exact","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo should we handle the property.name() attribute? maybe add this to xbean code generator...","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo use property.name()?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the query is a contradiction, there are no matches","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"deduplicate sort fields","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"simplistic check: ignores exact vs name-only matches, but may be good enough","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this is an after thought, whole script needs re-writing if i were to do this properly anyway want to use skos note to keep the original obo identifier.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo make sure we want to clear this","classification":"DESIGN","projectname":"namcyan"}
{"comment":"perhaps, one day we should implement remotecontrolclient for better bluetooth support...? http: developer.android.com\/reference\/android\/media\/remotecontrolclient.html https: android.googlesource.com\/platform\/packages\/apps\/music\/+\/master\/src\/com\/android\/music\/mediaplaybackservice.java http: stackoverflow.com\/questions\/15527614\/send-track-informations-via-a2dp-avrcp http: stackoverflow.com\/questions\/14536597\/how-does-the-android-lockscreen-get-playing-song http: stackoverflow.com\/questions\/10510292\/how-to-get-current-music-track-info https: android.googlesource.com\/platform\/packages\/apps\/bluetooth\/+\/android-4.3_r0.9.1\/src\/com\/android\/bluetooth\/a2dp\/avrcp.java","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"apparently, a few 4.3 devices have an issue with com.android.music.metachanged.... stickybroadcast.setaction(playbackhaschanged ? \"com.android.music.playstatechanged\" : \"com.android.music.metachanged\");","classification":"DEFECT","projectname":"namcyan"}
{"comment":"not working well for itm calls","classification":"DEFECT","projectname":"namcyan"}
{"comment":"this tests that you can refresh user data by refreshing a tool only works if the current user in the database dump has no metadata, and on github there is metadata (bio, location) if the user has metadata, test will pass as long as the user's metadata isn't the same as github already","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo create mapping for the related info under the above column","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo create mapping for the related info under the above column recurse through the embedded collection element","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo support nested embedded map key\/value","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo create mapping for the related info under the above column recurse through the embedded array element","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo pass in embedded colmds if they have jdbctype info?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo casting arrays is not yet supported: assertrejected(new staticwhitelist(cc), \"new java.lang.boolean java.lang.string\", \"string[] a = ['true']; boolean x = a; x\"); assertevaluate(new staticwhitelist(cc, \"new java.lang.boolean java.lang.string\"), true, \"string[] a = ['true']; boolean x = a; x\"); assertrejected(new proxywhitelist(), \"new java.lang.boolean java.lang.string\", \"string[] a = ['true']; a as boolean\"); assertevaluate(new staticwhitelist(\"new java.lang.boolean java.lang.string\"), true, \"string[] a = ['true']; a as boolean\");","classification":"DESIGN","projectname":"namcyan"}
{"comment":"does it have custom mapping?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo should this be string??","classification":"DESIGN","projectname":"namcyan"}
{"comment":"noinspection unchecked","classification":"TEST","projectname":"namcyan"}
{"comment":"does it make sense to include objects into _all?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo only enable this through configuration...","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: allow the num of buckets to be specified","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme verticalalign may effect the root height.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: there may be multiple transitions in a year.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"we only expect two values, a def and a reference, but there might be more.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this is bad, found a node that is referenced but not defined. it must have been lost, emit some info about this node for debugging purposes.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"caused issues https: github.com\/holgerbrandl\/r4intellij\/issues\/79","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: reserving the entire thing is not ideal before we alloc anything. interleave?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: pool of objects?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: check if it can still happen; count should take care of this.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: this is very hacky. we called reservememory so we know that somewhere in there, there's memory waiting for us. however, we have a class of rare race conditions related to the order of locking\/checking of different allocation areas. simple case - say we have 2 arenas, 256kb available in arena 2. we look at arena 1; someone deallocs 256kb from arena 1 and allocs the same from arena 2; we look at arena 2 and find no memory. or, for single arena, 2 threads reserve 256k each, and a single 1mb block is available. when the 1st thread locks the 1mb freelist, the 2nd one might have already examined the 256k and 512k lists, finding nothing. blocks placed by (1) into smaller lists after its split is done will not be found by (2); given that freelist locks don't overlap, (2) may even run completely between the time (1) takes out the 1mb block and the time it returns the remaining 768kb. two solutions to this are some form of cross-thread helping (threads putting \"demand\" into some sort of queues that deallocate and split will examine), or having and \"actor\" allocator thread (or threads per arena). the 2nd one is probably much simpler and will allow us to get rid of a lot of sync code. but for now we will just retry 5 times 0_o","classification":"DESIGN","projectname":"namcyan"}
{"comment":"try to split bigger blocks. todo: again, ideally we would trylock at least once","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo ? addresourcereference(namedconsequence, parttype.named_consequence);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this method supports only guest network creation","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fail network creation if specified vlan is dedicated to a different account","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fail network creation if owner has a dedicated range of vlans but the specified vlan belongs to the system pool","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"in advance zone cidr for shared networks and isolated networks w\/o source nat service can't be null - 2.2.x limitation, remove after we introduce support for multiple ip ranges with different cidrs for the same shared network","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: change filename param to int","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo(peis): fix this, we should not assert here.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"dx-7850 : remove once solution for maprfs is found","classification":"DESIGN","projectname":"namcyan"}
{"comment":"server replied bare ntlm => we didn't preemptively sent type1msg","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"xxx deleting here doesn't work on windows: file f = propertyutils.resolvefile(getprojectdirectoryfile(), item.getfilepath()); fileobject todel = fileutil.tofileobject(f); if (todel != null) { todel.delete(); }","classification":"DEFECT","projectname":"namcyan"}
{"comment":"delete this post adapter when you finish postadapter.add(new payment(\"james blunt\", \"0149603509\", \"4500\", \"waec\", \"07033513241\", \"igwenus619@gmail.com\")); add childeventlistener, so that changes made in the database are reflected","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"uncomment this when you've finished","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"warning!!! this logic is for demonstration purposes","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the device isn't capable of playing this stream.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo copy over feed_id and feed_version from source namespace? fixme do the following only on databases that support schemas. sqlite does not support them. is there any advantage of schemas over flat tables?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the player inputs are not memory mapped, they are handled by an i\/o chip. these fake input ports are read by mappy_customio_data_r()","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"coin 2 is not working","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"possible for xml files created on a different operating system than the one our analysis is run on","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"negative value to indicate it is a unique id but","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we don't know its value","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo(tony): we might want to create a special fake class to represent menu groups. but for now, let's simply pretend it's a viewgroup. also, print a warning when we do see <group>","classification":"DESIGN","projectname":"namcyan"}
{"comment":"android sdk code almost universally refers to com.android.internal.r, except when refering to android.r.stylable, as in horizontalscrollview. arghgh. see https: github.com\/robolectric\/robolectric\/issues\/521","classification":"DESIGN","projectname":"namcyan"}
{"comment":"replace this statement with your own return","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"the tensorflow software will scale the input images from the camera to a lower resolution. this can result in lower detection accuracy at longer distances (> 55cm or 22\"). if your target is at distance greater than 50 cm (20\") you can adjust the magnification value to artificially zoom in to the center of image. for best results, the \"aspectratio\" argument should be set to the value of the images used to create the tensorflow object detection model (typically 1.78 or 16\/9). uncomment the following line if you want to adjust the magnification and\/or the aspect ratio of the input images. tfod.setzoom(2.5, 1.78);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme: only add those phaser.js constants","classification":"DEFECT","projectname":"namcyan"}
{"comment":"hack: since it is not possible to set the owner of an javafx alert to a swing frame, we use the following approach to set the modality!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"usersession.assertloggedin(); note: not needed because we are forwarding to windowrestcontroller","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"could not parse embedded xmp metadata. that's not a serious problem, so we'll just ignore the issue for now. todo: make error handling like this configurable.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"attention: this was auto-generated to implement the app indexing api. see https: g.co\/appindexing\/androidstudio for more information.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"discard fixme log problem","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo add support for nested collections","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo add your handling code here:","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"we can't do better than this","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: do not hard code \"name\" etc as english here.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo dataverse subject and affiliation should be highlighted but this is commented out right now because the \"friendly\" names are not being shown on the dataverse cards. see also https: github.com\/iqss\/dataverse\/issues\/1431","classification":"DESIGN","projectname":"namcyan"}
{"comment":"solrfieldstohightlightonmap.put(searchfields.dataverse_subject, \"subject\"); solrfieldstohightlightonmap.put(searchfields.dataverse_affiliation, \"affiliation\"); @todo: show highlight on file card? https: redmine.hmdc.harvard.edu\/issues\/3848","classification":"DESIGN","projectname":"namcyan"}
{"comment":"solrquery.addfacetfield(searchfields.category); solrquery.addfacetfield(searchfields.file_type_mime); solrquery.addfacetfield(searchfields.distributor); solrquery.addfacetfield(searchfields.keyword); @todo when a new method on datasetfieldservice is available (retrievefacetsbydataverse?) only show the facets that the dataverse in question wants to show (and in the right order): https: redmine.hmdc.harvard.edu\/issues\/3490 also, findall only returns advancedsearchfield = true... we should probably introduce the \"isfacetable\" boolean rather than caring about if advancedsearchfield is true or false","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo: hide the extra line this shows in the gui... at least it's last...","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"@todo: do sanity checking... throw error if negative","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"calendar calendar = calendar.getinstance(timezone.gettimezone(\"utc\"), locale.uk); calendar.set(2010, 1, 1); date start = calendar.gettime(); calendar.set(2013, 1, 1); date end = calendar.gettime(); solrquery.adddaterangefacet(searchfields.citation_date, start, end, \"+1month\"); @todo make this configurable","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo: odd or even makes a difference. couldn't find value of 2014 when this was set to 2000","classification":"DEFECT","projectname":"namcyan"}
{"comment":"@todo: these are dates and should be \"range facets\" not \"field facets\" right now they are lumped in with the datasetfieldservice.findall() above","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo refactor searchfields to a hashmap (or something? put in database? internationalize?) to avoid the crazy reflection and string manipulation below","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo only solrfield.solrtype.string? that's not right... knit the solrfield object more into the highlighting stuff","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo put all this in the constructor?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo start using searchconstants class here","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"do not set the imageurl, let the search include fragment fill in the thumbnail, similarly to how the dataset and datafile cards are handled. solrsearchresult.setimageurl(baseurl + \"\/api\/access\/dvcardimage\/\" + entityid); @todo expose this api url after \"dvs\" is changed to \"dataverses\". also, is an api token required for published dataverses? michael: url changed.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo we are not yet setting the api url for files because not all files have metadata. only subsettable files (those with a datatable) seem to have metadata. furthermore, the response is in xml whereas the rest of the search api returns json.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo store parent_id as a long instead and cast as such","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo we do want to show the count for each facet","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"try to find a friendlier name to display as a facet @todo hmm, we thought we wanted the datasetfields array to go away once we have more granularity than findall() available per the todo above but we need a way to lookup by solr field, so we'll build a hashmap","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo get rid of this crazy reflection, per todo above... or should we... let's put into a hash the friendly names of facet categories, indexed by solr field","classification":"DESIGN","projectname":"namcyan"}
{"comment":"we just assume properties are null by default todo: is this a valid assumption? should we check this by creating an instance?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: check the isearch-terminators variable terminating the search","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: refactor this into requestparser implementations, so a user could alter requests to change the behavior within a single accesspoint. for now, this is a simple way to expose the feature to configuration.g","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo to remove","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: door corners","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: handle other jdbc sources","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo better message","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: allocate in workspace","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: checked exception","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo fix","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo should board slack be applied at the origin stop? is this done in raptorworker? see also below in computestatistics","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: maybe change to delete instead of this?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: notifcation?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"the local strategy is added only once. in non-union case that is the actual edge, in the union case, it is the edge between union and the target node","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo follow specified tx policy","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: notice this is not ordered like the input ^^'","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo somehow connect the cancel back to netsession","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: make an org.apache.xmlgraphics.io.resourceresolver resolver!?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme: make this configurable","classification":"DEFECT","projectname":"namcyan"}
{"comment":"?","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"so far only got 0?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"attempt to respawn them where they died.. maybe portal 0 is better tho?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"for some forgotten reason, an empty label is parsed into a space, so we need at least two bytes in textbuf.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"\/* should check that the record really won't fit, e.g., there may be no text.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: we do not support projections from multiple pig statements yet","classification":"DESIGN","projectname":"namcyan"}
{"comment":"we can't effectively support reversed queries when we have a range, so we don't support it (or through post-query reordering) and shouldn't get there.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the following exception was thrown during execution in test generation","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"expected exception.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"email app does not work with no \"to\" recipient. move all 'cc' to 'to' in this case.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo how to set this?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo add more validation","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"xxx - what else?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo will this ever be something besides a propertywatcher?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo change to log","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo version db sqlitedatabase db = sqlitedatabase.openorcreatedatabase( new file(dbdir, corecontext.db_library_file_name), null); if (db.getversion() != version) { db.begintransaction(); try { int currversion = db.getversion(); if (currversion == 0) { oncreate(db); }; onupgrade(db, currversion); db.setversion(version); db.settransactionsuccessful(); } finally { db.endtransaction(); } }","classification":"DESIGN","projectname":"namcyan"}
{"comment":"<p>a container or an application can set this manually. if not we will use the {@link java.util.serviceloader} and use the first service we find.<\/p> todo: clarify if this is per 'application' or general? @param provider to use","classification":"DESIGN","projectname":"namcyan"}
{"comment":"if ( sparqlupdater.verbose_level > 0 ) { justification.print( return_justifications, axiom_ ); } we only consider abox axioms for deletion. therefore, we remove tbox and rbox assertions. todo if printing is not desired, this loop can be combined with the one above and the method used here can be removed within the justification class.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"ok nasty hack here. currently account have no idea which direction money flows. so for now - hardcoded for backwards compatiblility","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo (for button person): add buttons for all superstructure wanted states","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo should be a specific blog interface","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo some common type for all pois","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"if partialline is already created, just add to it. todo this is found below. break it out as a function or change the if statement?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"system.arraycopy(buffer, lineboundaries[0], partialline, 0, lengthofline);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"found a new line. if there is a partial line, return it otherwise keep looking. todo put a better check than this","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo is this right?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: should we need to set anything?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: handle international iris properly (unicode support for for hostname, path and query)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: this probably does not support https: -> http: redirections","classification":"DESIGN","projectname":"namcyan"}
{"comment":"must be getsourceinputstream then, this is guaranteed by super.checksource();","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"ams 04\/24\/2009 - fixme - refactor this - 'else-if' and 'else' are pretty similar","classification":"DESIGN","projectname":"namcyan"}
{"comment":"shouldn't have to release since we have exclusive access, but the next getloginputstream assumes things are on the freelist.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we need to specially handled narrowed variables here because the reference type is not narrowed. say the variable declaration is \"string or null foo\", and it's narrowed to string. the is_reference_type(the_type) would return a union type, which is not what we want.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"consider modules: krb5loginmodule, ldaploginmodule, ntloginmodule, jndiloginmodule ...sun...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"call callback to retrieve credentials, and checks that authentication fails","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"note: this test case may fails with standardmediaplayer (affects: ics to jb, lollipop with nuplayer)","classification":"DEFECT","projectname":"namcyan"}
{"comment":"note: seekto() call will be ignored if the player is attached as a next player.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"sector is not loaded","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"use putallprmessage that already handles transactions","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"process on self first","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme: handle reminders and events if they are enabled in do not disturb","classification":"DEFECT","projectname":"namcyan"}
{"comment":"get the app id that generated this notification. for now only used by pebble color, but may be more useful later.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: remove the else part later","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: remove","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme this will load the db (if its not already loaded), which is excessive if we are just going to show some search results.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"note: if we constantly get empty results (i.e. no valid entries because all the commands got filtered out), then the lastreadid won't be updated for a while.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo loadgrfindexed(\"trkfoundw.grf\", _slopes_spriteindexes[_opt.landscape], i++);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"[dz] wrong place, but it was in loadnewgrf for some reason. memcpy(&_engine_info, &orig_engine_info, sizeof(orig_engine_info)); memcpy(&_rail_vehicle_info, &orig_rail_vehicle_info, sizeof(orig_rail_vehicle_info)); memcpy(&_ship_vehicle_info, &orig_ship_vehicle_info, sizeof(orig_ship_vehicle_info)); memcpy(&_aircraft_vehicle_info, &orig_aircraft_vehicle_info, sizeof(orig_aircraft_vehicle_info)); memcpy(&_road_vehicle_info, &orig_road_vehicle_info, sizeof(orig_road_vehicle_info)); todo make deep copy?? global._engine_info = enginetables2.orig_engine_info; for( engineinfo ei : enginetables2.orig_engine_info )","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo was called from loadnewgrf","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"does the sequence escape?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"is the point within the rendering region?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fails if the subject is not a container with the specified number of values or name\/value pairs.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"no need to close myclientinputstream since myparser.close() above will do it","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"self object reference?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this happen in the static initializer ignore","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if it is like body.this fixme:","classification":"DEFECT","projectname":"namcyan"}
{"comment":"creates a sax2 inputsource object from a trax source object @param xsltc todo @param source todo @return todo @throws transformerconfigurationexception todo","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"note !!! the double (eg. both xhtml_ns_stylesheet and local_ns_stylesheet) checks below are the result of a bug: because we set the @vocab attribute on the <html> element, all the stylesheet-links are prefixed with that namespace, so they're actually not real xhtml predicates, but changed into eg. http: www.mot.be\/ontology\/stylesheet because it's quite a hard fix to implement, we work around it here. remove all the xhtml stylesheets predicates from the model","classification":"DESIGN","projectname":"namcyan"}
{"comment":"removes all favicon statements. note that this last check isn't waterproof (we can use any name for our favicons), but it works 99% of the time","classification":"DESIGN","projectname":"namcyan"}
{"comment":"we'll use this loop to whitespace-trim the values while we're at it note that this is a bit hacky. the more proper way would be to edit the com.beligum.blocks.rdf.importers.semargl.sesamesink.addplainliteral() method, but that class is supposed to be part of the core sesame library (only copied over to have rdfa support in sesame4), so i opted to implement it here also note that this implementation doens't trim the non-plain literal values (like datetime). they are passed over via the @content attribute inside rdfa, so it should be quite clean already. also because the html input stream, coming from jsoup is minified before passed to sesame. but it can be easily supported (the part where the exception is thrown)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"these will hold possible modified pieces of the statement","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: what about open and close inside strings ?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: deal with potential runtime exceptions","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: need to implement procedure to skip finalizing the current session when this is called on app start, but keep the current session when called at crash time. currently this only works when called at app start.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"all the objectentities subentities must fill this bean as well but not objects?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"add this document to the list of processed documents.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme: what to do about language?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme: complain if no refs","classification":"DEFECT","projectname":"namcyan"}
{"comment":"note(zhen): it is not very useful to throw exception...","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo figure out how to test this @throws exception","classification":"TEST","projectname":"namcyan"}
{"comment":"this is to catch the theoretical case where we call start and stop then start really fast, but the load call from the first start didn't finish before the first stop, and comes in between the first stop and the second start...note this is just done based on my thoughts on possible fringe cases, not because i actually noticed this behavior. this.stop(); m_cajaframeobjects.push(cajaframeobject);","classification":"DESIGN","projectname":"namcyan"}
{"comment":"its an absolute url. set the desturl to empty so that item.second is taken as is","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: !! delete key should also delete this attachment.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: !! isn't this a hack to get around the normal observer thing? no, not always. sometimes data changes in the db record that the uri refers to and it isn't really a change to the attachment record.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"note thread.yield() is helpful but not consistent","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: shouldn't this be in-fact an offline detector?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: indicar al usuario que el acuerdo previo ha sido cancelado y ser\u00e1 necesaria la creaci\u00f3n de uno nuevo","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: check if superclass is registered as a datatokenizer.... and check if it implements datatokenizer","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo 2: next, write code to remove the first value from the scores","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo 3: implement the methods below","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: sometimes get adapter duplicate since memberid isn't endpoint initial impl uses endpoint.tostring() for memberid of server; final impl should have server send its real memberid to client via handshake assertfalse(\"please update testbridgemembershipeventsinclient to use bridgeserver memberid.\", firedadapterduplicate);","classification":"DESIGN","projectname":"namcyan"}
{"comment":"make the xhr request last longer to make it easier to click the link at the right moment.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: file was choosen;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"swap the entries of the result. todo: maybe complex2 should have a final method that swaps the entries. this might speed up dereferencing the fields of cp, because dereferencing fiels of other objects might be slower than dereferencing fields of the same object. but actually, i don't know if that is true or if it matters.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"if this node has a boosttarget, we know it's an announce so we send out the announce todo-0: we should probably rely on if there's an actpub type itself that's \"announce\" (we save that right?)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme remove after javaparser bug is fixed","classification":"DEFECT","projectname":"namcyan"}
{"comment":"4. trash any remote messages that are marked as trashed locally. todo - this comment was here, but no code was here. 5. get the remote message count.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"12. divide the unsynced messages into small & large (by size) todo doing this work here (synchronously) is problematic because it prevents the ui from affecting the order (e.g. download a message because the user requested it.) much of this logic should move out to a different sync loop that attempts to update small groups of messages at a time, as a background task. however, we can't just return (yet) because pop messages don't have an envelope yet....","classification":"DEFECT","projectname":"namcyan"}
{"comment":"13. download small messages todo problems with this implementation. 1. for imap, where we get a real envelope, this is going to be inefficient and duplicate work we've already done. 2. it's going back to the db for a local message that we already had (and discarded). for small messages, we specify \"body\", which returns everything (incl. attachments)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo a good optimization here would be to make sure that all stores set the proper size after this fetch and compare the before and after size. if they equal we can mark this synchronized instead of partially_synchronized","classification":"DESIGN","projectname":"namcyan"}
{"comment":"has to be reinitialized... don't ask why.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"has to be reinitialized","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: performance","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: make faster","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo add proper number formatters","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: now that we create shards ahead of time, is this code needed? esp since hash ranges aren't assigned when creating via this method?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: check if this is needed if (system.getproperty(\"java.version\").startswith(\"1.4\")) clipw = clipw * 5 \/ 4; system.out.println(\"drawtext: dest=(\"+x+\",\"+y+\") clip=(\"+clipx+\",\"+clipy+\" \"+clipw+\"x\"+cliph+\") fonthandle=\"+fonthandle+\" argb=\"+integer.tohexstring(argb)+\" text=\"+text.tostring());","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme: grab extension if possible","classification":"DEFECT","projectname":"namcyan"}
{"comment":"seems to be unused","classification":"DESIGN","projectname":"namcyan"}
{"comment":"we cheat and apply the transforms to a metaimage object without actually creating a new image (saves oodles of memory)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: add the others","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"create callable that increments the counter and returns the counter value, and then use `repeat()` operator to create flux that emits values from 0 to 10.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"we'll need this later.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"xxx a guid is required - but are there devices out there without a guid - and if so how do we handle it?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"we need this in a couple of places","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"xxx this seems bogus","classification":"DEFECT","projectname":"namcyan"}
{"comment":"xxx spurious???","classification":"DEFECT","projectname":"namcyan"}
{"comment":"string uid = getuidpar(prop); at the moment mozilla lightning is broken and this leads to all sorts of problems. if (uid != null) { loc = cb.getlocation(uid); }","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme failed to startup or was interrupted during startup; maybe throw to the caller?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme got tired of waiting, maybe do something special here?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"warning incomplete see processsubtypeconstraints","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo configurable","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo a second table in the sheet means we maybe have to move the offset so that it will not overlap","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: sand physics behavior gravel","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: gravel physics behavior gold ore","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: 29 web","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: 33 todo: 34 wool","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: 36 yellow flower","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: oak stairs chest","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: wheat farmland","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: check here, may be necessary to remove the last space.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"operator op = ((operatoritem) item0)._operator; todo check this value if we can, somehow","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: rewrite function to use one sql call per select\/insert for all items","classification":"DESIGN","projectname":"namcyan"}
{"comment":"not sure how we'd end up here","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this cast is horrid but we can't fix everything at once.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: find a way to grab the measurement just once for all async metrics.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"creates a 2d array of the given width and height, filled with entirely with the value contents. you may want to use {@link #fill(char[][], char)} to modify an existing 2d array instead. @param contents the value to fill the array with @param width the desired width @param height the desired height @return a freshly allocated 2d array of the requested dimensions, filled entirely with contents","classification":"DESIGN","projectname":"namcyan"}
{"comment":"creates a 2d array of the given width and height, filled with entirely with the value contents. you may want to use {@link #fill(float[][], float)} to modify an existing 2d array instead. @param contents the value to fill the array with @param width the desired width @param height the desired height @return a freshly allocated 2d array of the requested dimensions, filled entirely with contents","classification":"DESIGN","projectname":"namcyan"}
{"comment":"creates a 2d array of the given width and height, filled with entirely with the value contents. you may want to use {@link #fill(double[][], double)} to modify an existing 2d array instead. @param contents the value to fill the array with @param width the desired width @param height the desired height @return a freshly allocated 2d array of the requested dimensions, filled entirely with contents","classification":"DESIGN","projectname":"namcyan"}
{"comment":"creates a 2d array of the given width and height, filled with entirely with the value contents. you may want to use {@link #fill(int[][], int)} to modify an existing 2d array instead. @param contents the value to fill the array with @param width the desired width @param height the desired height @return a freshly allocated 2d array of the requested dimensions, filled entirely with contents","classification":"DESIGN","projectname":"namcyan"}
{"comment":"creates a 2d array of the given width and height, filled with entirely with the value contents. you may want to use {@link #fill(byte[][], byte)} to modify an existing 2d array instead. @param contents the value to fill the array with @param width the desired width @param height the desired height @return a freshly allocated 2d array of the requested dimensions, filled entirely with contents","classification":"DESIGN","projectname":"namcyan"}
{"comment":"creates a 2d array of the given width and height, filled with entirely with the value contents. you may want to use {@link #fill(boolean[][], boolean)} to modify an existing 2d array instead. @param contents the value to fill the array with @param width the desired width @param height the desired height @return a freshly allocated 2d array of the requested dimensions, filled entirely with contents","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: figure out the necessary escaping for windows paths here :)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: customize your mock logic for s3 client","classification":"DESIGN","projectname":"namcyan"}
{"comment":"hack: shouldn't happen, but occurring on occasion when running xats under junit4. some sort of race condition?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo figure out how to act with this stuff","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo show resulting document","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"for some reason age is a string right now, caused by angular. this is a problem and should not be this way but here ya go","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo so currently we execute the qstat for each job but we can use user based monitoring todo or we should concatenate all the commands and execute them in one go and parse the response","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: smarter initialization of the map","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(calvin): make this supported again.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"resolve the specific did in untrusted mode, internal use only. @param did the did object to be resolve @param force ignore the local cache and resolve from the id chain if true; try to use cache first if false. @return the diddocument object @throws didresolveexception if an error occurred when resolving did todo: to be remove in the future","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: where to get?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: use below when info is changed","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: eventually use caching here","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo may be possible to do finer-grained locks.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"column pruning could become problematic when a single map task contains multiple tablescan operators where different columns are pruned. this only occurs on mr, as tez initializes a single map task for every tablescan operator.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: we can further improve simplifying the equalities by considering other relationships from the outer side","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(dreiss): maybe make this an option?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: strip word-final or -initial apostrophes as in james' or 'cause. currently assuming hyphenated expressions split into two asr words.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"band of thieves skill doesn't work so i don't know","classification":"DEFECT","projectname":"namcyan"}
{"comment":"tdod: make this meaningful...","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: we will need to design the shared-memory region data structure, so that we can carry the key\/value type definition over from map shuffle store via the shuffle channel, plus this enum category information for key. @return","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo replace with state migration; note that key hash codes need to remain the same after migration","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo (lwhite): these tests don't fail. what was their intent?","classification":"TEST","projectname":"namcyan"}
{"comment":"sets a costmap grid and fills it with the geometry polygons. todo(playerone) remove sync","classification":"DESIGN","projectname":"namcyan"}
{"comment":"finds the boundaries of all the geometry polygons in x and y. the boundaries are extended by robot radius in each direction. @return array of doubles {{minx, miny}}, {{maxx, maxy}}. todo(playerone) remove sync","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: turn the below precondition check on when standalone pipeline is removed in the write path in tests preconditions.checkargument(buffer.position() == 0);","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: atm we are forwarding all calls to windowrestcontroller hoping the document existing and has the same id as view's row id.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"probably not needed, onstop closes the socket, which should make the thread stop (?)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo report source column name instead of columnhandle tostring","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo replace with keys for i18n","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: current implementation is less elegant. code refactoring may be needed.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: optimize","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(#496): replace with actual study's org name.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@desc sets the first timex of type date in the document timex list as the document creation time todo: make sure \"first\" in list is necessarily first that appears in document! should be, unless the relevant string is somehow dropped during sentence tokenization.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo :: improve speed by not calling substring but keeping track of start!","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: is there any way to make this `get()` faster?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: replace this with your own logic","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: gg, implement?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"xxx test that nbres: file contents work","classification":"TEST","projectname":"namcyan"}
{"comment":"android has a bug, sometime textview wont change its value when you modify spannablestring, so you must settext again, test on android 4.3 nexus4","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: this needs to be given author userlogin","classification":"DESIGN","projectname":"namcyan"}
{"comment":"tests whether the rsvs are already stored in the <code>weight<\/code> table, or if they are computed from outside. <p> <p> the default implemenation returns <code>true<\/code>. <p> todo: really useful? @param operator search operator @return true, if the rsvs are already stored","classification":"DESIGN","projectname":"namcyan"}
{"comment":"workaround for the db file deletion problem during the tests","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo (savaity): replace with the az_tracing_namespace_key","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme: currently working for postgresql only","classification":"DESIGN","projectname":"namcyan"}
{"comment":"returns an event indicating the current status of each active job, in the order they were submitted. todo: hook this up.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(igorbernstein2): figure out how to make this work with appengine request scoped threads","classification":"DESIGN","projectname":"namcyan"}
{"comment":"update value mapping using first element. maybe we should do the same for all elements?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"update key mapping using first key. maybe we should do the same for all keys?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"update value mapping using first value. maybe we should do the same for all values?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo handled in r_planes.c","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo handled in r_sky.c","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo handled in r_draw.c","classification":"DESIGN","projectname":"namcyan"}
{"comment":"[issue#11]: need to avoid optimizing if we use delegate- or property-based creators.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this violates encapsulation but there is no convenience method to get a filename from disklrucache. filename was derived from private class method entry#getcleanfile in disklrucache.java","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: implement this in the future c.securesettingname = settings.secure.enabled_custom_tile_listeners;","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: implement this in the future c.settingsaction = settings.action_custom_tile_listener_settings;","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo documentation @param event @return","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"do not know where the file is being store so checking the permission to be secure todo to prevent permission checking we need a property from the call","classification":"DESIGN","projectname":"namcyan"}
{"comment":"given a state, this function returns all states reachable from this state. each next state is paired with the list of moves (one for each role in the game) that lead to the next state. whenever i call this method i assume that the moves for the roles are returned always with the same role order. @param state @return a list of lists of legal moves, one for each role, and all states reachable from the given state, each of which is paired with the list of moves (one for each role in the game) that lead to the next state. ? what does this method return if the state is terminal? for now assuming it returns null.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: doc","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"why doesn't this call work with reflection? method = fclass.getmethod(\"setstrictfovalidation\", boolean.class); method.invoke(fopfactorybuilder, b);","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme: how do i do this in 2.x?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: if you don't have om ha configured, change the following as appropriate.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the following should probably provide the type of the list, and report cardinality as array.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: probably, we don't need to synchronize data here, because this method is always called from the same thread synchronize all cached data","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: marray has ismuated() method, but unable to check mutated to mutated. @test","classification":"TEST","projectname":"namcyan"}
{"comment":"rocket doesn't implement this yet! would be useful to control rocket from demo's side","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"we need to order merkle tree 1st before acually actual merkel tree implementation in java. we probably will go with a less dramatic version for poc.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"alert: should it distinguish -0.0 from +0.0 ?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"not sure what this does @param x x coordinate @param y y coordinate @param heading idk","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo complex cast","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: html encode?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(saurabh): explain reload scenario here","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"todo: only for v1 runtime","classification":"DESIGN","projectname":"namcyan"}
{"comment":"all objects returned from here from {@code this} should contribute to determining an object's hash code and equality. a suggestion for handling circular references back to {@code this} should be handled by way of a unique identifier in the other's {@link #significantattributes()} instead of the object itself. @return an array of all the {@link object} important for hashcode\/equality.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: remove. here for testing","classification":"TEST","projectname":"namcyan"}
{"comment":"todo lets just detect wars for now for servlet engines - how do we decide on wildfly?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: this needs to be fixed at gravia","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo this could be optimized","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: not by the javadoc api spec","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo this needs to be updated if actual values are used in the distribution system","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo i think this is broken because linebounardaries[0] is not taken into account when populating the buffer like it was in system.arraycopy","classification":"DEFECT","projectname":"namcyan"}
{"comment":"define the directory path to the soundboard apps folder change my_soundboard to whatever you want as your folder but keep the slash todo: when changing the path be sure to also modify the path in filepaths.xml (res\/xml\/filepaths.xml)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"[todo] documentation. unit test. [\/] @return the muteaudio_b","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"[todo] documentation. unit test. [\/] @param b the muteaudio_b to set","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"[todo] documentation. unit test. [\/] @return the sliderhasbeenmoved_b","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"[todo] documentation. unit test. [\/] @param b the sliderhasbeenmoved_b to set","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"[todo] documentation. unit test. [\/] @return the captureaudio_b","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"[todo] documentation. unit test. [\/] @param b the captureaudio_b to set","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"[todo] documentation. unit test. [\/] @return the audioplaybackowner","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"return node; todo: consider returning newstmt instead","classification":"DESIGN","projectname":"namcyan"}
{"comment":"weird implementation of clone() is ok on final classes","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: refatorar","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme: flashing blank activity","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: implement this method (in an iterative way)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: implement this method this method takes a reference to the head of a linked list and returns the reference to the head of the linked list in the reversed order.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(pdex): why are we making our own threadpool?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo write me","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fail(\"test not implemented yet.\"); todo: do later","classification":"TEST","projectname":"namcyan"}
{"comment":"todo: use sane arg parsing","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo this could be cleaned","classification":"DESIGN","projectname":"namcyan"}
{"comment":"setup the table (todo: clean that)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: support apng animated images?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"findbugs is not smart enough to infer that actual type of this.currentstate is iiasuitestate not just suitestate","classification":"DESIGN","projectname":"namcyan"}
{"comment":"xxx what do i do with it?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme perform substitution","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme uncomment when overrides can be handled @outschema(\"wdk.users.get-by-id\")","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo this should be op_returnvoid, but the boolean default value for the 'returns' parameter isn't defaulting to true. fix this after cmp-936 is fixed.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo update open changes according to event. for now, just read them all","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: vaadin session handling","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo refactor operations according to the protocol message","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo netty allow to set\/get attachment on channel in the near feature, e.g. channel.getattribute(new attributekey<endpoint>(transport_sender))","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"int subend = sub.findend(')'); todo.. implement functions to find the end of a nested query","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo load all expected impl classes, allowing fail fast rather than waiting for user to hit a certain use case","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo, assume the url is a file path for now.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo, assume the url is a file path for now. system.out.println(preferencefileurl + \" url!!!!\\n\"); use a temporary for atomic writing","classification":"DESIGN","projectname":"namcyan"}
{"comment":"getter todo: write general description for this method","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"setter todo: write general description for this method","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"this is problematic. there are still active threads pending a shutdown.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: handle more than one sdk worker processing a single bundle.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"not called","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo slavecomputer.doslaveagentjnlp; there should be an annotation to request unprotected access","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(b\/110833109): populate generation id in storageresourceid when listing infos?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"returns an observable that emits items that are the result of applying a specified function to pairs of values, one each from the source observablesource and another specified observablesource. <p> the operator subscribes to its sources in order they are specified and completes eagerly if one of the sources is shorter than the rest while unsubscribing the other sources. therefore, it is possible those other sources will never be able to run to completion (and thus not calling {@code dooncomplete()}). this can also happen if the sources are exactly the same length; if source a completes and b has been consumed and is about to complete, the operator detects a won't be sending further values and it will unsubscribe b immediately. for example: <pre><code>range(1, 5).dooncomplete(action1).zipwith(range(6, 5).dooncomplete(action2), (a, b) -&gt; a + b)<\/code><\/pre> {@code action1} will be called but {@code action2} won't. <br>to work around this termination property, use {@link #doondispose(action)} as well or use {@code using()} to do cleanup in case of completion or a dispose() call. <img width=\"640\" height=\"380\" src=\"https: raw.github.com\/wiki\/reactivex\/rxjava\/images\/rx-operators\/zip.png\" alt=\"\"> <dl> <dt><b>scheduler:<\/b><\/dt> <dd>{@code zipwith} does not operate by default on a particular {@link scheduler}.<\/dd> <\/dl> @param <u> the type of items emitted by the {@code other} observablesource @param <r> the type of items emitted by the resulting observablesource @param other the other observablesource @param zipper a function that combines the pairs of items from the two observablesources to generate the items to be emitted by the resulting observablesource @return an observable that pairs up values from the source observablesource and the {@code other} observablesource and emits the results of {@code zipfunction} applied to these pairs @see <a href=\"http: reactivex.io\/documentation\/operators\/zip.html\">reactivex operators documentation: zip<\/a>","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns an observable that emits items that are the result of applying a specified function to pairs of values, one each from the source observablesource and another specified observablesource. <p> the operator subscribes to its sources in order they are specified and completes eagerly if one of the sources is shorter than the rest while unsubscribing the other sources. therefore, it is possible those other sources will never be able to run to completion (and thus not calling {@code dooncomplete()}). this can also happen if the sources are exactly the same length; if source a completes and b has been consumed and is about to complete, the operator detects a won't be sending further values and it will unsubscribe b immediately. for example: <pre><code>range(1, 5).dooncomplete(action1).zipwith(range(6, 5).dooncomplete(action2), (a, b) -&gt; a + b)<\/code><\/pre> {@code action1} will be called but {@code action2} won't. <br>to work around this termination property, use {@link #doondispose(action)} as well or use {@code using()} to do cleanup in case of completion or a dispose() call. <img width=\"640\" height=\"380\" src=\"https: raw.github.com\/wiki\/reactivex\/rxjava\/images\/rx-operators\/zip.png\" alt=\"\"> <dl> <dt><b>scheduler:<\/b><\/dt> <dd>{@code zipwith} does not operate by default on a particular {@link scheduler}.<\/dd> <\/dl> @param <u> the type of items emitted by the {@code other} observablesource @param <r> the type of items emitted by the resulting observablesource @param other the other observablesource @param zipper a function that combines the pairs of items from the two observablesources to generate the items to be emitted by the resulting observablesource @param delayerror if true, errors from the current observable or the other observablesource is delayed until both terminate @return an observable that pairs up values from the source observablesource and the {@code other} observablesource and emits the results of {@code zipfunction} applied to these pairs @see <a href=\"http: reactivex.io\/documentation\/operators\/zip.html\">reactivex operators documentation: zip<\/a> @since 2.0","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns an observable that emits items that are the result of applying a specified function to pairs of values, one each from the source observablesource and another specified observablesource. <p> the operator subscribes to its sources in order they are specified and completes eagerly if one of the sources is shorter than the rest while unsubscribing the other sources. therefore, it is possible those other sources will never be able to run to completion (and thus not calling {@code dooncomplete()}). this can also happen if the sources are exactly the same length; if source a completes and b has been consumed and is about to complete, the operator detects a won't be sending further values and it will unsubscribe b immediately. for example: <pre><code>range(1, 5).dooncomplete(action1).zipwith(range(6, 5).dooncomplete(action2), (a, b) -&gt; a + b)<\/code><\/pre> {@code action1} will be called but {@code action2} won't. <br>to work around this termination property, use {@link #doondispose(action)} as well or use {@code using()} to do cleanup in case of completion or a dispose() call. <img width=\"640\" height=\"380\" src=\"https: raw.github.com\/wiki\/reactivex\/rxjava\/images\/rx-operators\/zip.png\" alt=\"\"> <dl> <dt><b>scheduler:<\/b><\/dt> <dd>{@code zipwith} does not operate by default on a particular {@link scheduler}.<\/dd> <\/dl> @param <u> the type of items emitted by the {@code other} observablesource @param <r> the type of items emitted by the resulting observablesource @param other the other observablesource @param zipper a function that combines the pairs of items from the two observablesources to generate the items to be emitted by the resulting observablesource @param buffersize the capacity hint for the buffer in the inner windows @param delayerror if true, errors from the current observable or the other observablesource is delayed until both terminate @return an observable that pairs up values from the source observablesource and the {@code other} observablesource and emits the results of {@code zipfunction} applied to these pairs @see <a href=\"http: reactivex.io\/documentation\/operators\/zip.html\">reactivex operators documentation: zip<\/a> @since 2.0","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: translate code","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"if(gtn.getchildcount() == 2){ todo: currently we only support two way comparison","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: collection.tostring() will likely not produce any useful output!","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: might not to inherit node, therefore giving statement not required.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: searches need to be performed against the group display name rather than the group key","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this is bad, but not bad enough to shut down the scanner.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"reset yacc settings data so that tests can start at a clean slate. this is sort of hackish... maybe the atlassian integration test api has a way to reset all the data?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo optimized algorhytm's.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"some api weirdness here. when int, range is 0..255. when float, this would be 0..1f","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo(multidisplay): expand to all displays?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(multidisplay): extend to multiple displays. returns the focused window in the following format: windowhashcodeinhexadecimal windowname @param client the remote client to send the listing to. @return false if an error occurred, true otherwise.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: document me","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"todo: allow user to not choose a date (and make the datepicker look a lot better)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"main method to invoke this demo on how to send a message to an azure event hub. @param args unused arguments to the program.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: the refactor","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: do these need to be hooked up for saving as well? currently they just load","classification":"DESIGN","projectname":"namcyan"}
{"comment":"note: did not manage to reproduce cce until i changed expand to use \u2018for (toplevelitem item : items)\u2019 rather than \u2018for (item item : items)\u2019; perhaps a compiler-specific issue?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme: ugly hack, but some services (health) have shapes with names that differ only in the casing of the first letter, and generating classes for them breaks on case insensitive filesystems...","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: optimize me.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"if (event.gettype() != rendergameoverlayevent.elementtype.crosshairs) { return; } fixme: still needed? if so, search for ported way","classification":"DESIGN","projectname":"namcyan"}
{"comment":"in kitkat we can query multiple devices. todo: optimize for stability instead of picking first one","classification":"DESIGN","projectname":"namcyan"}
{"comment":"good idea to log reasons for rejection with the authentication label so testers\/users can understand","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo your code..","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"xxx we cannot allow transferhandler to kill us.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: re-architecturing required","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the org.robolectric.res package lives in the base classloader, but not its tests; yuck.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: for now we're always calling adapt inside score","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: seems buggy because it implicitly combines extendedblockformula and primedcontext.getssa() with pointertargetset of primedblockcontext, is this correct?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo escape special characters","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: add pid to move method","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"maybe we could support concurrent some time in the future","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo:until the listener is set, content writing happens in i\/o thread. if writability changed while in i\/o thread and defaultbackpressurelistener is engaged, there's a chance of i\/o thread getting blocked. cannot recreate, only a possibility.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: get programs for a specific series && seasonid","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: add render code","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"there seems to be a bug in the optimizer of 1.6.0_45 so that the output values are sometimes reordered - dunno why :(","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo - improved error message","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: temp crutch, in testing on mac os x mplayer either terminates immediately or hangs, there is no in-between...","classification":"DEFECT","projectname":"namcyan"}
{"comment":"system.out.println(\"drawrect: dest=(\"+x+\",\"+y+\" \"+width+\"x\"+height+\") thickness=\"+thickness+\" argbtl=\"+integer.tohexstring(argbtl)+\" argbtr=\"+integer.tohexstring(argbtr)+\" argbbl=\"+integer.tohexstring(argbbl)+\" argbbr=\"+integer.tohexstring(argbbr)); fixme: no gradients on framed rects yet...","classification":"DEFECT","projectname":"namcyan"}
{"comment":"system.out.println(\"drawoval: dest=(\"+x+\",\"+y+\" \"+width+\"x\"+height+\") clip=(\"+clipx+\",\"+clipy+\" \"+clipw+\"x\"+cliph+\") thickness=\"+thickness+\" argbtl=\"+integer.tohexstring(argbtl)+\" argbtr=\"+integer.tohexstring(argbtr)+\" argbbl=\"+integer.tohexstring(argbbl)+\" argbbr=\"+integer.tohexstring(argbbr)); fixme: no gradient for framed ovals","classification":"DEFECT","projectname":"namcyan"}
{"comment":"system.out.println(\"drawroundrect: dest=(\"+x+\",\"+y+\" \"+width+\"x\"+height+\") clip=(\"+clipx+\",\"+clipy+\" \"+clipw+\"x\"+cliph+\") thickness=\"+thickness+\" arcradius=\"+arcradius+\" argbtl=\"+integer.tohexstring(argbtl)+\" argbtr=\"+integer.tohexstring(argbtr)+\" argbbl=\"+integer.tohexstring(argbbl)+\" argbbr=\"+integer.tohexstring(argbbr)); fixme: no gradients on stroked shapes","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: we could add these for other os's, as gstreamer is cross-platform. directshow:","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: should i look at the onedrive entry first? the onedrive key from the web is different from mine.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo https: github.com\/trinodb\/trino\/issues\/12469 support column comment when creating tables","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the testpoint was within the shape. was that intended?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the testpoint was outside the shape. was that intended?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: need lightweight approach (start)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: need lightweight approach (end)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"note that that this could be a double byte character set - bug report by masafumi watanabe","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: figure out if we got io because of a missing dispatcher","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: refactor this code into requestparser implementations","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this is weird: the calling thread has _also_ been interrupted.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"if they overlap or gap is less one quarter timeunitlength todo: 1\/4 factor is arbitrary. review! -jm","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: exception when no worksheet present todo: make worksheet number configurable\/import all worksheets?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"xxx: what about empty document","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo replace with nbpreferences.formodule()","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: switch expression candidate!","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo capitalize first char??","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"xxx add more if requested","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: callback after mvn package done. important","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(plamenko): this check should not be necessary, but otherwise some tests fail due to filehashloader throwing nosuchfileexception which doesn't get correctly propagated.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: add error handling","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: alternatively could use the same app wide if want only one entry in notifications","classification":"DESIGN","projectname":"namcyan"}
{"comment":"if there is only one node, then we would fall through the for loop, so we just copy over all nodes in the cfg here. todo: don't copy paste","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: set up your sample input object here.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo ??? need to create a new tezconfig ???","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: inject code and configuration for automatic histogram generation","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"this is testing a work-around for a xerces bug http: nagoya.apache.org\/bugzilla\/show_bug.cgi?id=27583 that reports this as an ioexception rather than a saxexception","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo get error message from processor","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: draw a game over message feel free to get more creative with this screen. perhaps you could cover the screen in enemy robots?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: flush transport","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo more browser should be supported","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"same issue as below, its in mushroom kingdom so maybe the maps are just outdated or w\/e","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo need implementation i think @param comments @return","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(bazel-team): support \\x escapes","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"bug workaround: webview crashes when dropdown is shown on a nougat emulator. haven't tested on other devices.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: fill this","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: overwrite","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"xxx: if the range requested is a token range, we'll have to start at the beginning (and stop at the end) of the indexed row unfortunately (which will be inefficient), because we have no way to intuit the smallest possible key having a given token. a potential fix would be to actually store the token along the key in the indexed row.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"flaky: org.junit.assert.fail(\"expected exception of type java.io.ioexception; message: too many redirects occurred trying to load url null\");","classification":"DEFECT","projectname":"namcyan"}
{"comment":"due to the application of distance decay functions, we may want to make the shift to non-integer accessibility values (especially for cases where there are relatively few opportunities across the whole study area). but we'd need to control the number of decimal places serialized into the json.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"adds a warning if a {@link produces @produces} method is declared nullable. todo(beder): properly handle nullable with producer methods.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"method \"fillcolumnsets\". todo scorreia this method has not been tested yet!! @param <t> the type of elements to find (either table, view, columnset) @param catalog the catalog if the tables are stored directly in catalog (or null) @param schema the schema if the tables are stored directly in schema (or null) @param output the list of searched elements (tables, tdtables....) @param tclassifierid the the classifierid of the searched elements (e.g. {@link relationalpackage#td_view}) @return true if elements have been found and potentially added to the output list.","classification":"TEST","projectname":"namcyan"}
{"comment":"todo: return a more native datastructure! string predictions = trainedmodels.vgg16.decodepredictions(output[0]); log.info(\"image predictions: {}\", predictions);","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: the message key routing is problematic at this moment. https: github.com\/apache\/incubator-pulsar\/pull\/1029 is fixing that.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo when fully implemented, this will contain currentyear variable from annual report. todo create end of game report showing total game statistics. use annual report format but bring in stats from every year.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: revisit the cache size after running more storage tests. todo: figure out how to ensure extservices has the permissions to call storagestatsmanager, because this is ignoring the cache...","classification":"DESIGN","projectname":"namcyan"}
{"comment":"\"application\/logplex-1\" does not conform to rfc5424. it leaves out structured-data but does not replace it with a nilvalue. to workaround this, we inject empty structured-data.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"returns the bit size of a given curve. todo(bleichen): add all curves that are tested.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"bind app-specific pages todo - implement pages","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"xxx note: this assumes that the reference of the generator value does not change!","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: return a send intent if no one to email to, to at least populate a draft email with the subject (and no recipients).","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"return the biome which should be present at the provided location. <p> notes: <p> this method <b>must<\/b> be completely thread safe and able to handle multiple concurrent callers. <p> this method should only return biomes which are present in the list returned by {@link #getbiomes(worldinfo)} <p> this method should <b>never<\/b> return {@link biome#custom}. @param worldinfo the world info of the world the biome will be used for @param x the x-coordinate from world origin @param y the y-coordinate from world origin @param z the z-coordinate from world origin @return biome for the given location","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"already have the headers, have to skip the headers in the content array and return the body. xxx - it seems that some mail servers return slightly different headers in the retr results than were returned in the top results, so we can't depend on remembering the size of the headers from the top command and just skipping that many bytes. instead, we have to process the content, skipping over the header until we come to the empty line that separates the header from the body.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"xxx - should check for read-only folder?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"note: this isinvalid() check works around https: issuetracker.google.com\/issues\/124511903","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: determine which corner i should use","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo make sure this doesn't break anything","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo do we still want this to be configurable?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo add a method to read a single transfac matrix","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: voir comment le nommer. voir si le deplacer dans une autre classe","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo change system.exit(1)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: make it so collectors don't pick up items which can't be sold","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo use this if printing is not desired for ( set< owlaxiom > justification : justifications ) { java 8: justification.removeif( ( owlaxiom a ) -> { return a.isoftype( axiomtype.tboxandrboxaxiomtypes ) } ); java < 8 (there is probably a better way even then): for ( iterator< owlaxiom > it = justification.iterator(); it.hasnext(); ) { owlaxiom a = it.next(); if ( a.isoftype( axiomtype.tboxandrboxaxiomtypes ) ) { it.remove(); } } return_justifications.add( new justification( justification ) ); }","classification":"DESIGN","projectname":"namcyan"}
{"comment":"3 - alternative : bind fields instances that need validators manually and then bind all remaining fields using the bindinstancefields method this.binder.bindinstancefields(this.formlayout); automatic data binding bindinstancefields matches fields in domaineactivite and domaineactiviteview based on their names.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"3 - alternative : bind fields instances that need validators manually and then bind all remaining fields using the bindinstancefields method this.binder.bindinstancefields(this.formlayout); automatic data binding bindinstancefields matches fields in rubrique and rubriqueview based on their names.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"nre: todo: why not guess by extension?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo : return access token and id token to framework","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"normalize genomic location: 1. convert vcf style start,end,ref,alt to maf by looking for common prefix. (todo: not sure if this is always a good idea) 2. normalize chromsome names.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: expand coverage","classification":"TEST","projectname":"namcyan"}
{"comment":"no idea what to do here","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"classdoc.findclass has this bug that we're working around here: if you have a class packagemanager with an inner class packageinfo and you call it with \"packageinfo\" it doesn't find it.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: replace this with a promotion lookup.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo figure out the way how to do interruption better (during iteration)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: use the new widgetutils.showerrortouser method.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: the max time this can take is actually n * timeout. consider fixing this.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: since we just sorted by x, we can optimize this a bit.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: also check maxwidth against the amount by which this would underflow the x=0 line","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: make this customizable","classification":"DESIGN","projectname":"namcyan"}
{"comment":"to fix paddle going off the screen","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo(anand): synchronize on `state` instead.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo code application logic here cria o objeto scanner","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"a checking on permissions-string attribute has been made because it is applicable for both rns and byteio. a thorough testing on all attributes will be an overkill.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: why doesn't this work? reader in = src.getcharacterstream();","classification":"DEFECT","projectname":"namcyan"}
{"comment":"figure out what to return todo: decide on a more robust communication method","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo remove after testing","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: make connection options configurable","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this does not get the correct result and rerquires a kludge which could fail anytime @param image @param threshold @return","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: 04\/10\/2020 should be uni","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: use \"advanced probabilistic techniques\".","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: make this method shorter, less than 100 lines","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: replace with login","classification":"DESIGN","projectname":"namcyan"}
{"comment":"system.err.println(\"couldn't find \" + statname); todo: should we just exit if no mean?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"17-aug-2015, tatu: as per [databind#903] this is bit problematic as serializerprovider instance does not currently hold on to generator...","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: right now we only dispatch events at individual flowentry level. it may be more efficient for also dispatch events as a batch.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo this will be implemented in the next version","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: support media types, not, and only. skipping for now","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo consider use list with initial cap size","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: at to get access to the cubelist and childmodel or not bother given we have already converted things public static voxelshape getshapefrommodel(modelrenderer... models) { return getshapefrommodel(false, models); } public static voxelshape getshapefrommodel(boolean print, modelrenderer... models) { list<voxelshape> shapes = new arraylist<>(); for (modelrenderer model : models) { shapes.add(getshapefrommodel(print, model)); } return voxelshapeutils.combine(shapes); } public static voxelshape getshapefrommodel(boolean print, modelrenderer model) { list<voxelshape> shapes = new arraylist<>(); for (modelbox box : model.cubelist) { shapes.add(voxelshapeutils.getslope(box.posx1, box.posy1, box.posz1, box.posx2, box.posy2, box.posz2, model.rotationpointx, model.rotationpointy, model.rotationpointz, model.rotateanglex, model.rotateangley, model.rotateanglez, print)); } if (model.childmodels != null) { for (modelrenderer childmodel : model.childmodels) { shapes.add(getshapefrommodel(print, childmodel)); } } return voxelshapeutils.combine(shapes, false); }","classification":"DESIGN","projectname":"namcyan"}
{"comment":"probably incorrect - comparing object[] arrays with arrays.equals","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo change the file location\/name according to your needs","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo register other modules via method calls?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo support string length?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"## todo: use location to select more specifically (in java 9+ with the location's module)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(b\/199889259): consider optimizing this for fastinit mode.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"requesting size of the document root. todo(danilatos\/anorth) this would change if we have multiple roots.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo replace by font.monospaced with jdk 6","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: put safe grabbing of age here","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo rework when new instance name is ready","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: check for circular references. we need to know which variables were substituted to do that","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo : need to implement. first need to figure out a way to hide the credentials dialog.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: put the \"options\" from the \"queryfield\" picklist into a config file. this list matches the \"options\" from the \"queryfield\" picklist on unformattedsearch.ftl, without the \"date\" fields.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"returns the index of the entry whose extracted value matches the given target, or -1 if no matching entry is found. note that if multiple matching entries exist, the returned value is specified by inclusionmode instead of being undefined. todo: reconsider whether this should be hidden from view @param target the value sought @param mode controls which index to return if multiple matching entries are found @return the index, or -1 if none are found","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo consider mulitdimensional arrays","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo similar to equijoin, but not subtracting joincolumnslength","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo either pr bytebuffer support into actson, or sneaky-access the underlying byte array fields here","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo check if it is called in a constructor","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: need to verify the denominator to be used in this formula. i was not able to understand this from the document","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo path never appears to be visited. consider removing.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo create methods that return the equivalent java type","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo go to wpilib source code for meccontrolcommand and see how they use this feedforward and then use that in the mecdrivetrain.setspeeds() method mecdrivetrain.getmecfeedforward(),","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: consider using viewpoint adaptation","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: this could actually be true with low probability","classification":"DEFECT","projectname":"namcyan"}
{"comment":"since ratios are sorted, we send in ordered array of corresponding standard values todo: make more robust","classification":"DESIGN","projectname":"namcyan"}
{"comment":"transitions from boundary event timers should be included as well todo: make generic","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: use some sort of map instead","classification":"DESIGN","projectname":"namcyan"}
{"comment":"computes the average chaining distance, the average length of a path through the given set of points to each target. the authors of cof decided to approximate this value using a weighted mean that assumes every object is reached from the previous point (but actually every point could be best reachable from the first, in which case this does not make much sense.) todo: can we accelerate this by using the knn of the neighbors? @param knnq knn query @param dq distance query @param ids ids to process @param acds storage for average chaining distances","classification":"DESIGN","projectname":"namcyan"}
{"comment":"sorts the entries of the specified node according to their minimum distance to the specified object. @param node the node @param q the query object @param distancefunction the distance function for computing the distances @return a list of the sorted entries todo: move somewhere else?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"turn on crunch runtime error catching. todo: allow configurable","classification":"DESIGN","projectname":"namcyan"}
{"comment":"do work here @param v1 @return","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo what do?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: the timings here will be inaccurate on slow systems.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"not sure what to do here","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo - make upload alliances so we can uncomment this controller.btnuploadalliances.setdisable(false);","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"change the current msg-->different page has different topic todo: may use '#' to receive all msg, and different listener to select the topic they need","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo add your handling code here: jtextfield1.settext(\"\");","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"need to re-create the piggybacklist & set container, some refactoring should be done here","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo consider showing actual source code instead of just types and names","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: these could be optimised","classification":"DESIGN","projectname":"namcyan"}
{"comment":"bug fix: always use the preferred size for the client. viewsize = viewport.getviewsize();","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo cambiar el segundo par\u00e1metro cuando podamos distinguir entre ficheros de varias configuraciones","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: actually implement barrier contract","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo figure out what to do with build info","classification":"DESIGN","projectname":"namcyan"}
{"comment":"use a predefined list of known tokenizers todo: publish more tokenizers... (when they are ready\/good enough\/abstract enough)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: it'd be nice to only do this if the changed entrie(s) match the current operator.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"we could use the variable's bounds, but that won't work if there are multiple. having a raw type that's more general than necessary is okay","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo remove the cancel button. should only be yes and no.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this is a bizarre condition! hopefully the implementation is correct. see vm spec, 2nd edition, chapter 6, in the definition of invokespecial.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(chloe): do something else in this case?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"note: do not change method","classification":"DESIGN","projectname":"namcyan"}
{"comment":"failed to create directories... should probably let this crash","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: set working dir","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo pass anything.may be object needed?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: generated by frameweb. should be documented.","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"todo: maybe create a map from datapoint id to comobject????","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: maybe create a map from datapoint id to comobject???? @formatter:off","classification":"DESIGN","projectname":"namcyan"}
{"comment":"we might be close to the north pole. this would be bad, numerically. so perform a 180 degree rotation around the x-axis, project that point, and swap the entries of the result.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"1. escape early if we can't find the local mailbox todo smaller projection here","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: cut the text if it is too long","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo what happens if the network connection dies? we've got partial messages with incorrect status stored.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo how to react to failure status of dcevstatus of cablecheckreq? todo we need a timeout mechanism here so that a response can be sent within 2s the dcevsestatus should be generated according to already available values (if evseprocessing == ongoing, maybe because of evse_isolationmonitoringactive, within a certain timeout, then the status must be different)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: try to come up with a generic way of implementing this","classification":"DESIGN","projectname":"namcyan"}
{"comment":"skip framework (todo: add more fws)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"starts this service to perform action foo with the given parameters. if the service is already performing a task this action will be queued. @see intentservice todo: customize helper method","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"starts this service to perform action baz with the given parameters. if the service is already performing a task this action will be queued. @see intentservice todo: customize helper method","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: at a production level, accept an enum of species with predefined groups, and map with corresponding options todo: cleaner way of adding titles and ids","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo not just randomly select a tile to mark","classification":"DESIGN","projectname":"namcyan"}
{"comment":"ugly dp @param n @return","classification":"DESIGN","projectname":"namcyan"}
{"comment":"to do: code goes here.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: account for assembly attributes","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: account for true, false, ||, &&, ==, !=, !","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"now we have to decide which table will be in which sheet the cleanest way is to have a table per sheet todo make this variable so more messy version are possible","classification":"DESIGN","projectname":"namcyan"}
{"comment":"calc_total(); todo add your handling code here:","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"orderform.setvisible(true); todo add your handling code here:","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: based on connections","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme resolution error","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: can we guarantee that the refcount var is available in the current scope?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: this could fail if an equals number of additions and removals happened within one second.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: make ios_iphone subclass","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: notify user when the state of the gps resource is disabled. use one icon on action bar?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(dalecurtis): we may want to drop transient errors here.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(qinmin): may need to report the error to the caller. crbug.com\/356498.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"ignores the service worker payment apps in weblayer until todo(crbug.com\/1224420): weblayer supports service worker payment apps.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(lazzzis): remove log after bookmark sync is fixed, crbug.com\/986978","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(crbug.com\/948518): this is a band-aid fix for not crashing when undo the last closed tab, should remove later. @return whether filter should notify observers about the setindex call.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: see if we can be more error-tolerance","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: center the spinner horizontally remove the spinner","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"uses the passed path elements (resolved) to try to select the best of the possible trails. returns null only if nothing matches at all. best-effort. <p> todo: review: the possibility of each path elem matching multiple category ids makes this extremely complicated; so we ignore the specific implications and just match as much as possible. <p> for a trail to be selected, it must \"end with\" the pathelems; after that, the best trail is one that has smallest length.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"return all paths from the given topcategoryids to the product. <p> todo?: perhaps can cache with utilcache in future, or read from a cached category tree.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"return all paths from the given topcategoryids to the category. <p> todo?: perhaps can cache with utilcache in future, or read from a cached category tree.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: empty for now, later may pick up from xml control file.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"add column for the array (since the store needs a name to reference it by) todo extract this block out and reuse it","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: can't we just use the original set?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"to do add link in email","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: we should pool this and make it configurable or something","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo support specified height\/width\/alignment","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo add remove operation support.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(ulfjack): consider acquiring local resources here before trying to write the file.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"this unit-test class is the wrong place to test that behaviour, unless it becomes an integration test given","classification":"TEST","projectname":"namcyan"}
{"comment":"todo: would it make sense to return buffers asynchronously?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: this could be done out of the lock, we only need to take the blocks out.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo astutils.getclassfilesforsource(f.tostring()); - attempt to get only relevant classpaths for a given source file? todo naively we can multi-thread here (i.e. per file) but simple testing indicated that this slowed us down.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"get the line number corresponding to the specified vertical position. if you ask for a position above 0, you get 0; if you ask for a position below the bottom of the text, you get the last line. fixme: it may be faster to do a linear search for layouts without many lines.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo handle allocation size","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"do not use getclass() here... a typical weld issue...","classification":"DEFECT","projectname":"namcyan"}
{"comment":"xxx else ignore for now but we could save into some default location","classification":"DESIGN","projectname":"namcyan"}
{"comment":"bug 4933099: there is some funny-business to deal with when this method is called with a window instead of a frame. see 4836744 for more information on this. one side-effect of our workaround for the problem is that the owning frame of a window may end up getting resized during the fullscreen process. when we return from fullscreen mode, we should resize the frame to its original size (just like the window is being resized to its original size in graphicsdevice).","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo vt need to think how to send id to observers","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo[beam-9179] add conversion code for array and row types","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo add your handling code here: new viewordemservico().setvisible(true);","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"not filled in yet? why is this code different to the interface case?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"bug # 3228185 may be a new object from a parent unit of work, let's check our new object in parent list to see if it has already been registered locally","classification":"DEFECT","projectname":"namcyan"}
{"comment":"bug 4568370+4599010; fix entitymanager.remove() to handle new objects","classification":"DEFECT","projectname":"namcyan"}
{"comment":"bug 270413. this method is needed to avoid the class cast exception when the reference mode is weak.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: figure out how to query supported vpx resolutions. for now, restrict to standard definition streams.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: record total snapshot processing time? simply insert into feeds table (no need for table creation) because making a snapshot presumes that the feeds table already exists.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: we assume that every node has attributes, may be wrong","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: due to the way we implement resolveincludes(), now we need to change findviewbyid.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixed: this is wrong for the case group item -> menu -> item continue;","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme(tony): this is an \"approximation\".","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme(tony): this is an \"approximation\"","classification":"DEFECT","projectname":"namcyan"}
{"comment":"hailong: add hint support","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: after cloning, targetparam.fieldref is null","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: naive linear search of the token map","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: add exception handling (at least some logger)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"prepare the layout parameters for the edittext todo: consider caching the layout params and only changing the spec row and spec column","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"when server receives a request with unknown session_id it must recognize that as request for a new session. when server opens a new session it must immediately send an frame containing a letter o. <\/p> note: this test may periodically fail as we're relying on a multicore processor an non-blocking io being reliable. this isn't ideal as tests should be determinate! @throws executionexception @throws interruptedexception","classification":"TEST","projectname":"namcyan"}
{"comment":"note: alert must be (re-)created everytime, otherwise the following hack doesn't work!","classification":"DESIGN","projectname":"namcyan"}
{"comment":"hacky assert but we know that this mockserver will create an exception that will be logged, if there's no log entry then there's no exception, which means that getcredentials didn't get called on the fetcher","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: translate url?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo lock sessions to prevent fetching an expired session?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo idea: recognise links that return promising representations","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo unit test, document, cleanup","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"todo: allow fieldtype to provide impl.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: kubevirt currently have only kubevirt_vmi_vcpu_seconds, which is total cpu time, so we are setting it here only as system time, which is wrong.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo add your handling code here: joptionpane.showmessagedialog(null,evt.paramstring());","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"if we don't have a decoder yet, we need to instantiate one. todo: add support for dynamic switching between one type of surface to another.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"this method tests accessing the dbpedia linked data service, which uses virtuoso and delivers rdf\/xml as well as text\/turtle. @throws exception @todo find a better way to deal with errors actually in the services and not in the code","classification":"DESIGN","projectname":"namcyan"}
{"comment":"note: painting code, cannot test","classification":"TEST","projectname":"namcyan"}
{"comment":"todo add type variable to allow dates, etc","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo set last message time","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"if we visit the board stop multiple times, board at the one closest to the alight stop todo better handle duplicated stops\/loop routes","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo consider whether it is always necessary to fetch the entitlements","classification":"DESIGN","projectname":"namcyan"}
{"comment":"writing by different connector that we are going to use for reading: danger of quantum effects","classification":"DESIGN","projectname":"namcyan"}
{"comment":"last checked card this turn is no longer exiled, so you can't cast another with this effect todo: handle if card was cast\/removed from exile with effect from another card. if so, this effect could prevent player from casting although they should be able to use it","classification":"DEFECT","projectname":"namcyan"}
{"comment":"this listener hides the popup when the focus is lost. it also repaints when focus is gained or lost. this override is necessary because the basic l&f for the combo box is working around a solaris-only bug that we don't have on mac os x. so, remove the lightweight popup check here. rdar: problem\/3518582","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo this test works if we assume most recent version wins, but semantics tbc","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo unsubscribe from everything? and resubscribe on resume?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo want to use classloader = mgmt.getcatalog().getrootclassloader();","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo rental add filter by owner repository to use the new filters","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: test with file that has bom todo: test with file that has multiple bytes for the last codepoint todo: test with file that requires a surrogate pair for the last codepoint","classification":"TEST","projectname":"namcyan"}
{"comment":"todo switch s and w","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo un hardcode this","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo display readings in mg\/dl","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo display readings in mmol\/l","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"if we are looking for public attributes, they need to match with the attributes model, otherwise we just point to the node cell model (idea: maybe in the future point to the internal model)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"checks is the given text line starts with a reference anchor like \"[1]\", \"[2]\", etc. @param line the text line to check. @return true, if the given text line starts with a reference anchor, false otherwise. todo: move to any util.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"toppart.add(playback).padleft(6).left(); todo: add this back when we can support","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: change to a better test of containment?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme: not supported session.setjdbcbatchsize(worlds.size());","classification":"DEFECT","projectname":"namcyan"}
{"comment":"implement below code if token is send to server","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo send to background","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"this is to fix a bug in the v7 support lib. if there is no options menu and you hit menu, it will crash with a npe @ android.support.v7.app.actionbarimplics.getthemedcontext(actionbarimplics.java:274) this can safely be removed if we add in menu options on this screen","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo deserialize the lambda block...","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"get the rank (index) for all set bits up to just before the given rankposition in the block. the caller is responsible for deriving the count of bits up to the docid target from the rankposition. the caller is also responsible for keeping track of set bits up to the current block. important: this only accepts rankpositions that aligns to {@link #rank_block} boundaries. note 1: use {@link #denserankposition(int)} to obtain a calid rankposition for a wanted docid. note 2: the caller should seek to the rankposition in the underlying slice to keep everything in sync. @param rankposition a docid target that aligns to {@link #rank_block}. @return the rank (index \/ set bits count) up to just before the given rankposition. if rank is disabled, -1 is returned. todo: this method requires a lot of knowledge of the intrinsics of the cache. usage should be simplified","classification":"DESIGN","projectname":"namcyan"}
{"comment":"all operations on strategy should be synchronized (?)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"show information related to program version. @param showprogramversion true to show program version @return this todo remove","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"show information about all pixel formats supported by ffmpeg. @param showpixelformats true to show pixel formats @return this todo remove","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo pick iteration and pod at random","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: a smart way to get which location is most relevant.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"warning : use synchronized. is it possible to reduce the blocking part ?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo add your handling code here: instanciar a tela cad pessoa apenas uma vez","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"putall doesn't work in older versions (so we use new client) - that is a different issue completely","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme do we have to do the following when we leave the room?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the externalencodingidtarget has changed since accept last run; perhaps we should request a keyframe.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"we're screwed if this thing has more than one crl, because the \"indeof( (char) 65533 )\" below isn't going to work.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: we generate this query as in ingres db documentation, but unfortunately ingres don't support it","classification":"DEFECT","projectname":"namcyan"}
{"comment":"x todo implement!","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo fill this with the necessary business logic","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"select a single drop from the `df-dragon-drops` loot set. todo: actually, multiple drops should be supported, once beastmaster supports deferred item drops.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo auto-generated method stub, to be implemented by parser","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: lookup type of fuel and get data from there","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"i know tests need to be independent but not sure how else to do this","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo change!!!","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the reply.pack() statement maps the semantic type of the reply converter, which results in a concurrent update if the client unpacks the response with the same database. the following commit prevents this. however, it is a suboptimal fix for this problem.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: implement disconnect and reconnect to postgresql instance.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: refactor with if\/else","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo currently support only dexes, here is how to do for jar todo https: github.com\/adamheinrich\/native-utils\/blob\/master\/nativeutils.java","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo refactor me and make me pretty","classification":"DESIGN","projectname":"namcyan"}
{"comment":"0. write dividend dates to dividend array todo: implement array","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo check if on edge of map - breaks if we're on the pixel right next to the edge.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: explore a more relaxed locking strategy.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: this test fails if run during standard time instead of dst. the time is off by one hour.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"bug fix for not picking up file name text.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: note that not all reads actually cover a given var","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo error handling, 429 handling","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: check & refactor this get tree","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo here i define the order for which i want the videos to play. could try diferent ordering for the playlists for now it just accepts the gridadapter selected array order","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo do not use linear search?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"no need to use the run method here since the contructor is supposed to start the server on its own todo: allow passing additional arguments from the command line:","classification":"DESIGN","projectname":"namcyan"}
{"comment":"wait (spin) until threads turn and no one is reading todo: if a key gets deleted, i think clientrequests.get(key) would no longer work","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: make this way more safe","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: detect if already have a gradle setup todo: later, use always same and symlink if possible to save time","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: error","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fix for bug 24695 according to jaxp 1.2 specification if a saxsource is created using a sax inputsource the transformer or transformerfactory creates a reader via the xmlreaderfactory if setxmlreader is not used","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo:: change icon based on action. if playing, equalizer icon, pause pause-icon etc","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"this is important: blank uris (and this happens; eg. a tag <meta property=\"sameas\" datatype=\"xsd:anyuri\" \/> will yield a blank value for \"sameas\"!) would get filled in without this check; eg. a \"\" value would become \"http: localhost:8080\/en\/\" by default and this is bad! (eg. for sameas properties)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this does not work: pronouns, receptionist, etc... there can be source documents without meta data. in that case, there are no triples for in triplemapgrasp with this subject but it is still a document the next hack checks for upper case characters in the uri if they are present, we assume it is somebody otherwise we assume it is a document and we assign it to the meta string if (cite.tolowercase().equals(cite)) { no uppercase characters cite = meta; }","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: support for tabs?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: issue a:\u5916\u9762\u5982\u679cobservableon \u5176\u4ed6\u7ebf\u7a0b,\u5c06\u4f1a\u662f\u5f02\u6b65\u64cd\u4f5c,\u5982\u679c\u5728\u5b9e\u9645\u7684onnext\u8c03\u7528\u4e4b\u524d,\u53d1\u751f\u4e86oncomplete\u6216\u8005onerror,\u5c06\u4f1aunsubscribe,\u5bfc\u81f4onnext\u6ca1\u6709\u88ab\u8c03\u7528","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo implement me, pls :(","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: fix how this is rendering in xml","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo auto-generated method stub first populate, then call super","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo resolve queue with single element","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: make data listen to this so that we don't need this call","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: this is designed for cts mode, for other modes this routine code has to be changed so that we don't have to read the entire stream, we have to compute what the iv should be at this point in time in cts mode","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(ross): this should take in a list of who we are comparing againt, not just use the current pool...","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: !!! make handler implement the dialoginterface.onclicklistener.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo use scheduled task to implement timeout","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: this may need to change","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo refactor logic select direction","classification":"DESIGN","projectname":"namcyan"}
{"comment":"wtf another google bug?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: update this logic to also handle the user logged in by email.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme test failures","classification":"TEST","projectname":"namcyan"}
{"comment":"todo: need to work on layout algorithm... believe we can do better, but don't have a decision on the best speculative results yet. @test","classification":"DESIGN","projectname":"namcyan"}
{"comment":"not work, maybe only in android junit test.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: make this more efficient","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo code application logic her hola onasis","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"workaround to register this test as covering some part of the testee. static variable access does not currently register as coverage . . .","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"windows98 has what appears to be another 4 0's followed by the share name as a zero terminated ascii string \"\\tmp\" + '\\0' as is this works, but it deviates from the spec section 4.1.6.6 but maybe i should put it in. wonder what nt does?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: manage mem if needed","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo send email here","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: choose appropriate parser based on response ct","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"ignore io exception, what are we going to do anyway?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo implement a method","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo insert preface","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"a method to build an exp4j expression for a formula object, given that a valid formula equation was input by the configuration file. @throws an exception if _formulaequation cannot be parsed. @return ? todo: add exceptions for nulls, bad ins, w.e.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo add your handling code here: guestsearch guestsearch = new guestsearch(jframeinstance, email); jframeinstance.changepaneltospecific(guestsearch);","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo see if necessary","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"tests that pressing the app button on the daydream controller exists voice input mode. this would fit better in vrbrowsercontrollerinputtest, but having it here allows code reuse.","classification":"TEST","projectname":"namcyan"}
{"comment":"todo: come up with a better implementation of this later","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo make all other tags contextual tags here. for now we take only the counterpart tag of the current learning process: (opening\/closing tags)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: decide if we want to support someone replacing our fluid handler with another? if it isn't one of our fluid handlers fail","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"tbd code to place the wobble goal","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"this hurts my soul","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: andrus, 4\/28\/2006 - actually we need to analyze preloaded classes and see how they were annotated to choose the right access type...","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: andrus, 4\/30\/2006 implement this; note that instead of checking for \"attribute.getjoincolumns().isempty()\" above, we'll have to match individual columns","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: display err message in gui","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"prior to fix, this was throwing stringindexoutofboundsexception","classification":"DEFECT","projectname":"namcyan"}
{"comment":"\u83b7\u53d6\u767b\u8bb0\u53f0\u7b7e\u5b57 @author fuxin @date 2017\u5e7412\u670828\u65e5 \u4e0a\u534812:20:22 @description todo @param childvaccinaterecord @param maplist @param code","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"drawing the image of the world and assign on the imageviewer in the gui not very fast, can be improved...","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: get path while textpath is set.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: we don't break the above loop if something fails to parse, so it gets reset every account, do we want to break out of processing accounts and rollback if there are errors?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"how about we update the job exec time when the job starts???","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: return genre map","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"import the image data into 1d arrays : to do","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"need a method in the owl api to get annotation by uri...","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"should we wait for the interface to be unregistered?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"maybe we could handle java.lang === java.lang.reflect as well ?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo lises support option to use union of all statspecs","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"kirk: this test fails intermittently with bug 37482","classification":"TEST","projectname":"namcyan"}
{"comment":"kirk --> this fails on balrog occasionally","classification":"TEST","projectname":"namcyan"}
{"comment":"@todo lises move this check into valuecomparator, for future averaging, make valuecomparator accept a list of tests","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo tuple assignment is not yet supported: assertrejected(new proxywhitelist(), \"new java.util.linkedlist java.util.collection\", \"string[] a = ['v']; def (linkedlist x, int y) = [a, 1]; x\"); assertevaluate(new staticwhitelist(\"new java.util.linkedlist java.util.collection\"), arrays.aslist(\"v\"), \"string[] a = ['v']; def (linkedlist x, int y) = [a, 1]; x\");","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: check min and max are sensible?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"does not work in tests","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo[nik] implement?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"tbd: networkofferingid and zoneid. send uuids instead.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: some auto handling here?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"this is kinda bad, but if we don't wait a bit, the client will never answer the second handshake!","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo use .equals() once we ahve overridden appropriate methods","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(beam-4681): add support to flink to support portable timers.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo - cleanup redundancies","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"this is really testing how the nonproductionconfig works - how can this be targeted to the init config?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo - add fuller set","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: copy header file inclusion","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: this is the case of blendmodes and scalemodes","classification":"DESIGN","projectname":"namcyan"}
{"comment":"we might even consider updating the user-supplied file, if any...","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo add your handling code here: jtextfield id = new jtextfield();","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: better way for run manager to get dependencies so he can be tested. (and better ways of creating his objects)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: if (expression.contains(\"setb\")) return settertype.builder;","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo add\/remove tag to invoice","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: connect","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo check token is valid or refresh token from server?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo [bruce] pass a reference to the cache or region down here so we can do this test assert.asserttrue(!cache is closed, \"chunking interrupted but cache is still open\");","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo insert code for assignment 5.2.a","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo insert code for assignment 5.2.b","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo insert code for assignment 5.2.c","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: find better raw contact delta just select an arbitrary writable contact.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: complete decode calls using bye array data","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: throw a subclass of certificateexception which indicates a pinning failure.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"get the status (tag) values from the break rule(s) that determined the most recently returned break position. the values appear in the rule source within brackets, {123}, for example. the default status value for rules that do not explicitly provide one is zero. <p> todo: not supported for dictionary based break iterator. @param fillinarray an array to be filled in with the status values. @return the number of rule status values from rules that determined the most recent boundary returned by the break iterator. in the event that the array is too small, the return value is the total number of status values that were available, not the reduced number that were actually returned. @draft icu 3.0 @provisional this api might change or be removed in a future release.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo not supported by web component at time of writing return f.isrequiredindicatorvisible();","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo not supported by web component at time of writing f.setrequiredindicatorvisible(v);","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo not supported at time of writing getcomponent().setrequiredindicatorvisible(required);","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: replace this code with calls to the module now","classification":"DESIGN","projectname":"namcyan"}
{"comment":"hacky way to get the newly added obs and make tests on it","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: implement something funny.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(bazel-team): pass framework search paths to xcodegen.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo consider sharing countrycode tag objects","classification":"DESIGN","projectname":"namcyan"}
{"comment":"once implemented artemis-194, we need to set the storedsequenceid here somehow we have different semantics on artemis journal, but we could adapt something for this tbd during the implemetnation of artemis-194","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: add functionality for edit button","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"npe fix. for some reason under heavy load redis can return null records.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: unify this exponential + binary search with the bytes needed function above","classification":"DESIGN","projectname":"namcyan"}
{"comment":"not used yet","classification":"DESIGN","projectname":"namcyan"}
{"comment":"probably a memory leak","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo refresh current bookmark if not same","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"should we show the replacement as just r.string.foo or context.getstring(r.string.foo) ?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"wait for the active workarea fixme this should use an event listener to wait for the workarea","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: simultaneously search what is filtered and filter what is searched","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"metodo para compartir el anuncio a traves del email @param email @param model @param authentication @param req @param flash @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: fix to compare provided eventdate and reproductivestate with data from fna","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo\uff1awrite your code here","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(nathanridge): this won't work with multiple inheritance, since 'fieldpos' is a field position in the base class' hierarchy, while values[] expects as index a field position in classtype's hierarchy.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo - at this time, we purely delegate blindly in the future, we may need to delegate based upon context provided","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"keep checking if the user exited from replayactivity or not todo find a better way stop the tests immediately without continues checking","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: alternatively we can just take a json string here and pass that directly to the ffi for librgb","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo 1: write code to make a new array that can hold a new score","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"create a document from the given text. todo: explain the parsing process @param text @param window @return","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"swap blue\/red channel? why do i need to do this?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: pull this method up to be used in other factories.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: refactor this test so that it does not depend on the actual line numbers of this file","classification":"TEST","projectname":"namcyan"}
{"comment":"todo add your test code below by replacing the default call to fail.","classification":"TEST","projectname":"namcyan"}
{"comment":"todo: also delete corresponding audio files (only those that are no longer used)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"what can we do in this case :(","classification":"DESIGN","projectname":"namcyan"}
{"comment":"evaluates if the normalized questions contains the words of the question asked and returns the amount of words found. todo i don't know if this is sloppy or it should work like this @param questionasked the question to compare. @return the amount of words of questionasked found in normalizedquestion.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"if it is an ordered subset todo i'm not sure if this is working","classification":"DESIGN","projectname":"namcyan"}
{"comment":"tore: [by ys] should be storing repo once interfaces refactoring is done","classification":"DESIGN","projectname":"namcyan"}
{"comment":"returns a string representing the supplied day-of-the-week. <p> need to find a better approach. @param weekday the day of the week. @return a string representing the supplied day-of-the-week.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"returns a string corresponding to the week-in-the-month code. <p> need to find a better approach. @param count an integer code representing the week-in-the-month. @return a string corresponding to the week-in-the-month code.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"recolors map colors in the aether dimension to look nicer. could be a redirect, but that would actually probably be less compatible with other mods. however, if the game updates this won't break, which is a bad thing","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: remove once bc 1.61 is released","classification":"DESIGN","projectname":"namcyan"}
{"comment":"## todo: maybe support multiple files here?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: improve by stacking events and apply them all at the same time or something in the process method.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: throw a parsing error exception on the yaml parser when params size is less than 2.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: make hashset (no! has to be ordered list!)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: just relevant for first iteration, move before loop","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: this test will actually mess with contacts on your phone. ideally we would use a fake content provider to give us contact data...","classification":"TEST","projectname":"namcyan"}
{"comment":"test to see if the subject is empty. @return boolean. todo: this will likely go away when composearea.focus() is implemented after all the widget control is moved over.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: this can be improved further to handle large powers","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo augment the scenes\/transitions api to support this.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(felly): support directory traversal.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: configuration is not used because we don't support any other mode for now. for that : ispn-8413","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this can probably work on contentvalues_","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this thingy is crazy !! upgrading or improvements are forbidden ! coded to ce truc est legacy de ouf !! alors on arr\u00eate les conneries et plus de nouveaux dev dessus ! @param spec @param artifactname @param groupid @param artifactversion @param implemname @return @throws exception","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo adjust properties","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo implement me","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: once oracle is an officially supported dialect, this test should be moved to oraclevalidatortest.java.","classification":"TEST","projectname":"namcyan"}
{"comment":"hack: need to have padding at the end of the tag, or winamp won't see the last frame (at least 6 bytes seem to be required).","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme: do this without the suppresswarnings tag","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo use reference.name()?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: using a local buffer may be possible","classification":"DESIGN","projectname":"namcyan"}
{"comment":"we may want to test this method with more then 1 ontology. this is why the implementation is in aprivate method. this method tests if all the logical axioms in testexpectedid ontology are inferences of the testid ontology. @param testid the id of the ontology to be the input (loaded in the testdata.manager) @param testexpectedid the id of the ontology which contains logical axioms expected in the result","classification":"TEST","projectname":"namcyan"}
{"comment":"todo decide how to merge identities into a single profile for now get first identity, should be last logged in","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: actually implement permissions","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: this will break if the chart shows something else than the last getmaxgraphpoints() of values","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: fill in the result instance appropriately.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: think about composite ids.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"proceed with nested mapping. todo limit depth to avoid endless recursion?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: think about using system.arraycopy here(what is faster?)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: replace with table metadata expiration through iceberg api when https: github.com\/apache\/incubator-iceberg\/issues\/181 is resolved table.expiretablemetadata().expireolderthan(current).commit();","classification":"DESIGN","projectname":"namcyan"}
{"comment":"if read of the first char caused skipping escaped line do we need to backup and create escaped lines first?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo some way to make this change based on how long button is held?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: as of now we are allowing sys_admin to create all the services including kms","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo : should we log this?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: create a new google document in the authorized account.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"the following stuff did not work and i don't know why!","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo -- why is this here?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo empty method, if you want to definition & registry , use it.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: test case for https: github.com\/jhy\/jsoup\/issues\/845. doesn't work yet.","classification":"TEST","projectname":"namcyan"}
{"comment":"todo : take smart casts into account?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"convert a color name to a color value. @param colorname a string repr of the color. @return the color value. @todo refactor to use an enumeratedattribute (maybe?)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo add a view holder","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"bugzilla 6157: recover from xsl:output statements checkduplicates(opsrc);","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: see if we can replace the words with icons in the future","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo consider implementing other model of listeners connection, without activities being bound","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: actually implement this lol","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"currently only support python - maybe in future we'll support js too","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: add drag listener to move songs around as desired","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"map 1 .......... container succeeded 7 7 0 0 0 0 todo: can we pass custom things thru the progress?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this method finds all the candidate fields for a given type candidate fields will ony ever be fields that have either been directly annotated, or are custom appsmith types (and can hence have fields annotated for encryption within them), or are parameterized collections of custom appsmith types, or are parameterized maps with custom appsmith type values (keys are not scanned for encrypted fields) @param source document that needs to be checked for encrypted annotations @return list of candidate fields for the given type and null if this list can not be found at this time","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"line number entries don't have to appear in any particular order, so we have to do a linear search. todo: if this turns out to be a bottleneck, consider sorting the list prior to use.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo dk: think about specific method versions for each allowed type","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo improve the error message - the pointer should be at the property name, not value","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo go back to check emplid","classification":"DESIGN","projectname":"namcyan"}
{"comment":"sort the list todo understand logits!! remove 1 counts!","classification":"DESIGN","projectname":"namcyan"}
{"comment":"of course the irony is that this redirect won't work","classification":"DEFECT","projectname":"namcyan"}
{"comment":"this doesn't work -- but i'm not sure it should tests.add(new object[]{\"2m3i4m\", 2, 1, \"3i\"});","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: refactor check type of tag","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo replace with api from java 9 once that is released","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: this test passes even when this line is removed","classification":"TEST","projectname":"namcyan"}
{"comment":"todo size","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this hack seems to work on my 4.0.4 tablet.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"!! these actually aren't happening !! todo: test the def was physically deleted todo: test the schedule\/profile was not physically deleted","classification":"TEST","projectname":"namcyan"}
{"comment":"key = (secretkey) this.keystore.getkey(keyname, null); todo needed?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme: not supported yet","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"write a dockerfile for the current federate as given by filename. the file will go into src-gen\/filename.dockerfile. if there is no main reactor, then no dockerfile will be generated (it wouldn't be very useful). @param the directory where the docker compose file is generated. @param the name of the docker file. @param the name of the federate.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"#7086 - (nf.exists() && !nf.equals(of)) instead of nf.exists() - fix for win32","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"when 'node' has been created under 'parent' (by the sessioncontext user) this will send a notification to foreign servers. this call returns immediately and delegates the actuall proccessing to a daemon thread. for concurrency reasons, note that we pass in the nodeid to this method rather than the node even if we do have the node, because we want to make sure there's no concurrent access. important: this method only sends notifications to users who are in the 'acl' which means these can only be users already imported into the system, however this is ok, because we will have called savementionstonodeacl() right before calling this method so the 'acl' should completely contain all the mentions that exist in the text of the message. todo-0: we should probably extract out of this method the actual construction of the 'message' itself and then pass the message in as a parameter, and we'd be passing in without setting the 'cc + to' properties on the message and then the message would have those added inside here insead of building the entire message from scratch.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"compiler complains unless i include the full classname!!! huh?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo potentially, may break test, as coin can be created","classification":"TEST","projectname":"namcyan"}
{"comment":"todo - using a library for managing collections","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: not really sure what happens when one of the keys is not found.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"urltemplate =urltemplate.replaceall(\"%5b\", \"[\"); strange that this is needed....api issue? urltemplate =urltemplate.replaceall(\"%5d\", \"]\");","classification":"DEFECT","projectname":"namcyan"}
{"comment":"returns a list of filenames (just the filename, not the path) in working directory. todo: currently this skips over subdirs. this will throw an ioexception exception if the working directory is deleted (or possibly if a file is removed) while this method is executing.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme haven't even started yet... need to busy-wait, perhaps","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: next step direction name should be dynamic too.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo check rewrite in future","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme do we need to check at y+1?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"@todo fix this! assertconsoleoutput(list, \"[['bob':'drools', 'james':'geronimo']]\");","classification":"DEFECT","projectname":"namcyan"}
{"comment":"use the 'nzsession' program to clear out any persistent sessions. this is a hack; somehow, the connection.close() call occurring in teardown() is not actually closing the open netezza sessions. after 32 connections open like this, subsequent tests will deadlock. this method terminates the sessions forcefully.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo - could we also check if the elevator is up and limit speed?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"@todo: namespace not supported","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(hbs): allow setting of writebuffersize","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"returns a new test listener. @param ads should rds for the listener be configured to use xds? @param rdstransportversion the transport_api_version that should be set for rds @param rdsresourceversion the resource_api_version that should be set for rds @param listenername name of the new listener @param port port to use for the listener @param routename name of the test route that is associated with this listener","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo for now we only sync cloud ids during full sync. we should eventually allow more granular syncs (actor level and group level sync).","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: script tests, should fail with defaultvaluessourcetype disabled.","classification":"TEST","projectname":"namcyan"}
{"comment":"todo: caching, don't read inputs for every inference","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"@param pathtomergeschema string path to the mergeschema to be used on this document. note: will in future builds replaced by pathtomergeschemas which leads to a directory containing mergeschemas for every used namespace. if <b>null<\/b> the default mergeschemas will be used @author sholzer (12.03.2015) @return a lexemerger","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: it's not correct to say that it adapts from string, but otoh i don't think we can compute that.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"maybe check if api >= 21, and if so, use sendbroadcast instead.....??? https: developer.android.com\/reference\/android\/content\/context#sendstickybroadcast(android.content.intent)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: change the tag tag locations of dockerfile and dockstore.cwl, now should be able to publish","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"check that user has been updated todo: bizarrely, the new github java api library doesn't seem to handle bio final long count = testingpostgres.runselectstatement(\"select count(*) from enduser where location='toronto' and bio='i am a test user'\", long.class);","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: remove these probing methods, and test through mocked scriptingcontainerdelegate.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"handle transition year. todo: there may be multiple transitions in a year.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: do we need to call logout() on the logincontext?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo check for more than one def, should not happen","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo replace this.rangedattackentityhost.attackentitywithrangedattack(thost.getattacktarget(), f);","classification":"DESIGN","projectname":"namcyan"}
{"comment":"ignore todo: add an error message instead for counter key","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"create filesystem for the given user and given path todo: dx-16001 - make async configurable for hive.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"xxx what test should this be? what to do with negative values? whatever is decided here should also go in infogain.calcinfogains()","classification":"TEST","projectname":"namcyan"}
{"comment":"fixme we might want to filter current ntlm and add (leave other authorization headers untouched)","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: need to rewrite.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(cgdecker): investigate whether watchservices should keep a reference to the actual directory when securedirectorystream is supported rather than looking up the directory each time the watchservice polls","classification":"DESIGN","projectname":"namcyan"}
{"comment":"10-dec-2018, tatu: with 2.10, should serialize same as via objectmapper\/objectwriter 10-dec-2019, tatu: surprise! no, this is not how it worked in 2.9, nor does it make sense... see [databind#2566] for details","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme how can this possible be computed? ppq is pulses per quarter-note, which is dependent on the tempo of the sequencer.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"get client ip address. ipv6 is not tested yet. (code for ipv6 maybe buggy)","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: handle topics, not just queues","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme - this is probably not good, since it prevents vo extension when targetexisting is specified.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"sometime the kinematics spits out too fast of speeds, so this will fix this","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme log error","classification":"DEFECT","projectname":"namcyan"}
{"comment":"@fix the illegal group reference issue","classification":"DEFECT","projectname":"namcyan"}
{"comment":"continuously attempts to connect for at least the indicated amount of time; or indefinitely if -1. this method is useful when you are not sure if the system you are trying to connect to already is up and running. this method doesn't throw an exception, but returns true on success, false otherwise. todo: what happens if already connected? @param timeoutms @return","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: see if we are going to use this.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"nb: this can happen when chempack adds protocols ugly but harmless error","classification":"DESIGN","projectname":"namcyan"}
{"comment":"get method for struct member 'bending_damping'. <h3>field documentation<\/h3> <h4>blender source code:<\/h4> <p> xxx various hair stuff should really be separate, this struct is a horrible mess already damping of bending springs. <\/p> @see #__dna__field__bending_damping","classification":"DESIGN","projectname":"namcyan"}
{"comment":"set method for struct member 'bending_damping'. <h3>field documentation<\/h3> <h4>blender source code:<\/h4> <p> xxx various hair stuff should really be separate, this struct is a horrible mess already damping of bending springs. <\/p> @see #__dna__field__bending_damping","classification":"DESIGN","projectname":"namcyan"}
{"comment":"creates a db and populates it with the sql statements in sqlstatements. @param context the context to use to create the db @param dbname the name of the db to create @param dbversion the version to set on the db @param sqlstatements the statements to use to populate the db. this should be a single string of the form returned by sqlite3's <tt>.dump<\/tt> command (statements separated by semicolons) static public void createdbfromsqlstatements( context context, string dbname, int dbversion, string sqlstatements) { sqlitedatabase db = context.openorcreatedatabase(dbname, 0, null); todo: this is not quite safe since it assumes that all semicolons at the end of a line terminate statements. it is possible that a text field contains ;\\n. we will have to fix this if that turns out to be a problem. string[] statements = textutils.split(sqlstatements, \";\\n\"); for (string statement : statements) { if (textutils.isempty(statement)) continue; db.execsql(statement); } db.setversion(dbversion); db.close(); } returns one of the following which represent the type of the given sql statement. <ol> <li>{@link #statement_select}<\/li> <li>{@link #statement_update}<\/li> <li>{@link #statement_attach}<\/li> <li>{@link #statement_begin}<\/li> <li>{@link #statement_commit}<\/li> <li>{@link #statement_abort}<\/li> <li>{@link #statement_other}<\/li> <\/ol> @param sql the sql statement whose type is returned by this method @return one of the values listed above","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: explain more","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"todo: it might be important to allow a meaningful customization of the initial weights.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"ensure the builder is used with content we expect. currently (this could change) we should only have one datetimeparser per datecomponentordering.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"later todo return super.getenumname(fieldname);","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"warning!! do not rename this method to getoption(). it breaks beanutils, which will silently not call setoption. very annoying!","classification":"DEFECT","projectname":"namcyan"}
{"comment":"transform the current time series and baselines. todo: apply chain-of-responsibility on the transformation chain @param metricname the name of the metric on which we apply transformation and prediction @param anomalydetectioncontext anomaly detection context that contains the time series to be transformed.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: incompatible packs warning","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: what is this code for? pdpagetree pages = document.getpages(); pdpage page = pages.get(pagenumber - 1); if (page.getcontents() != null) { pdresources resources = page.getresources(); iterable<cosname> names = resources.getxobjectnames(); for (cosname name : names) { pdxobject xobj = resources.getxobject(name); if (xobj instanceof pdimagexobject) { pdimagexobject ximage = (pdimagexobject) xobj; bufferedimage bi = ximage.getimage(); if (bi.gettype() <= 0) { bufferedimage bi2 = new bufferedimage(bi.getwidth(), bi.getheight(), bufferedimage.type_int_rgb); bi2.getgraphics().drawimage(bi, 0, 0, null); return bi2; } return bi; } } }","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"highthreshold = 8 - 1 = 7 in my case todo: make sure fsecompressiontable has enough size","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: the remaining disk capacity of datanode can also be calculated into the weightlist","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo instead of going back to main menu, pause the game with pause screen?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"how sad... none of the 752 color names matched...","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo comment em @return","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"todo: do we need to check for nan and infinity?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: do we need to check for nan and infinity? todo: compare to c++ implementation todo: return zero when x is zero?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: for the excited.. what about the extension after following symlinks?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"now that everthing is mapped, we can fill in the super class fields (unless something is wacked, this will only use types in my pod or in pods already loaded)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme. loginexception may happen either because authentication failed, or for many other reasons. we should ignore the first, and log the latter.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: modlog?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: it should be possible here to say that, actually, we didn't learn anything from comparing these two values, so that probability is set to 0.5.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"sadly setmaxheight() isn't working with textflow so, we have to clip notification text manually","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"wtf! android's native audio decoder gives very poor seek accuracy!","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo need to find alternative for this datamapperroot rootdiagram = (datamapperroot)datamapperdiagrameditor.getinstance().getdiagram().getelement(); treenode inputtreenode = rootdiagram.getinput().gettreenode().get(0); treenode outputtreenode = rootdiagram.getoutput().gettreenode().get(0); string input = inputtreenode.getname(); string output = outputtreenode.getname(); string functionstart = \"function map_s_\"+input+\"_s_\"+output+\"(\" + input + \", \" + output + \"){\\n\"; string functionreturn = \"return \" + output + \";\\n\"; jsfunction mainfunction = new jsfunction(0); mainfunction.setfunctionstart(functionstart); mainfunction.setfunctionreturn(functionreturn); dmcfunctions.add(mainfunction); list<jsfunction> innerfunctions = getfunctionforthetreenode(rootdiagram.getinput().gettreenode(), dmcfunctions, 0, null); mainfunction.getfunctions().addall(innerfunctions);","classification":"DESIGN","projectname":"namcyan"}
{"comment":"get the possible python directories (don't include *dist-info and bin) note: this is an esoteric fix for zope being broken which breaks twisted - https: github.com\/kpdyer\/fteproxy\/issues\/66","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: tx: add support for batching using performop as for other update operations; add cachewrite flag support for proper writer invocation like in other ops; also support for normal\/preloaded regions?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo run configuration icon change","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo : complete","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"do above server call here","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: this doesn't work -- if you have multiple streams or processes sharing a json corpus the counts get crazy also its super annoying so i commented it out... :'(","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo what if application was already blocked?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"workaround for failing tests. when these tests are executed in separate test methods, only the first one passes successfully.","classification":"TEST","projectname":"namcyan"}
{"comment":"angle since last read, but in radians fixme i think this should be (2 * angle())\/258","classification":"DESIGN","projectname":"namcyan"}
{"comment":"tck: encoderesourceurlopaquetest","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo add you childview to rootview , usually not youself layout the view!","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fix anim duration too short","classification":"DESIGN","projectname":"namcyan"}
{"comment":"issue 358 : remove socket and semaphore on close to avoid leaking","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: clear previously-set field and avoid memory leak","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: if we fail to parse the events, we'll need to bail.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: custom host and port","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this method receives two parameters. the first parameter is the page in which we have discovered this new url and the second parameter is the new url. you should implement this function to specify whether the given url should be crawled or not (based on your crawling logic). in this example, we are instructing the crawler to ignore urls that have css, js, git, ... extensions and to only accept urls that start with \"http: www.ics.uci.edu\/\". in this case, we didn't need the referringpage parameter to make the decision.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: complain if none","classification":"DESIGN","projectname":"namcyan"}
{"comment":"note: this is wrong ? even though the ibis has left, the ibisidentifier may still be floating around in the system... we should just have some timeout on the cache entries instead... public void left(ibis.ipl.ibisidentifier id) { super.left(id); synchronized(addresses) { addresses.remove(id); } } public void died(ibis.ipl.ibisidentifier id) { super.died(id); synchronized(addresses) { addresses.remove(id); } }","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme these tests are not correct","classification":"TEST","projectname":"namcyan"}
{"comment":"metodo encargado de asignar un\/a enfermero\/a a un registro de vacunacion este metodo hace uso del metodo searchforvaccinationregister() para buscar el registro y a continuacion asignar el\/la enfermero\/a @param patient el paciente al cual se le quiere asignar el\/la enfermero\/a @param nurse el\/la enfermero\/a a asignar","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: handle pinprotocol != 1 somehow","classification":"DESIGN","projectname":"namcyan"}
{"comment":"being a bit slothful here -- actually testing that x = a^-1 * b","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: 8\/11\/20 defensively copy all collections and check for nulls?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: fix this so the label is a child of the lane or pool. there's a problem with resize feature if the label is a direct child of lane\/pool.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"metodo para consultar usuario","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"metodo para adicionar usu\u00e1rio","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"what shall we do with function, which is not called from anywhere? there are problems with them at partitioning building stage","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: eventually remove this test","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: add deletesource","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"returns the largest character or `null` if there are no characters. @deprecated please use maxornull instead","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the first character yielding the largest value of the given function or `null` if there are no characters. @deprecated please use maxbyornull instead","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the smallest character or `null` if there are no characters. @deprecated please use minornull instead","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the first character yielding the smallest value of the given function or `null` if there are no characters. @deprecated please use minbyornull instead","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: search (write in bbs)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: ask you are sure ?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme this breaks referential equality, but maybe it's ok","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: maybe add some other events (e.g. assertions) but for now all non-visible events are simply registered without having any data extracted","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: maybe skip some of this stuff if the cube is empty? (would need to use hints)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme : this last test will accept any subtitle file without checking the language","classification":"DEFECT","projectname":"namcyan"}
{"comment":"replaces the tokens within the format string with the content of the groups found within the useragentstring. <p> tokens within the format string are formatted as #{$i} where i is the index of the group in the pattern. <p> todo: i would expect that there is an easier way to do this. @param pattern the regexp pattern to search for groups within the useragentstring @param useragentstring @param format the string to replace the tokens within @return the format string with the tokens replaced with the groups found in the useragentstring","classification":"DESIGN","projectname":"namcyan"}
{"comment":"hacky urls that are might not work in all deployment scenarios","classification":"DEFECT","projectname":"namcyan"}
{"comment":"note : this is actually a funcitonal test and does not belong here. it's just being used for dev purposes and should be removed or refactored into a true unit test","classification":"TEST","projectname":"namcyan"}
{"comment":"runs after hit start: do stuff for the opmode!!!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fix for pdfdata\/sample_pdfs_html\/general-july2012\/klar--men-aldri-ferdig_dacecc.pdf in some examples the unicode table is wrong and maps the character into this odd range, but the glyph is always correct this is a sanity check to fix this mapping issue","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo auto-generated method stub assuming stock of each sport is 2","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(t48080142): when we wrap up all of these validation errors into something human friendly, this will become a build file error","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo consider moving elsewhere.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo enhance","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: manage sizes to avoid specific ones. it always must be parent size (match_parent)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: error.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme -- this isn't quite right","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: don't need to sort to find shard with fewest replicas! else figure out which shard needs more replicas","classification":"DESIGN","projectname":"namcyan"}
{"comment":"metodo que se encarga de crear un grid para la visualizacion de los datos de un movimiento @return devuelve un grid con los campos para representar movimientos","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: figure our why these tests fail on ci build, despite passing locally @test","classification":"TEST","projectname":"namcyan"}
{"comment":"todo incorporate evolution!","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: change this line","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme [vistall] support other borders?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"if a manifest doesn't have a version, the other attributes won't get written out. lame.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"need to do something here to handle things more gracefully.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: not sure what to do about this now that we have base and absolute path.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo find a way to re-send the message.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"we don't have to implement this method","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo this should return a list of what?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"bug in junit csvsource parsing - it does a trim, using a manual parsing as workaround","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo implement any common functionality here so that your heuristics can reuse them! e.g. you may want to implement the swapping of two delivery locations here!","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo avoid copying by using iterator.remove()","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: set object path for prototypes equal to the tree group object path?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: change this as soon as we switch to a java version >= 9 import java.lang.processhandle; pid = processhandle.current().pid();","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo [anistor] do not allow hybrid queries with fulltext. exception, allow a fully indexed query followed by in-memory aggregation. the aggregated or 'having' field should not be analyzed todo [anistor] do we allow aggregation in fulltext queries? todo [anistor] do not allow hybrid fulltext queries. all 'where' fields must be indexed. all projections must be stored.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(cpovirk): make sleepingstopwatch the last parameter throughout the class so that the overloads follow the usual convention: foo(int), foo(int, sleepingstopwatch)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo why is this working with so few steps?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"note: java.util.uuids compares with sign extension, imo that's wrong, so:","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo this.majorants should return an iterator","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: fix this !! org.esupportail.commons.utils.strings.stringutils .htmltotext(indcursuspojo.getcursus().getcomment()));","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: fix this !! org.esupportail.commons.utils.strings.stringutils .htmltotext(pojoqualif.getcursus().getcomment()));","classification":"DEFECT","projectname":"namcyan"}
{"comment":"this isn't good, the jedis object is not thread safe","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo what happens if solver hasn't started yet (solve() is called asynchronously)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"serializes a dom document to string. public for other transformation plugins todo refactor out to own class @param document the document to serialize. @param output the output to print errors to. @return the serialized document as string.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(peis): fix this. we should not throw an exception here.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo(peis): this doesn't have to be decode error, it can also be any network errors such as connection reset. fix this alluxio-2235.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"bug: this is a hack","classification":"DEFECT","projectname":"namcyan"}
{"comment":"test case for <a href=\"https: issues.apache.org\/jira\/browse\/calcite-1434\">[calcite-1434] aggregatefunctionimpl doesnt work if the class implements a generic interface<\/a>.","classification":"TEST","projectname":"namcyan"}
{"comment":"adjust rectangle even if not empty file from pdf.js issue 13447 todo in a class structure this should be overridable","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: unify with searchsubtitles()","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"tests whether a short number matches a valid pattern in a region. note that this doesn't verify the number is actually in use, which is impossible to tell by just looking at the number itself. @param shortnumber the short number to check as a string @param regiondialingfrom the region from which the number is dialed @return whether the short number matches a valid pattern @deprecated anyone who was using it and passing in a string with whitespace (or other formatting characters) would have been getting the wrong result. you should parse the string to phonenumber and use the method {@code #isvalidshortnumberforregion(phonenumber, string)}. this method will be removed in the next release.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: maybe sine curve is more appropriate for turning? pass the raw turn value through an input curve, then apply the turn sensitivity.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"metodo para remover acento de uma palavra usando rgex @param palavra @return","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"here, you could use queuelistview.add() too","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"walk over the terminals later might sort these","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: may want to switch to using optimistic locking in the future for better concurrency that's why this code is here... need to retry in a loop closely around\/in versionadd","classification":"DESIGN","projectname":"namcyan"}
{"comment":"7. query todo: we can not process real query for now. so it has to be a explain query","classification":"DESIGN","projectname":"namcyan"}
{"comment":"kind of kludgy, but we have other tests for the actual date math","classification":"TEST","projectname":"namcyan"}
{"comment":"this code used to be smart about which validator was used at which java-path, and provide only the contexts for that particular java-path to the processor; but that doesn't work in seer*dms where some edits are persisted but not registered to the engine!","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo : use specified repositories if needed !","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo check the type of the objects, for now just set them on the enum.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: deep clone is more correct, but probably does not matter in practice","classification":"DESIGN","projectname":"namcyan"}
{"comment":"potential flaw: use password directly in passwordauthentication()","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme: these record counts are only correct iff if duplicate keys are disregarted. this is unfortunate. keys are currently only considered based their skskode. they should be a combination of type + kode + startdato based on the register doc.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"@todo: do we need facet.query?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo: decide if year citation_year is good enough or if we should support citation_date","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo replace this with java.util.collections!","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: the null value is not allowed per oas document. the deserialization should fail.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"returns the [position]th call found in the call map with the specified state. todo: improve this logic to sort by call time.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo should be split into different tests for mean, variance, covariance, covariancematrix","classification":"TEST","projectname":"namcyan"}
{"comment":"todo: use zone id of context (entry, calendar)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo rewrite after add extension dialogs","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"to-do rethink how to manage multiple servers","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo large arrays can still generate a fair bit of bytecode, and there appears to be a gizmo issue that prevents casting to an array fix this later","classification":"DEFECT","projectname":"namcyan"}
{"comment":"add the parameter todo: this is not guareded against large collections, probably not an issue in practice","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: maybe skip writing the som at 0 iterations (0 mod x == 0 ...)","classification":"DEFECT","projectname":"namcyan"}
{"comment":"confused? copy the url and paste it in your browser.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo implement shrinking excess space to ensure that one has preferred and nothing more","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme use auth header with basic auth","classification":"DEFECT","projectname":"namcyan"}
{"comment":"wtf = (ymin[k] != ymax[k]);","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"if (wtf) break;","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"the annotation @cdiui can have a value, so using it as the type parameter of annotationliteral is somewhat problematic.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"finding base implementation: mostly recently added implementation (not advice)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo provide parameter values for delete","classification":"DESIGN","projectname":"namcyan"}
{"comment":"#if polish.midp || polish.usepolishgui wraps the given string so it fits on the specified lines. first of al it is splitted at the line-breaks ('\\n'), subsequently the substrings are splitted when they do not fit on a single line. @param value the string which should be splitted @param font the font which is used to display the font @param firstlinewidth the allowed width for the first line @param linewidth the allowed width for all other lines, linewidth >= firstlinewidth @return the array containing the substrings @deprecated please use wrap instead @see #wrap(string, font, int, int)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: only when totals add the step below","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: introduce preparedgeometry","classification":"DESIGN","projectname":"namcyan"}
{"comment":"note(zhen): ignore coremodule for now to enable a more flexible semantic modeling if (nodejsrequiredcoremodule.iscoremodule(target)) return nodejsrequiredcoremodule.make(target);","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: do not use until it is able to choose the best cardinality","classification":"DESIGN","projectname":"namcyan"}
{"comment":"drk > note: assuming here that caja.load creates frames in order of calls...if not, this method could be trouble.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme handle the imagefileoptimizationexception in one of the optimizations so it does not impact the other optimizations.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"timezone work needs to happen here","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"verifies semantics of all component definitions: + check root component has no generics + check all identifiers used are declared + check all expressions in declarations use generics or constants + check types for all expressions are valid future: + check width for all expressions - recurse through all instances (would need to do fancy stuff to check using only component definition)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo convert into model that contains electricity info also","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo add the possibility to specify more options to be specified todo use regexp matching instead of the beginning of a string","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"retrieves the authorizationinfo for the given principals from the underlying data store. when returning an instance from this method, you might want to consider using an instance of {@link simpleauthorizationinfo simpleauthorizationinfo}, as it is suitable in most cases. @param principals the primary identifying principals of the authorizationinfo that should be retrieved. @return the authorizationinfo associated with this principals. @see simpleauthorizationinfo","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: fix annotation stuff log.println(\"[red team controller: \" + quote(game.getcontroller(team.red).getidstring()) + \"]\"); log.println(\"[blue team controller: \" + quote(game.getcontroller(team.blue).getidstring()) + \"]\");","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo does not work with boot integeration tests:","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo do not use syserr prints","classification":"DESIGN","projectname":"namcyan"}
{"comment":"create a rev with an attachment, then update it keeping attachment todo we need to somehow check the attachment wasn't re-downloaded","classification":"DESIGN","projectname":"namcyan"}
{"comment":"import an existing exported database(using this program on a different computer?)","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: what happens if final count is 63 and we smelt double?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"creates the rectangles that contain matched characters in the given text. <p> todo: improve partial clipped matches: if one of the matched characters is clipped, the remaining characters lose their highlight; just the ellipsis is highlighted. <\/p> @param fulltext useful for highlighting if matches exist in clipped text and in the ellipsis @param clippedtext the clipped text to search (could be the same as fulltext) @param fm the font metrics of the rendered font @param xoffset the x offset at which text rendering starts @param yoffset the y offset at which text rendering starts (e.g. different rowheights) @param height the height of painted highlights @return a <code>list<\/code> of highlight areas to paint","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme why one day in future payment is allowed","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo all following node inherited methods will be apply under full versioning","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"buggy transaction controller samples, are classified as transactions because url column is available","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this really shouldn't happen","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: anything else?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"returns true if string s is letters only. note: this should handle i18n version to support european characters, etc. since it now uses character.isletter()","classification":"DESIGN","projectname":"namcyan"}
{"comment":"check if the replica count per ts matches the expected, returns true if it does within timeoutms, false otherwise. todo(rahul): follow similar style for this type of function will do with affinitized leaders tests. @param timeoutms number of milliseconds before timing out. @param table the table to wait for load balancing. @param replicamapexpected the expected map between cluster uuid and live, read replica count. @return true if the read only replica count for the table matches the expected within the expected time frame, false otherwise.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"create a span per target table todo maybe we can be smarter about the table name to string here?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: choose an action type.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(b\/32608089): jsunit_test does not report number of tests correctly","classification":"DEFECT","projectname":"namcyan"}
{"comment":"use cached route if current position has not changed more than 5m and we had a route todo: maybe adjust this to current zoomlevel","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme: this blows, each call to readline will reset the console's state which doesn't seem very nice.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"make a json text string representation of this jsonobject. think carefully before using this method! do you really need a string in memory? since json is used as a data transport format normally you are going to write the string out to some destination. it is far more efficient to use the <code>write<\/code> operation on this object directly. think about it: you have a tree of json objects in memory. this method will make a copy of all that data into a single string -- a second copy of the data in memory. if all you are going to do is to write that string out to a file, then use the write method to stream it directly to the file. if you are going to send the data from a server to client browser, the write directly to the output stream. this reduces memory usage. sometimes you really do need a string, so the method is provided, but use it sparingly. <\/p><p> the json is produced indented by an indentfactor amount specified. if you specify zero indent, the output will be all on a single line. the elements are alphabetized only if an indent is specified. <\/p><p> warning: this method assumes that the data structure is acyclical. an exception will be thrown if you have a cycle. @param indentfactor the number of spaces to add to each level of indentation. @return a printable, displayable, portable, transmittable representation of the object, beginning with <code>{<\/code>&nbsp;<small>(left brace)<\/small> and ending with <code>}<\/code>&nbsp;<small>(right brace)<\/small>. @throws jsonexception if the object contains an invalid number.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: test specific code, remove","classification":"TEST","projectname":"namcyan"}
{"comment":"todo handle sending errors back to handshake engine. callback?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: a lot more properties for logged-in users (see \/api\/v1\/me)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme should we support this now?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: change me when implemented","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"checkjavaversion(jdkver, p0, p1); todo optional to omit this.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: should probably use setvisibility method, but seems to not working.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: download (in background?)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme: delete this test with a workaround in the grafanaannotationtagstransformer @throws ioexception should never happen","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this is a lame test, we should really be testing something like z-score or make sure that we don't have 3sigma kind of events. too lazy to write all that code. this test very lamely tests if we have more than 5 separate nodes from the list of 10 datanodes that got allocated a container.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: preform a check for reload?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo maybe see if there is a way to find the default \"air\" for this world","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo track progress if possible final only if not canceled","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme: check that handleerror is aborting on gossip_io_error handleerror(gossip_io_error, se);","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme: check that handleerror is aborting on gossip_io_error handleerror(gossip_io_error, e);","classification":"DEFECT","projectname":"namcyan"}
{"comment":"mudo: this persist is only needed because cascading is not working for a new entity when merge is used","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo change text on button to add","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo - don't worry about having two '*' in a row? find the end of the pattern piece we need to match.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo add copy prop file to \/target\/config\/ with filtering. update - just copy the one file... for now lets copy them all","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo - fix! this case fails: ^cyan^warn^r^ if ^warn^ is evaluated first...really meant for ^cyan^ and ^r^ todo - to be resolved","classification":"DEFECT","projectname":"namcyan"}
{"comment":"a factory method pattern which creates an empty a backedlist implementation @return document me!","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"can they kick? @param name @return","classification":"TEST","projectname":"namcyan"}
{"comment":"can they ban? @param name @return","classification":"TEST","projectname":"namcyan"}
{"comment":"todo @return","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo send setting level frame and change shared prefs and display","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"test if all goals were reached. todo: this goal can be null due to problems with initial state (probably unreachable goal\/missing initial state variable) @return <code>true<\/code> if all goals are reached, <code>false<\/code> otherwise.","classification":"TEST","projectname":"namcyan"}
{"comment":"todo need to code this check somehow [5d 00] opcode [02] map portal [06 00 68 69 64 65 30 32] the entered portal name [6b 0d] to x [30 01] to y [c5 00] x [c4 01] y slea.readbyte(); string portal = slea.readmapleasciistring(); int tox = slea.readshort(); int toy = slea.readshort(); int x = slea.readshort(); int y = slea.readshort(); log.info(\"[hacks] player {} is trying to jump to a different map portal rather than the correct one\");","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: \"previous course\" and \"original course\" appear to be separate concepts; comment needs revision to explain a bit more. sets the previous course code if present. @param originalcourseid the original course id. @return thisbuilder","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the spec is wrong: it's lsb, then msb int v = (data[pos] << 4) | data[pos+1];","classification":"DEFECT","projectname":"namcyan"}
{"comment":"the spec is wrong: it's lsb, then msb","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo-lhj make configurable routestrategy of","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo stop casting documents to ints","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: perform check async spec: 'if the receiver is going to use the webmention in some way, (displaying it as a comment on a post, incrementing a \"like\" counter, notifying the author of a post), then it must perform an http get request on source [...] to confirm that it actually mentions the target.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"hack our routebuilder into the context. bean definition \/ componentscan doesn't work for routebuilders.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: use method usermanager.loginuser loading user from database","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme: some quirks lookup table would be the minor evil here","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo make this method able to take all sorts if user input.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"xxx: fix for older xml files saved with wrong shutter value","classification":"DEFECT","projectname":"namcyan"}
{"comment":"not sure what to do here.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"needsinput needs to be called - we're done with this frame ?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo maybe a more exact implementation is possible?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"returns all available sd-cards in the system (include emulated) warning: hack! based on android source code of version 4.3 (api 18) because there is no standart way to get it. todo: test on future android versions 4.4+ @return paths to all available sd-cards in the system (include emulated)","classification":"TEST","projectname":"namcyan"}
{"comment":"todo: remove left outer join and command type filter once the exchange partition bug is fixed in hive-12215","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: sbh - figure out how to register\/deregister if timing shows its needed colorsensor.geti2ccontroller().deregisterforportreadycallback(colorsensor.getport());","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: sbh - figure out how to register\/deregister if timing shows its needed colorsensor.geti2ccontroller() .registerfori2cportreadycallback(colorsensor, colorsensor.getport());","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo why start from 1? for (i = 1; files.basic[i].filename != null; i++) {","classification":"DESIGN","projectname":"namcyan"}
{"comment":"metodo para adicionar funcionario produtividade","classification":"DESIGN","projectname":"namcyan"}
{"comment":"metodo para imprimir salario do funcionario produtividade","classification":"DESIGN","projectname":"namcyan"}
{"comment":"later fix this test case - it leaves the db connection bad","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo this will need to change, for settings, etc.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo add values to this list to allow more distinguished name patterns. if preferable, ldap.dn can be removed when there is more than one value to avoid confusion.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"component.setkeepselectionvisibleonzoom(true); component.getviewport().setbackground(color.white); todo setup","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo auto-generated method stub read data from hdfs","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo add more types","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"when todo email needed","classification":"DESIGN","projectname":"namcyan"}
{"comment":"@todo: replace with stringbuilder","classification":"DESIGN","projectname":"namcyan"}
{"comment":"group by session if info is available todo make this an option","classification":"DESIGN","projectname":"namcyan"}
{"comment":"save results todo: save playerid with input field for better code quality","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fill it first with the project info, maybe this can be done more efficiently because same conversions are done for every object again","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo need a fix to make sure the value is not null","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo - make this cater for multiple lines with the same name","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme: create an item or a collection containing the special characters before searching for them","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: i18n: externalize. todo: enhance: print link to updated shop.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"now load the player's game (todo in the future do this in parallel with loading the level)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"stop the thread if the thread can bring back to runnable state , and the program will go to next loop. note: this may not work, in some case. for example, the thread is block in some reason (locking, blocking queue...), the thread is waked up , but it sleep or blocked again, and never reach the next loop in the while loop.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"shortcut to check isabsolute()","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"metodo para buscar una compra (read) @param compraid, id de la compra a buscar @return la compra con el id ingresado por parametro","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"fixme - this is likely wrong","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo : replace this with conversion at the item level.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"fixme: this is almost certainly boned. a reg could appear in the address expressions.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: for each model create separate implementation.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(zachh): support post-dial digits; consider using dialerphonenumber. do not set phoneaccounthandle so that regular precall logic will be used. the account used to place or receive the call should be ignored for voice calls.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo auto-generated method stub return super.hasrole(principal, roleidentifier);","classification":"DESIGN","projectname":"namcyan"}
{"comment":"bug report: cached geopoint is being returned as the first value. wait for the 2nd value to be returned, which is hopefully not cached?","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: convertir la serveridad","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: synchronize once per read, not once per varlet","classification":"DESIGN","projectname":"namcyan"}
{"comment":"get the path to the 32-bit app_process binary.<br> <br> it is unlikely you will need to call this method. @see #getappprocess() @see #getappprocess32bit(boolean) @return path to 32-bit app_process or app_process with unspecified bits or null","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo issue #232 fix increment topic partition name for tests on multi jvm","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: more checking here - actually parse out tile coord","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"deviation from spec: throws filesystemnotfoundexception if filesystem hasn't yet been initialized. call newfilesystem() first. need credentials. maybe set credentials after? how? todo: we can create a new one if the credentials are present by: s3: access-key:secret-key@endpoint.com","classification":"DESIGN","projectname":"namcyan"}
{"comment":"chrome sucks. http: dev.equella.com\/issues\/8025 http: dev.equella.com\/issues\/5612","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo - not yet used this.apt = (attachmentpointsubtable) subtable;","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo - not yet used this.lct = (ligaturecaretsubtable) subtable;","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the oracle driver is getting confused by this statement, claiming we have to declare some in out parameter, when we execute this as a prepared statement. might be a config issue on our side.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fixme: this won't save since it's a blob type and underlying framework needs to support it","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: don't count entering the first five-way","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: wait on the operator card instead","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: wait on the operator card to be removed","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"called by locksstestcase.teardown() to prevent events from happening after tests complete. tk - fix when this is made a lockssmanager.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"fix or deprecate fromexecutor, this test might randomly hang on ci","classification":"TEST","projectname":"namcyan"}
{"comment":"todo: when support sharding, groupid needs to be bound to shard id","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: if syntax is not busy but a request got stuck system.err.println(\"request not queued\");","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: bonus scores are different for 5 lives","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: this may take foreever. fix","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: get client\/loan\/savings details","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: pathwithinapplication?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo should we set keywords too? all tested photo managers set the same in iptc.application2.keywords and xmp.dc.subject","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo request could be null if bundle loading?","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo(qinmin): pass the error code to native.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"apply dictionary transform to clause output fixme collisions with other names possible","classification":"DEFECT","projectname":"namcyan"}
{"comment":"begin hack - issue 933","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"end hack - issue 933","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo filtering??? request.getparameter(\"filter\"); filter=1,2,3 \/groups","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"this test is migrated from orchadoopinputrowparsertest","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this way is not so good, once you cannot test for different values to see how your application will behave.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"validate a document against an iepd. note that this does not require the xsi namespace location attributes to be set in the instance. @param schemapathlist the paths to all schemas necessary to validate the instance; this is the equivalent of specifying these schemas in an xsi:schemalocation attribute in the instance @param never_used_todo_remove @param rootschemafilename the name of the document\/exchange schema @param d the document to validate @param iepdresourceresolver the resource resolver to use @return the document that was validated @throws exception if the document is not valid","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"todo: replace on check & makecurrent","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo 7: [optional] fill with your own implementation for handling asynchronous data from the driver layer to the device service","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo packet logging for ice4j is not supported at this time.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo do not forget about money later (after money widget will be available)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: support tagging in multiple locations to support all locations: 1- taxonomies\/policytags have to be created in each required location 2- update the tagger cloud function to read one mapping per location for now, we don't submit tasks for tables in other locations than the policytag location","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: get chip version directly if possible.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"checks if the token provided is saved. collects the heading token, compares it against the db records. warning : this is not a production method. todo : compare vs user, pass token securely to avoid sql injection @author channing froom @return","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: orc file now not support target file size before closed","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: array types not supported yet ...","classification":"DESIGN","projectname":"namcyan"}
{"comment":"<p> fetch the selected rows ordered by the given order with limit. <p> your {@link tablerow} implementation will need a constructor like this: {@link tablerow#tablerow(table, cursor)} \u2013 otherwise this method will fail horribly, in order to warn you as early as possible about the design failure. <\/p> @param projection a list of which columns to return. passing null will return all columns, which is inefficient. @param selection a filter declaring which rows to return, formatted as an sql where clause (excluding the where itself). passing null will return all rows for the given uri. @param selectionargs you may include ?s in selection, which will be replaced by the values from selectionargs, in the order that they appear in the selection. the values will be bound as strings. @param sortorder how to order the rows, formatted as an sql order by clause (excluding the order by itself). passing null will use the default sort order, which may be unordered. @param limit a maximum amount of result entries. @return a {@link list} of {@link tablerow}s, possibly empty, never null.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"<p> fetch the selected rows unordered and unlimited. <p> your {@link tablerow} implementation will need a constructor like this: {@link tablerow#tablerow(table, cursor)} \u2013 otherwise this method will fail horribly, in order to warn you as early as possible about the design failure. <\/p> @param selection a filter declaring which rows to return, formatted as an sql where clause (excluding the where itself). passing null will return all rows for the given uri. @return a list of {@link tablerow}s, possibly empty, never null.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"<p> fetch all rows in the table, unordered. <p> your {@link tablerow} implementation will need a constructor like this: {@link tablerow#tablerow(table, cursor)} \u2013 otherwise this method will fail horribly, in order to warn you as early as possible about the design failure. <\/p> @return a {@link list} of {@link tablerow}s, possibly empty, never null.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"<p> fetch a unique row as defined in the constructor. <p> your {@link tablerow} implementation will need a constructor like this: {@link tablerow#tablerow(table, cursor)} \u2013 otherwise this method will fail horribly, in order to warn you as early as possible about the design failure. <\/p> @param selectionargs values for all columns which identify a row uniquely. @return a {@link tablerow}, possibly null.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo - check, why we have to use the local header instead of the cds sometimes...","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo support 128+192 byte keys reduces the salt byte size to 8+2 or 12+2","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: check for possibility to chain\/join\/combine xml menus todo: manage recurring funds (ie set monthly incomes\/payments)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: remove hardcoded account names...crashes if names dont match","classification":"DEFECT","projectname":"namcyan"}
{"comment":"this test relies on the server asynchronously marking the charge as disputed. todo: find a more reliable way to do this instead of sleeping","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo use config, will need to be passed in the model map","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: this endpoint supports post if the query string is too long","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: decide squared inputs or not","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"keyattributes.transferpolicy; no transfer policy because this key is not transferable; maybe this should be a urn with \"private\" at the end.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo: an implementation that can use more than one chunk","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo - rcount = readcount; todo - if bump rcount you need to bump wcount too todo - if bump counts then you need to persist them","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"need to figure out why this doesn't work float percent = sequencer.gettickposition() sequence.getticklength() * 100;","classification":"DEFECT","projectname":"namcyan"}
{"comment":"just testing ... this is wrong pf.setid(48.11001, 11.48, 55); pf.setid(48.11002, 11.48, 56); list<nodeindexnodedescriptor> l = pf.getidplussourroundingids(48.11001, 11.48, 0); system.out.println(l);","classification":"TEST","projectname":"namcyan"}
{"comment":"non positioned parameters should always be given last (cb todo - document)","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"the following is a bad practice: conditionally running this test only if 'tlsv1.3' is supported by the jdk","classification":"TEST","projectname":"namcyan"}
{"comment":"todo need to add paging somewhere (page, items) to handle long commit histories","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"returns true if ugv currently engaged in overtaking manoeuvre. todo - may want to do some testing to make sure that the ugv start mode is initialised to overtakestage.not_overtaking in the constructor, and reset at appropriate points through the simulation. @return boolean (return true if ugv is overtaking, else false)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo @test if findcommentsbypostid_returns_postid_not_found","classification":"TEST","projectname":"namcyan"}
{"comment":"todo: do something intelligent.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"returns a bean descriptor representing this meta data object. a new descriptor instance is created with each invocation. the descriptor might be cached internally in the future should that need arise. @return a bean descriptor for this meta data object.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"fixme this line break is doubled - is this correct??","classification":"DEFECT","projectname":"namcyan"}
{"comment":"this test is illegal because weakkey is a generic type, so use the getclass hack below instead. if (!(o instanceof weakkey)) return false;","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: get the remark line in there too.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(post-p): need a way to notify to a specific browser in framework.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"need compilation for this..","classification":"DOCUMENTATION","projectname":"namcyan"}
{"comment":"could expand more processes here","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: any custom configurations that are intended to be run as part of this test should be added here.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: option - create via idea or via java.io. in latter case no need in project parameter. creates directory inside a write action and returns the resulting reference to it. if the directory already exists, does nothing. @param parent parent directory. @param name name of the directory. @return reference to the created or already existing directory.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"ignored. todo: do i have to handle this?","classification":"DESIGN","projectname":"namcyan"}
{"comment":"the superclass uses getoffsetheight, which won't work for us.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo embedded elasticsearch integration tests do not support has child operations","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"set the top block of the column to be the same type (this might go wrong with rounding)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"set the top block of the column to be the same type (this could otherwise go wrong with rounding)","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"todo: write query to retrieve all movies rated by user with id userid","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"ouch, my fingers hurt! all this typing!","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"returns the name of column used for partitioning. if this is set to null, we use the table level replica groups. otherwise, we use the partition level replica groups. todo: use partition info from segmentpartitionconfig @return name of partitioning column.","classification":"IMPLEMENTATION","projectname":"namcyan"}
{"comment":"hack: getsystemclipboard sometimes deadlocks on linux when called from the awt thread. the thread creation prevents that.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo: fix when moves_selected contains index not move","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo(b\/181858113): this test is likely obsolete once main-dex-list support is removed.","classification":"TEST","projectname":"namcyan"}
{"comment":"todo configurable output (either connector hosts or discovered connectors)","classification":"DESIGN","projectname":"namcyan"}
{"comment":"take a normal (non-priority) task out of a job queue, marking it as completed so it will not be re-delivered. todo maybe use unique delivery receipts instead of task ids to handle redelivered tasks independently @return whether the task was found and removed.","classification":"DESIGN","projectname":"namcyan"}
{"comment":"this method registers a display listener for jb mr1 and higher to workaround a android deficiency with regard to 180 degree landscape rotation. see {@link displaychangelistener} documentation for more information.","classification":"WITHOUT_CLASSIFICATION","projectname":"namcyan"}
{"comment":"this is problematic as the user code class loader is not available at this point.","classification":"DEFECT","projectname":"namcyan"}
{"comment":"kluge!! +1 to fix rounding diff between layout and rendering otherwise we can get -1 coords in output","classification":"DESIGN","projectname":"namcyan"}
{"comment":"todo review, both sides or just one","classification":"DESIGN","projectname":"namcyan"}
{"comment":"compatibility fix: boundary events should always occur at the bottom otherwise they will be drawn at an incorrect position on load","classification":"DEFECT","projectname":"namcyan"}
{"comment":"todo we should only validate versions that we have a match","classification":"DESIGN","projectname":"namcyan"}
